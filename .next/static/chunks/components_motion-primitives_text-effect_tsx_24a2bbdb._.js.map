{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/next/showStack/components/motion-primitives/text-effect.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { ReactNode } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface TextEffectProps {\n  children: ReactNode;\n  as?: React.ElementType;\n  className?: string;\n  preset?: \"fade-in-blur\" | \"slide-up\" | \"slide-down\";\n  delay?: number;\n  duration?: number;\n  speedSegment?: number;\n  per?: \"word\" | \"character\" | \"line\";\n}\n\nexport function TextEffect({\n  children,\n  as: Component = \"div\",\n  className = \"\",\n  preset = \"fade-in-blur\",\n  delay = 0,\n  duration = 0.5,\n  speedSegment = 0.05,\n  per = \"word\",\n}: TextEffectProps) {\n  const text = React.Children.toArray(children)[0] as string;\n\n  const getTextSegments = () => {\n    if (per === \"word\") return text.split(\" \").map((word) => `${word} `);\n    if (per === \"character\") return text.split(\"\");\n    if (per === \"line\") return text.split(\"\\n\");\n    return [text];\n  };\n\n  const segments = getTextSegments();\n\n  const getPresetAnimation = () => {\n    switch (preset) {\n      case \"fade-in-blur\":\n        return {\n          hidden: { opacity: 0, filter: \"blur(8px)\" },\n          visible: { opacity: 1, filter: \"blur(0px)\" },\n        };\n      case \"slide-up\":\n        return {\n          hidden: { opacity: 0, y: 20 },\n          visible: { opacity: 1, y: 0 },\n        };\n      case \"slide-down\":\n        return {\n          hidden: { opacity: 0, y: -20 },\n          visible: { opacity: 1, y: 0 },\n        };\n      default:\n        return {\n          hidden: { opacity: 0 },\n          visible: { opacity: 1 },\n        };\n    }\n  };\n\n  const animation = getPresetAnimation();\n\n  return (\n    <Component className={className}>\n      <span className=\"sr-only\">{text}</span>\n      <motion.span\n        initial=\"hidden\"\n        animate=\"visible\"\n        aria-hidden\n        className=\"inline-block\"\n      >\n        {segments.map((segment, i) => (\n          <motion.span\n            key={i}\n            className=\"inline-block\"\n            variants={animation}\n            transition={{\n              duration,\n              delay: delay + i * speedSegment,\n              ease: \"easeOut\",\n            }}\n          >\n            {segment}\n          </motion.span>\n        ))}\n      </motion.span>\n    </Component>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAgBO,SAAS,WAAW,EACzB,QAAQ,EACR,IAAI,YAAY,KAAK,EACrB,YAAY,EAAE,EACd,SAAS,cAAc,EACvB,QAAQ,CAAC,EACT,WAAW,GAAG,EACd,eAAe,IAAI,EACnB,MAAM,MAAM,EACI;IAChB,MAAM,OAAO,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;IAEhD,MAAM,kBAAkB;QACtB,IAAI,QAAQ,QAAQ,OAAO,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAAS,GAAG,KAAK,CAAC,CAAC;QACnE,IAAI,QAAQ,aAAa,OAAO,KAAK,KAAK,CAAC;QAC3C,IAAI,QAAQ,QAAQ,OAAO,KAAK,KAAK,CAAC;QACtC,OAAO;YAAC;SAAK;IACf;IAEA,MAAM,WAAW;IAEjB,MAAM,qBAAqB;QACzB,OAAQ;YACN,KAAK;gBACH,OAAO;oBACL,QAAQ;wBAAE,SAAS;wBAAG,QAAQ;oBAAY;oBAC1C,SAAS;wBAAE,SAAS;wBAAG,QAAQ;oBAAY;gBAC7C;YACF,KAAK;gBACH,OAAO;oBACL,QAAQ;wBAAE,SAAS;wBAAG,GAAG;oBAAG;oBAC5B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;gBAC9B;YACF,KAAK;gBACH,OAAO;oBACL,QAAQ;wBAAE,SAAS;wBAAG,GAAG,CAAC;oBAAG;oBAC7B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;gBAC9B;YACF;gBACE,OAAO;oBACL,QAAQ;wBAAE,SAAS;oBAAE;oBACrB,SAAS;wBAAE,SAAS;oBAAE;gBACxB;QACJ;IACF;IAEA,MAAM,YAAY;IAElB,qBACE,6LAAC;QAAU,WAAW;;0BACpB,6LAAC;gBAAK,WAAU;0BAAW;;;;;;0BAC3B,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;gBACV,SAAQ;gBACR,SAAQ;gBACR,aAAW;gBACX,WAAU;0BAET,SAAS,GAAG,CAAC,CAAC,SAAS,kBACtB,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;wBAEV,WAAU;wBACV,UAAU;wBACV,YAAY;4BACV;4BACA,OAAO,QAAQ,IAAI;4BACnB,MAAM;wBACR;kCAEC;uBATI;;;;;;;;;;;;;;;;AAejB;KA1EgB","debugId":null}}]
}