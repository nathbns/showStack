{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/showStack/components/ui/tech-card.tsx"],"sourcesContent":["import { XCircle } from \"lucide-react\";\nimport type { Tech as TechType } from \"../tech-stack/tech-stack-grid\";\n\ntype TechCardProps = {\n  id: string;\n  name: string;\n  color: string;\n  icon: React.ReactNode;\n  gridSpan?: TechType[\"gridSpan\"];\n  onRemove?: (id: string) => void;\n};\n\nexport default function TechCard({\n  id,\n  name,\n  color,\n  icon,\n  gridSpan,\n  onRemove,\n}: TechCardProps) {\n  const isExpandedCols = gridSpan?.cols && gridSpan.cols > 1;\n  const isExpandedRows = gridSpan?.rows && gridSpan.rows > 1;\n  const isActuallyExpanded = isExpandedCols || isExpandedRows;\n\n  // Calcule la hauteur minimale en fonction du nombre de lignes\n  // Chaque ligne fait au moins 150px (de gridAutoRows) + le gap\n  const styleProps: React.CSSProperties = {};\n  if (isExpandedRows && gridSpan?.rows) {\n    styleProps.minHeight = `calc(${gridSpan.rows} * 150px + (${\n      gridSpan.rows - 1\n    } * 1.5rem))`;\n  }\n\n  return (\n    <div\n      className=\"relative rounded-lg border-2 p-4 group overflow-hidden h-full w-full flex flex-col\"\n      style={{ borderColor: `${color}50`, ...styleProps }}\n    >\n      {/* Arri√®re-plan avec effet de flou */}\n      <div\n        className=\"absolute inset-0 opacity-20 z-0\"\n        style={{ backgroundColor: color }}\n      />\n\n      {onRemove && (\n        <button\n          onClick={() => onRemove(id)}\n          className=\"absolute top-2 right-2 p-1 bg-red-500/50 hover:bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity z-20\"\n          aria-label=\"Supprimer la technologie\"\n        >\n          <XCircle size={18} />\n        </button>\n      )}\n\n      {/* Contenu (reste net) */}\n      <div className=\"relative z-10 flex flex-col flex-grow h-full\">\n        <div className=\"flex items-center gap-3 mb-2\">\n          <div\n            className={`flex items-center justify-center shrink-0 ${\n              isActuallyExpanded ? \"w-10 h-10\" : \"w-8 h-8\"\n            } transition-all`}\n          >\n            {icon}\n          </div>\n          <div className=\"flex items-center gap-2 min-w-0\">\n            <div\n              className=\"w-3 h-3 rounded-full shrink-0\"\n              style={{ backgroundColor: color }}\n            />\n            <span\n              className={`text-sm font-medium ${\n                isActuallyExpanded ? \"md:text-base\" : \"\"\n              }`}\n            >\n              {name}\n            </span>\n          </div>\n        </div>\n\n        {/* Espace pour expansion potentielle en hauteur ou largeur */}\n        {isActuallyExpanded ? (\n          <div className=\"text-xs text-gray-400 mt-2 flex-grow flex flex-col justify-center\">\n            <p className=\"leading-tight\">\n              Technology: <strong>{name}</strong>\n            </p>\n            <p className=\"mt-1 leading-tight\">\n              {gridSpan?.cols === 3\n                ? \"Spans the full width, ideal for featured items.\"\n                : gridSpan?.cols === 2\n                ? \"Spans two columns for more impact.\"\n                : gridSpan?.rows === 2\n                ? \"More height for additional details.\"\n                : \"Default description.\"}\n            </p>\n          </div>\n        ) : (\n          <div className=\"flex-grow min-h-[40px]\"></div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAYe,SAAS,SAAS,EAC/B,EAAE,EACF,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,QAAQ,EACM;IACd,MAAM,iBAAiB,UAAU,QAAQ,SAAS,IAAI,GAAG;IACzD,MAAM,iBAAiB,UAAU,QAAQ,SAAS,IAAI,GAAG;IACzD,MAAM,qBAAqB,kBAAkB;IAE7C,8DAA8D;IAC9D,8DAA8D;IAC9D,MAAM,aAAkC,CAAC;IACzC,IAAI,kBAAkB,UAAU,MAAM;QACpC,WAAW,SAAS,GAAG,CAAC,KAAK,EAAE,SAAS,IAAI,CAAC,YAAY,EACvD,SAAS,IAAI,GAAG,EACjB,WAAW,CAAC;IACf;IAEA,qBACE,6LAAC;QACC,WAAU;QACV,OAAO;YAAE,aAAa,GAAG,MAAM,EAAE,CAAC;YAAE,GAAG,UAAU;QAAC;;0BAGlD,6LAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,iBAAiB;gBAAM;;;;;;YAGjC,0BACC,6LAAC;gBACC,SAAS,IAAM,SAAS;gBACxB,WAAU;gBACV,cAAW;0BAEX,cAAA,6LAAC,+MAAA,CAAA,UAAO;oBAAC,MAAM;;;;;;;;;;;0BAKnB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,WAAW,CAAC,0CAA0C,EACpD,qBAAqB,cAAc,UACpC,eAAe,CAAC;0CAEhB;;;;;;0CAEH,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,WAAU;wCACV,OAAO;4CAAE,iBAAiB;wCAAM;;;;;;kDAElC,6LAAC;wCACC,WAAW,CAAC,oBAAoB,EAC9B,qBAAqB,iBAAiB,IACtC;kDAED;;;;;;;;;;;;;;;;;;oBAMN,mCACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;;oCAAgB;kDACf,6LAAC;kDAAQ;;;;;;;;;;;;0CAEvB,6LAAC;gCAAE,WAAU;0CACV,UAAU,SAAS,IAChB,oDACA,UAAU,SAAS,IACnB,uCACA,UAAU,SAAS,IACnB,wCACA;;;;;;;;;;;6CAIR,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAKzB;KAzFwB","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/showStack/components/tech-stack/tech-stack-grid.tsx"],"sourcesContent":["\"use client\";\nimport TechCard from \"../ui/tech-card\";\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  DragEndEvent,\n  DragStartEvent,\n  DragOverlay,\n} from \"@dnd-kit/core\";\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  rectSortingStrategy,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { Button } from \"@/components/ui/button\";\nimport { GripVerticalIcon, Trash2Icon } from \"lucide-react\";\n\n// Definition of the Tech type with card size\nexport type Tech = {\n  id: string;\n  name: string;\n  color: string;\n  icon: React.ReactNode;\n  category?: string;\n  technologyId?: string;\n  gridSpan?: {\n    cols?: 1 | 2 | 3;\n    rows?: 1 | 2;\n  };\n  // Add a field for position\n  order?: number;\n  // Fields for projects\n  isProject?: boolean;\n  favicon?: string;\n  url?: string;\n  description?: string;\n};\n\ntype TechStackGridProps = {\n  technologies: Tech[];\n  onRemoveTech?: (id: string) => void;\n  onUpdateTech?: (id: string, updates: Partial<Tech>) => void;\n  onReorderTechs?: (reorderedTechs: Tech[]) => void;\n  readOnly?: boolean;\n  showHeader?: boolean;\n};\n\n// Extended props for SortableItem\ninterface SortableItemProps {\n  id: string;\n  tech: Tech;\n  onRemoveTech?: (id: string) => void;\n  onUpdateTech?: (id: string, updates: Partial<Tech>) => void;\n}\n\n// Component for an individual draggable item\nfunction SortableItem({\n  id,\n  tech,\n  onRemoveTech,\n  onUpdateTech,\n}: SortableItemProps) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id });\n\n  const style: React.CSSProperties = {\n    transition,\n    zIndex: isDragging ? 100 : undefined,\n    visibility: isDragging ? \"hidden\" : \"visible\",\n  };\n\n  const handleUpdateGridSpan = (\n    spanProperty: \"cols\" | \"rows\",\n    value: number\n  ) => {\n    if (onUpdateTech) {\n      const currentSpan = tech.gridSpan || { cols: 1, rows: 1 };\n      onUpdateTech(tech.id, {\n        gridSpan: {\n          ...currentSpan,\n          [spanProperty]: value,\n        },\n      });\n    }\n  };\n\n  // This block of code dynamically determines the Tailwind CSS classes to apply to each grid item,\n  // based on the size (span) of the technology on the grid (how many columns and rows it occupies).\n  // This allows each \"tech\" to be displayed in the grid according to its `gridSpan` properties.\n\n  const colSpanToApply = tech.gridSpan?.cols || 1; // Number of columns to occupy (default 1)\n  const rowSpanToApply = tech.gridSpan?.rows || 1; // Number of rows to occupy (default 1)\n\n  // Generate the corresponding Tailwind class for column span\n  const colSpanClass =\n    colSpanToApply === 3\n      ? \"col-span-3\"\n      : colSpanToApply === 2\n      ? \"col-span-2\"\n      : \"col-span-1\";\n\n  // Generate the corresponding Tailwind class for row span\n  const rowSpanClass = rowSpanToApply === 2 ? \"row-span-2\" : \"row-span-1\";\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`relative p-1 rounded-lg border-2 transition-all group ${colSpanClass} ${rowSpanClass} ${\n        isDragging\n          ? \"border-primary shadow-xl\"\n          : \"border-transparent hover:border-muted\"\n      }`}\n    >\n      <div className=\"absolute top-1 right-1 z-20 flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n        {onRemoveTech && (\n          <Button\n            variant=\"destructive\"\n            size=\"icon\"\n            onClick={() => onRemoveTech(tech.id)}\n            className=\"p-1 h-7 w-7\"\n          >\n            <Trash2Icon size={14} />\n          </Button>\n        )}\n      </div>\n\n      <div\n        {...attributes}\n        {...listeners}\n        className=\"absolute top-1 left-1 z-20 cursor-grab p-1.5 bg-background/50 hover:bg-muted rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n      >\n        <GripVerticalIcon size={16} />\n      </div>\n\n      <div className=\"absolute bottom-1 left-1 right-1 z-20 flex flex-col gap-0.5 items-center opacity-0 group-hover:opacity-100 transition-opacity p-0.5 bg-background/70 rounded\">\n        <div className=\"flex gap-1 justify-center\">\n          <Button\n            size=\"sm\"\n            variant={tech.gridSpan?.cols === 1 ? \"secondary\" : \"outline\"}\n            onClick={() => handleUpdateGridSpan(\"cols\", 1)}\n            className=\"px-1.5 py-0.5 text-xs h-auto min-w-[24px]\"\n          >\n            C1\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={tech.gridSpan?.cols === 2 ? \"secondary\" : \"outline\"}\n            onClick={() => handleUpdateGridSpan(\"cols\", 2)}\n            className=\"px-1.5 py-0.5 text-xs h-auto min-w-[24px]\"\n          >\n            C2\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={tech.gridSpan?.cols === 3 ? \"secondary\" : \"outline\"}\n            onClick={() => handleUpdateGridSpan(\"cols\", 3)}\n            className=\"px-1.5 py-0.5 text-xs h-auto min-w-[24px]\"\n          >\n            C3\n          </Button>\n        </div>\n        <div className=\"flex gap-1 justify-center mt-0.5\">\n          <Button\n            size=\"sm\"\n            variant={tech.gridSpan?.rows === 1 ? \"secondary\" : \"outline\"}\n            onClick={() => handleUpdateGridSpan(\"rows\", 1)}\n            className=\"px-1.5 py-0.5 text-xs h-auto min-w-[24px]\"\n          >\n            R1\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={tech.gridSpan?.rows === 2 ? \"secondary\" : \"outline\"}\n            onClick={() => handleUpdateGridSpan(\"rows\", 2)}\n            className=\"px-1.5 py-0.5 text-xs h-auto min-w-[24px]\"\n          >\n            R2\n          </Button>\n        </div>\n      </div>\n\n      <TechCard\n        id={tech.id}\n        name={tech.name}\n        color={tech.color}\n        icon={tech.icon}\n        gridSpan={tech.gridSpan}\n      />\n    </div>\n  );\n}\n\n// Simple component for display in DragOverlay\nfunction DragOverlayItem({ tech }: { tech: Tech }) {\n  const colSpanToApply = tech.gridSpan?.cols || 1;\n  const rowSpanToApply = tech.gridSpan?.rows || 1;\n  const colSpanClass =\n    colSpanToApply === 3\n      ? \"col-span-3\"\n      : colSpanToApply === 2\n      ? \"col-span-2\"\n      : \"col-span-1\";\n  const rowSpanClass = rowSpanToApply === 2 ? \"row-span-2\" : \"row-span-1\";\n\n  // Style for the overlay to make it look \"floating\"\n  const overlayStyle: React.CSSProperties = {\n    zIndex: 1000,\n    boxShadow: \"0px 10px 25px rgba(0,0,0,0.3)\",\n    position: \"absolute\",\n  };\n\n  return (\n    <div\n      style={overlayStyle}\n      className={`${colSpanClass} ${rowSpanClass} bg-card p-1 rounded-lg border-2 border-primary opacity-100`}\n    >\n      <TechCard\n        id={tech.id}\n        name={tech.name}\n        color={tech.color}\n        icon={tech.icon}\n        gridSpan={tech.gridSpan}\n      />\n    </div>\n  );\n}\n\nexport default function TechStackGrid({\n  technologies,\n  onRemoveTech,\n  onUpdateTech,\n  onReorderTechs,\n  readOnly = false,\n  showHeader = true,\n}: TechStackGridProps) {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [items, setItems] = useState<Tech[]>([]);\n  const [activeDragItem, setActiveDragItem] = useState<Tech | null>(null);\n\n  useEffect(() => {\n    const orderedTechnologies = [...technologies]\n      .map((tech, index) => ({\n        ...tech,\n        order: tech.order !== undefined ? tech.order : index,\n      }))\n      .sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\n    setItems(orderedTechnologies);\n  }, [technologies]);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 8,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const handleDragStart = (event: DragStartEvent) => {\n    const { active } = event;\n    const draggedItem = items.find(\n      (item) => String(item.id) === String(active.id)\n    );\n    if (draggedItem) {\n      setActiveDragItem(draggedItem);\n    }\n  };\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    setActiveDragItem(null);\n    const { active, over } = event;\n\n    if (over && active.id !== over.id) {\n      const activeId = String(active.id);\n      const overId = String(over.id);\n\n      const oldIndexInCurrentItems = items.findIndex(\n        (item) => String(item.id) === activeId\n      );\n      const newIndexInCurrentItems = items.findIndex(\n        (item) => String(item.id) === overId\n      );\n\n      if (oldIndexInCurrentItems === -1 || newIndexInCurrentItems === -1) {\n        console.error(\n          \"Active or hovered item not found in handleDragEnd with current items.\"\n        );\n        return;\n      }\n\n      const activeItemInitial = items[oldIndexInCurrentItems];\n      const overItemInitial = items[newIndexInCurrentItems];\n      const activeInitialSpan = activeItemInitial.gridSpan;\n      const overInitialSpan = overItemInitial.gridSpan;\n\n      let reorderedItems = arrayMove(\n        items,\n        oldIndexInCurrentItems,\n        newIndexInCurrentItems\n      );\n\n      const finalActiveItemIndex = reorderedItems.findIndex(\n        (item) => String(item.id) === activeId\n      );\n      const finalOverItemIndex = reorderedItems.findIndex(\n        (item) => String(item.id) === overId\n      );\n\n      if (finalActiveItemIndex !== -1) {\n        reorderedItems[finalActiveItemIndex] = {\n          ...reorderedItems[finalActiveItemIndex],\n          gridSpan: activeInitialSpan,\n        };\n      }\n      if (finalOverItemIndex !== -1) {\n        reorderedItems = reorderedItems.map((item) => {\n          if (String(item.id) === activeId) {\n            return { ...item, gridSpan: overInitialSpan };\n          }\n          if (String(item.id) === overId) {\n            return { ...item, gridSpan: activeInitialSpan };\n          }\n          return item;\n        });\n      }\n\n      const finalItemsWithOrder = reorderedItems.map((item, index) => ({\n        ...item,\n        order: index,\n      }));\n\n      if (onReorderTechs) {\n        onReorderTechs(finalItemsWithOrder);\n      }\n      setItems(finalItemsWithOrder);\n    }\n  };\n\n  const handleDragCancel = () => {\n    setActiveDragItem(null);\n  };\n\n  if (isEditMode) {\n    if (readOnly) return null;\n    return (\n      <div className=\"space-y-4\">\n        {showHeader && (\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Reorder mode</h3>\n            <Button onClick={() => setIsEditMode(false)} variant=\"outline\">\n              Done\n            </Button>\n          </div>\n        )}\n\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCenter}\n          onDragStart={handleDragStart}\n          onDragEnd={handleDragEnd}\n          onDragCancel={handleDragCancel}\n        >\n          <SortableContext\n            items={items.map((item) => item.id)}\n            strategy={rectSortingStrategy}\n          >\n            <div className=\"grid grid-cols-3 gap-4\">\n              {items.map((tech) => (\n                <SortableItem\n                  key={tech.id}\n                  id={String(tech.id)}\n                  tech={tech}\n                  onUpdateTech={onUpdateTech}\n                  onRemoveTech={onRemoveTech}\n                />\n              ))}\n            </div>\n          </SortableContext>\n          <DragOverlay dropAnimation={null}>\n            {activeDragItem ? <DragOverlayItem tech={activeDragItem} /> : null}\n          </DragOverlay>\n        </DndContext>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {showHeader && !readOnly && (\n        <div className=\"flex justify-end mb-4\">\n          <Button\n            onClick={() => setIsEditMode(true)}\n            variant=\"outline\"\n            className=\"text-sm\"\n          >\n            Reorder\n          </Button>\n        </div>\n      )}\n      <div className=\"grid grid-cols-3 gap-6\">\n        {items.map((tech) => {\n          const colSpanToApply = tech.gridSpan?.cols || 1;\n          const rowSpanToApply = tech.gridSpan?.rows || 1;\n          const colSpanClass =\n            colSpanToApply === 3\n              ? \"col-span-3\"\n              : colSpanToApply === 2\n              ? \"col-span-2\"\n              : \"col-span-1\";\n          const rowSpanClass =\n            rowSpanToApply === 2 ? \"row-span-2\" : \"row-span-1\";\n\n          return (\n            <div\n              className={`${colSpanClass} ${rowSpanClass}`}\n              key={String(tech.id)}\n            >\n              <div className=\"relative transition-all duration-300 ease-in-out h-full w-full\">\n                <TechCard\n                  id={tech.id}\n                  name={tech.name}\n                  color={tech.color}\n                  icon={tech.icon}\n                  gridSpan={tech.gridSpan}\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/showStack/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useSession } from \"@/lib/auth-client\";\nimport { Button } from \"@/components/ui/button\";\nimport TechStackGrid from \"@/components/tech-stack/tech-stack-grid\";\nimport { AddTechForm } from \"@/components/tech-stack/add-tech-form\";\nimport { type Tech } from \"@/components/tech-stack/tech-stack-grid\";\nimport { toast } from \"sonner\";\nimport Image from \"next/image\";\n\nexport interface UserStack {\n  id: number;\n  name: string;\n  technologies: Tech[];\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport default function Dashboard() {\n  const { data: sessionData, isPending } = useSession();\n  const [userStacks, setUserStacks] = useState<UserStack[]>([]);\n  const [isLoadingInitialData, setIsLoadingInitialData] = useState(true);\n  const [newStackName, setNewStackName] = useState(\"\");\n  const [addFormOpenStackId, setAddFormOpenStackId] = useState<number | null>(\n    null\n  );\n  const [reorderModeStackId, setReorderModeStackId] = useState<number | null>(\n    null\n  );\n\n  const hydrateTechnologies = useCallback((rawTechs: any[]): Tech[] => {\n    if (!rawTechs) return [];\n    return rawTechs.map((rawTech, index) => ({\n      id: String(rawTech.id),\n      name: rawTech.name,\n      color: rawTech.color,\n      icon: null, // √† adapter si tu veux les ic√¥nes\n      technologyId: rawTech.technologyId,\n      category: rawTech.category,\n      gridSpan: rawTech.gridSpan,\n      order: rawTech.order !== undefined ? rawTech.order : index,\n      isProject: rawTech.isProject,\n      favicon: rawTech.favicon,\n      url: rawTech.url,\n      description: rawTech.description,\n    }));\n  }, []);\n\n  useEffect(() => {\n    const fetchUserStacks = async () => {\n      if (sessionData?.user?.id) {\n        setIsLoadingInitialData(true);\n        try {\n          const response = await fetch(\"/api/tech/stack\");\n          if (!response.ok) throw new Error(\"Network or server error\");\n          const stacksData: UserStack[] = await response.json();\n          const hydratedStacks = stacksData.map((stack) => ({\n            ...stack,\n            technologies: hydrateTechnologies(stack.technologies || []),\n          }));\n          setUserStacks(hydratedStacks);\n        } catch (error) {\n          toast.error(\"Unable to load your stacks.\");\n          setUserStacks([]);\n        } finally {\n          setIsLoadingInitialData(false);\n        }\n      } else if (!isPending && !sessionData) {\n        setIsLoadingInitialData(false);\n        setUserStacks([]);\n      }\n    };\n    if (!isPending) {\n      fetchUserStacks();\n    }\n  }, [isPending, sessionData, hydrateTechnologies]);\n\n  const handleCreateNewStack = async () => {\n    if (!sessionData?.user?.id) {\n      toast.error(\"You must be logged in to create a stack.\");\n      return;\n    }\n    if (!newStackName.trim()) return;\n    try {\n      const response = await fetch(\"/api/tech/stack\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: newStackName.trim(),\n          technologies: [],\n        }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Error while creating the stack\");\n      }\n      const newStackData = await response.json();\n      const hydratedNewStack: UserStack = {\n        ...newStackData,\n        technologies: hydrateTechnologies(newStackData.technologies || []),\n      };\n      setUserStacks((prevStacks) => [...prevStacks, hydratedNewStack]);\n      setNewStackName(\"\");\n      toast.success(`Stack '${hydratedNewStack.name}' cr√©√©e !`);\n    } catch (error) {\n      toast.error((error as Error).message || \"Unable to create the stack.\");\n    }\n  };\n\n  // Ajout d'une technologie √† une stack\n  const handleAddTechToStack = (stackId: number, tech: Tech) => {\n    setUserStacks((prevStacks) =>\n      prevStacks.map((stack) =>\n        stack.id === stackId\n          ? { ...stack, technologies: [...stack.technologies, tech] }\n          : stack\n      )\n    );\n    setAddFormOpenStackId(null);\n  };\n\n  // Suppression d'une techno d'une stack\n  const handleRemoveTechFromStack = (stackId: number, techId: string) => {\n    setUserStacks((prevStacks) =>\n      prevStacks.map((stack) =>\n        stack.id === stackId\n          ? {\n              ...stack,\n              technologies: stack.technologies.filter((t) => t.id !== techId),\n            }\n          : stack\n      )\n    );\n  };\n\n  // Mise √† jour d'une techno d'une stack (resize, etc)\n  const handleUpdateTechInStack = (\n    stackId: number,\n    techId: string,\n    updates: Partial<Tech>\n  ) => {\n    setUserStacks((prevStacks) =>\n      prevStacks.map((stack) =>\n        stack.id === stackId\n          ? {\n              ...stack,\n              technologies: stack.technologies.map((t) =>\n                t.id === techId ? { ...t, ...updates } : t\n              ),\n            }\n          : stack\n      )\n    );\n  };\n\n  // R√©organisation des technologies d'une stack\n  const handleReorderTechsInStack = (\n    stackId: number,\n    reorderedTechs: Tech[]\n  ) => {\n    setUserStacks((prevStacks) =>\n      prevStacks.map((stack) =>\n        stack.id === stackId\n          ? { ...stack, technologies: reorderedTechs }\n          : stack\n      )\n    );\n    setReorderModeStackId(null);\n  };\n\n  if (isPending || isLoadingInitialData) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-[var(--background)] text-[var(--foreground)]\">\n        Chargement du dashboard‚Ä¶\n      </div>\n    );\n  }\n\n  if (!sessionData?.user?.id) {\n    return (\n      <div className=\"flex flex-col justify-center items-center min-h-screen bg-[var(--background)] text-[var(--foreground)]\">\n        <p className=\"text-xl mb-4\">\n          Connecte-toi pour acc√©der √† ton dashboard.\n        </p>\n        <Button\n          onClick={() => (window.location.href = \"/auth/signin\")}\n          className=\"bg-[var(--primary)] text-[var(--primary-foreground)] hover:bg-[var(--primary)]/90\"\n        >\n          Se connecter\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col items-center max-w-3xl mx-auto py-8 gap-8\">\n      {/* Photo de profil centr√©e */}\n      <div className=\"flex flex-col items-center\">\n        {sessionData.user.image && (\n          <Image\n            src={sessionData.user.image}\n            alt={sessionData.user.name || \"User avatar\"}\n            width={128}\n            height={128}\n            className=\"rounded-full object-cover border-4 border-[var(--primary)]\"\n          />\n        )}\n      </div>\n\n      {/* Cr√©ation de stack tr√®s discr√®te */}\n      <div className=\"w-full flex justify-center\">\n        <input\n          type=\"text\"\n          value={newStackName}\n          onChange={(e) => setNewStackName(e.target.value)}\n          placeholder=\"Nom de la nouvelle Bento Grid...\"\n          className=\"p-2 rounded bg-[var(--input)] border border-[var(--border)] text-sm mr-2 w-64\"\n        />\n        <Button size=\"sm\" variant=\"outline\" onClick={handleCreateNewStack}>\n          +\n        </Button>\n      </div>\n\n      {/* Affichage de toutes les Bento Grids */}\n      <div className=\"w-full flex flex-col gap-8\">\n        {userStacks.length === 0 && (\n          <div className=\"text-center text-muted-foreground\">\n            Aucune Bento Grid pour l'instant. Cr√©e ta premi√®re !\n          </div>\n        )}\n        {userStacks.map((stack) => {\n          const isReorder = reorderModeStackId === stack.id;\n          return (\n            <div\n              key={stack.id}\n              className=\"bg-card rounded-lg border border-border p-6 shadow-lg\"\n            >\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-xl font-bold\">{stack.name}</h2>\n                <div className=\"flex gap-2\">\n                  {isReorder ? (\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => setReorderModeStackId(null)}\n                    >\n                      Done\n                    </Button>\n                  ) : (\n                    <>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => setAddFormOpenStackId(stack.id)}\n                        disabled={isReorder}\n                      >\n                        Ajouter\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => setReorderModeStackId(stack.id)}\n                        disabled={addFormOpenStackId !== null}\n                      >\n                        Reorder\n                      </Button>\n                    </>\n                  )}\n                </div>\n              </div>\n              {/* Affichage de la grid avec ou sans mode reorder */}\n              <TechStackGrid\n                technologies={stack.technologies}\n                onRemoveTech={\n                  isReorder\n                    ? (id) => handleRemoveTechFromStack(stack.id, id)\n                    : undefined\n                }\n                onUpdateTech={\n                  isReorder\n                    ? (id, updates) =>\n                        handleUpdateTechInStack(stack.id, id, updates)\n                    : undefined\n                }\n                onReorderTechs={\n                  isReorder\n                    ? (reordered) =>\n                        handleReorderTechsInStack(stack.id, reordered)\n                    : undefined\n                }\n                readOnly={!isReorder}\n                showHeader={false}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}