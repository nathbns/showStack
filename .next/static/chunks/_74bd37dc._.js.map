{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/showStack/lib/validations/auth.ts"],"sourcesContent":["import * as z from \"zod\";\n\nexport const signInSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email address.\" }),\n  password: z.string().min(1, { message: \"Password is required.\" }),\n});\n\nexport type SignInFormData = z.infer<typeof signInSchema>;\n\nexport const signUpSchema = z.object({\n  name: z.string().min(1, { message: \"Name is required.\" }),\n  email: z.string().email({ message: \"Please enter a valid email address.\" }),\n  password: z\n    .string()\n    .min(8, { message: \"Password must be at least 8 characters long.\" }),\n  // confirmPassword: z.string(), // Vous pouvez décommenter et ajouter une logique de correspondance si nécessaire\n  profileImage: z.string().optional(), // URL de l'image de profil (optionnelle)\n});\n// .refine((data) => data.password === data.confirmPassword, { // Exemple de validation pour confirmPassword\n//   message: \"Passwords do not match\",\n//   path: [\"confirmPassword\"],\n// });\n\nexport type SignUpFormData = z.infer<typeof signUpSchema>;\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,eAAe,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IACnC,OAAO,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,CAAC;QAAE,SAAS;IAAsC;IACzE,UAAU,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAAwB;AACjE;AAIO,MAAM,eAAe,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IACnC,MAAM,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAAoB;IACvD,OAAO,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,CAAC;QAAE,SAAS;IAAsC;IACzE,UAAU,CAAA,GAAA,uIAAA,CAAA,SACD,AAAD,IACL,GAAG,CAAC,GAAG;QAAE,SAAS;IAA+C;IACpE,iHAAiH;IACjH,cAAc,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;AACnC","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/showStack/components/auth/sign-up-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport Image from \"next/image\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { RiGithubFill } from \"@remixicon/react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"sonner\";\n\nimport { signUp, signIn } from \"@/lib/auth-client\";\nimport { SignUpFormData, signUpSchema } from \"@/lib/validations/auth\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\n\nimport { Input } from \"../ui/input\";\nimport { Label } from \"../ui/label\";\n\nexport function SignUpForm() {\n  const router = useRouter();\n  const [loadingButtons, setLoadingButtons] = useState({\n    google: false,\n    email: false,\n    github: false,\n  });\n  const [profileImage, setProfileImage] = useState<string | null>(null);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm<SignUpFormData>({\n    resolver: zodResolver(signUpSchema),\n  });\n\n  const [generalError, setGeneralError] = useState<string | null>(null);\n\n  const handleSignUpSocial = async (provider: \"google\" | \"github\") => {\n    setLoadingButtons((prevState) => ({ ...prevState, [provider]: true }));\n    try {\n      await signIn.social({\n        provider: provider,\n        callbackURL: \"/dashboard\",\n      });\n    } catch (error) {\n      setGeneralError(\n        error instanceof Error ? error.message : \"An unknown error occurred\"\n      );\n      toast.error(\n        error instanceof Error ? error.message : \"An unknown error occurred\"\n      );\n    } finally {\n      setLoadingButtons((prevState) => ({ ...prevState, [provider]: false }));\n    }\n  };\n\n  const handleSignUpEmail = async (data: SignUpFormData) => {\n    try {\n      setLoadingButtons((prevState) => ({ ...prevState, email: true }));\n      setGeneralError(null);\n\n      await signUp.email({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        image: data.profileImage,\n        callbackURL: \"/dashboard\",\n      });\n      toast.success(\"Account created successfully! Redirecting...\");\n      router.push(\"/dashboard\");\n    } catch (error) {\n      setGeneralError(\n        error instanceof Error ? error.message : \"An unknown error occurred\"\n      );\n      toast.error(\n        error instanceof Error ? error.message : \"An unknown error occurred\"\n      );\n    } finally {\n      setLoadingButtons((prevState) => ({ ...prevState, email: false }));\n    }\n  };\n}\n"],"names":[],"mappings":";;;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;;AAbA;;;;;;;;AA0BO,SAAS;;IACd,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACnD,QAAQ;QACR,OAAO;QACP,QAAQ;IACV;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAkB;QAC1B,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,6HAAA,CAAA,eAAY;IACpC;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,MAAM,qBAAqB,OAAO;QAChC,kBAAkB,CAAC,YAAc,CAAC;gBAAE,GAAG,SAAS;gBAAE,CAAC,SAAS,EAAE;YAAK,CAAC;QACpE,IAAI;YACF,MAAM,wHAAA,CAAA,SAAM,CAAC,MAAM,CAAC;gBAClB,UAAU;gBACV,aAAa;YACf;QACF,EAAE,OAAO,OAAO;YACd,gBACE,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAE3C,2IAAA,CAAA,QAAK,CAAC,KAAK,CACT,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAE7C,SAAU;YACR,kBAAkB,CAAC,YAAc,CAAC;oBAAE,GAAG,SAAS;oBAAE,CAAC,SAAS,EAAE;gBAAM,CAAC;QACvE;IACF;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,kBAAkB,CAAC,YAAc,CAAC;oBAAE,GAAG,SAAS;oBAAE,OAAO;gBAAK,CAAC;YAC/D,gBAAgB;YAEhB,MAAM,wHAAA,CAAA,SAAM,CAAC,KAAK,CAAC;gBACjB,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,KAAK;gBACjB,UAAU,KAAK,QAAQ;gBACvB,OAAO,KAAK,YAAY;gBACxB,aAAa;YACf;YACA,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,gBACE,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAE3C,2IAAA,CAAA,QAAK,CAAC,KAAK,CACT,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAE7C,SAAU;YACR,kBAAkB,CAAC,YAAc,CAAC;oBAAE,GAAG,SAAS;oBAAE,OAAO;gBAAM,CAAC;QAClE;IACF;AACF;GAhEgB;;QACC,qIAAA,CAAA,YAAS;QAapB,iKAAA,CAAA,UAAO;;;KAdG","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/showStack/app/auth/signup/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { createAuthClient } from \"better-auth/client\";\nimport { SignUpForm } from \"@/components/auth/sign-up-form\";\n\nconst authClient = createAuthClient();\n\nexport default function SignUpPage() {\n  const handleGithubSignIn = async () => {\n    await authClient.signIn.social({ provider: \"github\" });\n  };\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center p-4\">\n      <SignUpForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAAA;AACA;AALA;;;;AAOA,MAAM,aAAa,CAAA,GAAA,6KAAA,CAAA,mBAAgB,AAAD;AAEnB,SAAS;IACtB,MAAM,qBAAqB;QACzB,MAAM,WAAW,MAAM,CAAC,MAAM,CAAC;YAAE,UAAU;QAAS;IACtD;IACA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,4IAAA,CAAA,aAAU;;;;;;;;;;AAGjB;KATwB","debugId":null}}]
}