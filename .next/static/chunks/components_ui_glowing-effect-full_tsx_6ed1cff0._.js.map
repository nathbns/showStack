{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathan/Desktop/showStack/components/ui/glowing-effect-full.tsx"],"sourcesContent":["\"use client\";\n\nimport { memo, useCallback, useEffect, useRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { animate, ValueAnimationTransition } from \"framer-motion\";\n\ninterface GlowingEffectProps {\n  blur?: number;\n  inactiveZone?: number;\n  proximity?: number;\n  spread?: number;\n  variant?: \"default\" | \"white\";\n  glow?: boolean;\n  className?: string;\n  disabled?: boolean;\n  movementDuration?: number;\n  borderWidth?: number;\n}\nconst GlowingEffect = memo(\n  ({\n    blur = 0,\n    spread = 20,\n    variant = \"default\",\n    glow = true,\n    className,\n    borderWidth = 1,\n    disabled = false,\n  }: GlowingEffectProps) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (disabled || !containerRef.current) return;\n\n      const element = containerRef.current;\n      element.style.setProperty(\"--active\", \"1\");\n\n      let currentAngle =\n        parseFloat(element.style.getPropertyValue(\"--start\")) || 0;\n      let animationId: number;\n\n      const animateRotation = () => {\n        currentAngle = (currentAngle + 1) % 360;\n        element.style.setProperty(\"--start\", String(currentAngle));\n        animationId = requestAnimationFrame(animateRotation);\n      };\n\n      animateRotation();\n\n      return () => {\n        if (animationId) {\n          cancelAnimationFrame(animationId);\n        }\n      };\n    }, [disabled, glow]);\n\n    return (\n      <>\n        <div\n          className={cn(\n            \"pointer-events-none absolute -inset-px hidden rounded-[inherit] border opacity-0 transition-opacity\",\n            glow && \"opacity-100\",\n            variant === \"white\" && \"border-white\",\n            disabled && \"!block\"\n          )}\n        />\n        <div\n          ref={containerRef}\n          style={\n            {\n              \"--blur\": `${blur}px`,\n              \"--spread\": spread,\n              \"--start\": \"0\",\n              \"--active\": disabled ? \"0\" : \"1\",\n              \"--glowingeffect-border-width\": `${borderWidth}px`,\n              \"--repeating-conic-gradient-times\": \"5\",\n              \"--gradient\":\n                variant === \"white\"\n                  ? `repeating-conic-gradient(\n                  from 236.84deg at 50% 50%,\n                  var(--black),\n                  var(--black) calc(25% / var(--repeating-conic-gradient-times))\n                )`\n                  : `radial-gradient(circle, #22c55e 10%, #22c55e00 20%),\n                radial-gradient(circle at 40% 40%, #16a34a 5%, #16a34a00 15%),\n                radial-gradient(circle at 60% 60%, #15803d 10%, #15803d00 20%), \n                radial-gradient(circle at 40% 60%, #166534 10%, #16653400 20%),\n                repeating-conic-gradient(\n                  from calc(var(--start) * 1deg) at 50% 50%,\n                  #22c55e 0%,\n                  #16a34a calc(25% / var(--repeating-conic-gradient-times)),\n                  #15803d calc(50% / var(--repeating-conic-gradient-times)), \n                  #166534 calc(75% / var(--repeating-conic-gradient-times)),\n                  #22c55e calc(100% / var(--repeating-conic-gradient-times))\n                )`,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"pointer-events-none absolute inset-0 rounded-[inherit] opacity-0 transition-opacity\",\n            glow && \"opacity-100\",\n            blur > 0 && \"blur-[var(--blur)] \",\n            className,\n            disabled && \"!hidden\"\n          )}\n        >\n          <div\n            className={cn(\n              \"glow\",\n              \"rounded-[inherit]\",\n              \"after:content-[''] after:rounded-[inherit] after:absolute after:inset-[calc(-1*var(--glowingeffect-border-width))]\",\n              \"after:[border:var(--glowingeffect-border-width)_dashed_transparent]\",\n              \"after:[background:var(--gradient)] after:[background-attachment:fixed]\",\n              \"after:opacity-[var(--active)] after:transition-opacity after:duration-300\",\n              \"after:[mask-clip:padding-box,border-box]\",\n              \"after:[mask-composite:intersect]\",\n              \"after:[mask-image:linear-gradient(#0000,#0000),conic-gradient(from_calc((var(--start)-var(--spread))*1deg),#00000000_0deg,#fff,#00000000_calc(var(--spread)*2deg))]\"\n            )}\n          />\n        </div>\n      </>\n    );\n  }\n);\n\nGlowingEffect.displayName = \"GlowingEffect\";\n\nexport { GlowingEffect };\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAkBA,MAAM,8BAAgB,GAAA,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,UACvB,CAAC,EACC,OAAO,CAAC,EACR,SAAS,EAAE,EACX,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,SAAS,EACT,cAAc,CAAC,EACf,WAAW,KAAK,EACG;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAE5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,YAAY,CAAC,aAAa,OAAO,EAAE;YAEvC,MAAM,UAAU,aAAa,OAAO;YACpC,QAAQ,KAAK,CAAC,WAAW,CAAC,YAAY;YAEtC,IAAI,eACF,WAAW,QAAQ,KAAK,CAAC,gBAAgB,CAAC,eAAe;YAC3D,IAAI;YAEJ,MAAM;2DAAkB;oBACtB,eAAe,CAAC,eAAe,CAAC,IAAI;oBACpC,QAAQ,KAAK,CAAC,WAAW,CAAC,WAAW,OAAO;oBAC5C,cAAc,sBAAsB;gBACtC;;YAEA;YAEA;2CAAO;oBACL,IAAI,aAAa;wBACf,qBAAqB;oBACvB;gBACF;;QACF;kCAAG;QAAC;QAAU;KAAK;IAEnB,qBACE;;0BACE,6LAAC;gBACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uGACA,QAAQ,eACR,YAAY,WAAW,gBACvB,YAAY;;;;;;0BAGhB,6LAAC;gBACC,KAAK;gBACL,OACE;oBACE,UAAU,GAAG,KAAK,EAAE,CAAC;oBACrB,YAAY;oBACZ,WAAW;oBACX,YAAY,WAAW,MAAM;oBAC7B,gCAAgC,GAAG,YAAY,EAAE,CAAC;oBAClD,oCAAoC;oBACpC,cACE,YAAY,UACR,CAAC;;;;iBAIJ,CAAC,GACE,CAAC;;;;;;;;;;;iBAWJ,CAAC;gBACN;gBAEF,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uFACA,QAAQ,eACR,OAAO,KAAK,uBACZ,WACA,YAAY;0BAGd,cAAA,6LAAC;oBACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,QACA,qBACA,sHACA,uEACA,0EACA,6EACA,4CACA,oCACA;;;;;;;;;;;;;AAMZ;;AAGF,cAAc,WAAW,GAAG","debugId":null}}]
}