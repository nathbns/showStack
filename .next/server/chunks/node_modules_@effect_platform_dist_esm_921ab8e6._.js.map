{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"error.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/error.ts"],"sourcesContent":["import * as Data from \"effect/Data\"\nimport type * as Error from \"../Error.js\"\n\n/** @internal */\nexport const PlatformErrorTypeId: Error.PlatformErrorTypeId = Symbol.for(\n  \"@effect/platform/Error/PlatformErrorTypeId\"\n) as Error.PlatformErrorTypeId\n\nconst make =\n  <A extends Error.PlatformError>(tag: A[\"_tag\"]) => (props: Omit<A, Error.PlatformError.ProvidedFields>): A =>\n    Data.struct({\n      [PlatformErrorTypeId]: PlatformErrorTypeId,\n      _tag: tag,\n      ...props\n    } as A)\n\n/** @internal */\nexport const badArgument = make<Error.BadArgument>(\"BadArgument\")\n\n/** @internal */\nexport const systemError = make<Error.SystemError>(\"SystemError\")\n"],"names":["Data","PlatformErrorTypeId","Symbol","for","make","tag","props","struct","_tag","badArgument","systemError"],"mappings":";;;;;AAAA,OAAO,KAAKA,IAAI,MAAM,aAAa;;AAI5B,MAAMC,mBAAmB,GAAA,WAAA,GAA8BC,MAAM,CAACC,GAAG,CACtE,4CAA4C,CAChB;AAE9B,MAAMC,IAAI,IACwBC,GAAc,IAAMC,KAAkD,uJACpGN,IAAI,CAACO,IAAAA,AAAM,EAAC;YACV,CAACN,mBAAmB,CAAA,EAAGA,mBAAmB;YAC1CO,IAAI,EAAEH,GAAG;YACT,GAAGC,KAAAA;SACC,CAAC;AAGJ,MAAMG,WAAW,GAAA,WAAA,GAAGL,IAAI,CAAoB,aAAa,CAAC;AAG1D,MAAMM,WAAW,GAAA,WAAA,GAAGN,IAAI,CAAoB,aAAa,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"file":"Error.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Error.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Cause from \"effect/Cause\"\nimport * as Data from \"effect/Data\"\nimport * as Predicate from \"effect/Predicate\"\nimport type { Simplify } from \"effect/Types\"\nimport * as internal from \"./internal/error.js\"\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const PlatformErrorTypeId: unique symbol = internal.PlatformErrorTypeId\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type PlatformErrorTypeId = typeof PlatformErrorTypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isPlatformError = (u: unknown): u is PlatformError => Predicate.hasProperty(u, PlatformErrorTypeId)\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport type PlatformError = BadArgument | SystemError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport const TypeIdError = <const TypeId extends symbol, const Tag extends string>(\n  typeId: TypeId,\n  tag: Tag\n): new<A extends Record<string, any>>(\n  args: Simplify<A>\n) =>\n  & Cause.YieldableError\n  & Record<TypeId, TypeId>\n  & { readonly _tag: Tag }\n  & Readonly<A> =>\n{\n  class Base extends Data.Error<{}> {\n    readonly _tag = tag\n  }\n  ;(Base.prototype as any)[typeId] = typeId\n  ;(Base.prototype as any).name = tag\n  return Base as any\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace PlatformError {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface Base {\n    readonly [PlatformErrorTypeId]: typeof PlatformErrorTypeId\n    readonly _tag: string\n    readonly module: \"Clipboard\" | \"Command\" | \"FileSystem\" | \"KeyValueStore\" | \"Path\" | \"Stream\" | \"Terminal\"\n    readonly method: string\n    readonly message: string\n  }\n\n  /**\n   * @since 1.0.0\n   */\n  export type ProvidedFields = PlatformErrorTypeId | \"_tag\"\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport interface BadArgument extends PlatformError.Base {\n  readonly _tag: \"BadArgument\"\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport const BadArgument: (props: Omit<BadArgument, PlatformError.ProvidedFields>) => BadArgument = internal.badArgument\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type SystemErrorReason =\n  | \"AlreadyExists\"\n  | \"BadResource\"\n  | \"Busy\"\n  | \"InvalidData\"\n  | \"NotFound\"\n  | \"PermissionDenied\"\n  | \"TimedOut\"\n  | \"UnexpectedEof\"\n  | \"Unknown\"\n  | \"WouldBlock\"\n  | \"WriteZero\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface SystemError extends PlatformError.Base {\n  readonly _tag: \"SystemError\"\n  readonly reason: SystemErrorReason\n  readonly syscall?: string | undefined\n  readonly pathOrDescriptor: string | number\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport const SystemError: (props: Omit<SystemError, PlatformError.ProvidedFields>) => SystemError = internal.systemError\n"],"names":["Data","Predicate","internal","PlatformErrorTypeId","isPlatformError","u","hasProperty","TypeIdError","typeId","tag","Base","Error","_tag","prototype","name","BadArgument","badArgument","SystemError","systemError"],"mappings":";;;;;;;AAIA,OAAO,KAAKA,IAAI,MAAM,aAAa;AACnC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAE7C,OAAO,KAAKC,QAAQ,MAAM,qBAAqB;;;;AAMxC,MAAMC,mBAAmB,8KAAkBD,QAAQ,CAACC,aAAmB;AAYvE,MAAMC,eAAe,IAAIC,CAAU,IAAyBJ,SAAS,CAACK,4JAAAA,AAAW,EAACD,CAAC,EAAEF,mBAAmB,CAAC;AAYzG,MAAMI,WAAW,GAAGA,CACzBC,MAAc,EACdC,GAAQ,KAOQ;IAEhB,MAAMC,IAAK,yJAAQV,IAAI,CAACW,GAAS;QACtBC,IAAI,GAAGH,GAAG,CAAA;;;IAEnBC,IAAI,CAACG,SAAiB,CAACL,MAAM,CAAC,GAAGA,MAAM;IACvCE,IAAI,CAACG,SAAiB,CAACC,IAAI,GAAGL,GAAG;IACnC,OAAOC,IAAW;AACpB,CAAC;AAoCM,MAAMK,WAAW,8KAA4Eb,QAAQ,CAACc,KAAW;AAkCjH,MAAMC,WAAW,8KAA4Ef,QAAQ,CAACgB,KAAW","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"file":"Cookies.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Cookies.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Duration from \"effect/Duration\"\nimport * as Either from \"effect/Either\"\nimport { dual, identity } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport { type Pipeable, pipeArguments } from \"effect/Pipeable\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Record from \"effect/Record\"\nimport type * as Types from \"effect/Types\"\nimport { TypeIdError } from \"./Error.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/Cookies\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isCookies = (u: unknown): u is Cookies => Predicate.hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Cookies extends Pipeable, Inspectable.Inspectable {\n  readonly [TypeId]: TypeId\n  readonly cookies: Record.ReadonlyRecord<string, Cookie>\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const CookieTypeId: unique symbol = Symbol.for(\"@effect/platform/Cookies/Cookie\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type CookieTypeId = typeof CookieTypeId\n\n/**\n * @since 1.0.0\n * @category cookie\n */\nexport interface Cookie extends Inspectable.Inspectable {\n  readonly [CookieTypeId]: CookieTypeId\n  readonly name: string\n  readonly value: string\n  readonly valueEncoded: string\n  readonly options?: {\n    readonly domain?: string | undefined\n    readonly expires?: Date | undefined\n    readonly maxAge?: Duration.DurationInput | undefined\n    readonly path?: string | undefined\n    readonly priority?: \"low\" | \"medium\" | \"high\" | undefined\n    readonly httpOnly?: boolean | undefined\n    readonly secure?: boolean | undefined\n    readonly partitioned?: boolean | undefined\n    readonly sameSite?: \"lax\" | \"strict\" | \"none\" | undefined\n  } | undefined\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const ErrorTypeId: unique symbol = Symbol.for(\"@effect/platform/Cookies/CookieError\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type ErrorTypeId = typeof ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport class CookiesError extends TypeIdError(ErrorTypeId, \"CookieError\")<{\n  readonly reason: \"InvalidName\" | \"InvalidValue\" | \"InvalidDomain\" | \"InvalidPath\" | \"InfinityMaxAge\"\n}> {\n  get message() {\n    return this.reason\n  }\n}\n\nconst Proto: Omit<Cookies, \"cookies\"> = {\n  [TypeId]: TypeId,\n  ...Inspectable.BaseProto,\n  toJSON(this: Cookies) {\n    return {\n      _id: \"@effect/platform/Cookies\",\n      cookies: Record.map(this.cookies, (cookie) => cookie.toJSON())\n    }\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n}\n\n/**\n * Create a Cookies object from an Iterable\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const fromReadonlyRecord = (cookies: Record.ReadonlyRecord<string, Cookie>): Cookies => {\n  const self = Object.create(Proto)\n  self.cookies = cookies\n  return self\n}\n\n/**\n * Create a Cookies object from an Iterable\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const fromIterable = (cookies: Iterable<Cookie>): Cookies => {\n  const record: Record<string, Cookie> = {}\n  for (const cookie of cookies) {\n    record[cookie.name] = cookie\n  }\n  return fromReadonlyRecord(record)\n}\n\n/**\n * Create a Cookies object from a set of Set-Cookie headers\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const fromSetCookie = (headers: Iterable<string> | string): Cookies => {\n  const arrayHeaders = typeof headers === \"string\" ? [headers] : headers\n  const cookies: Array<Cookie> = []\n  for (const header of arrayHeaders) {\n    const cookie = parseSetCookie(header.trim())\n    if (Option.isSome(cookie)) {\n      cookies.push(cookie.value)\n    }\n  }\n\n  return fromIterable(cookies)\n}\n\nfunction parseSetCookie(header: string): Option.Option<Cookie> {\n  const parts = header.split(\";\").map((_) => _.trim()).filter((_) => _ !== \"\")\n  if (parts.length === 0) {\n    return Option.none()\n  }\n\n  const firstEqual = parts[0].indexOf(\"=\")\n  if (firstEqual === -1) {\n    return Option.none()\n  }\n  const name = parts[0].slice(0, firstEqual)\n  if (!fieldContentRegExp.test(name)) {\n    return Option.none()\n  }\n\n  const valueEncoded = parts[0].slice(firstEqual + 1)\n  const value = tryDecodeURIComponent(valueEncoded)\n\n  if (parts.length === 1) {\n    return Option.some(Object.assign(Object.create(CookieProto), {\n      name,\n      value,\n      valueEncoded\n    }))\n  }\n\n  const options: Types.Mutable<Cookie[\"options\"]> = {}\n\n  for (let i = 1; i < parts.length; i++) {\n    const part = parts[i]\n    const equalIndex = part.indexOf(\"=\")\n    const key = equalIndex === -1 ? part : part.slice(0, equalIndex).trim()\n    const value = equalIndex === -1 ? undefined : part.slice(equalIndex + 1).trim()\n\n    switch (key.toLowerCase()) {\n      case \"domain\": {\n        if (value === undefined) {\n          break\n        }\n        const domain = value.trim().replace(/^\\./, \"\")\n        if (domain) {\n          options.domain = domain\n        }\n        break\n      }\n      case \"expires\": {\n        if (value === undefined) {\n          break\n        }\n        const date = new Date(value)\n        if (!isNaN(date.getTime())) {\n          options.expires = date\n        }\n        break\n      }\n      case \"max-age\": {\n        if (value === undefined) {\n          break\n        }\n        const maxAge = parseInt(value, 10)\n        if (!isNaN(maxAge)) {\n          options.maxAge = Duration.seconds(maxAge)\n        }\n        break\n      }\n      case \"path\": {\n        if (value === undefined) {\n          break\n        }\n        if (value[0] === \"/\") {\n          options.path = value\n        }\n        break\n      }\n      case \"priority\": {\n        if (value === undefined) {\n          break\n        }\n        switch (value.toLowerCase()) {\n          case \"low\":\n            options.priority = \"low\"\n            break\n          case \"medium\":\n            options.priority = \"medium\"\n            break\n          case \"high\":\n            options.priority = \"high\"\n            break\n        }\n        break\n      }\n      case \"httponly\": {\n        options.httpOnly = true\n        break\n      }\n      case \"secure\": {\n        options.secure = true\n        break\n      }\n      case \"partitioned\": {\n        options.partitioned = true\n        break\n      }\n      case \"samesite\": {\n        if (value === undefined) {\n          break\n        }\n        switch (value.toLowerCase()) {\n          case \"lax\":\n            options.sameSite = \"lax\"\n            break\n          case \"strict\":\n            options.sameSite = \"strict\"\n            break\n          case \"none\":\n            options.sameSite = \"none\"\n            break\n        }\n        break\n      }\n    }\n  }\n\n  return Option.some(Object.assign(Object.create(CookieProto), {\n    name,\n    value,\n    valueEncoded,\n    options: Object.keys(options).length > 0 ? options : undefined\n  }))\n}\n\n/**\n * An empty Cookies object\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: Cookies = fromIterable([])\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isEmpty = (self: Cookies): boolean => Record.isEmptyRecord(self.cookies)\n\n// eslint-disable-next-line no-control-regex\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/\n\nconst CookieProto = {\n  [CookieTypeId]: CookieTypeId,\n  ...Inspectable.BaseProto,\n  toJSON(this: Cookie) {\n    return {\n      _id: \"@effect/platform/Cookies/Cookie\",\n      name: this.name,\n      value: this.value,\n      options: this.options\n    }\n  }\n}\n\n/**\n * Create a new cookie\n *\n * @since 1.0.0\n * @category constructors\n */\nexport function makeCookie(\n  name: string,\n  value: string,\n  options?: Cookie[\"options\"] | undefined\n): Either.Either<Cookie, CookiesError> {\n  if (!fieldContentRegExp.test(name)) {\n    return Either.left(new CookiesError({ reason: \"InvalidName\" }))\n  }\n  const encodedValue = encodeURIComponent(value)\n  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {\n    return Either.left(new CookiesError({ reason: \"InvalidValue\" }))\n  }\n\n  if (options !== undefined) {\n    if (options.domain !== undefined && !fieldContentRegExp.test(options.domain)) {\n      return Either.left(new CookiesError({ reason: \"InvalidDomain\" }))\n    }\n\n    if (options.path !== undefined && !fieldContentRegExp.test(options.path)) {\n      return Either.left(new CookiesError({ reason: \"InvalidPath\" }))\n    }\n\n    if (options.maxAge !== undefined && !Duration.isFinite(Duration.decode(options.maxAge))) {\n      return Either.left(new CookiesError({ reason: \"InfinityMaxAge\" }))\n    }\n  }\n\n  return Either.right(Object.assign(Object.create(CookieProto), {\n    name,\n    value,\n    valueEncoded: encodedValue,\n    options\n  }))\n}\n\n/**\n * Create a new cookie, throwing an error if invalid\n *\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeMakeCookie = (\n  name: string,\n  value: string,\n  options?: Cookie[\"options\"] | undefined\n): Cookie => Either.getOrThrowWith(makeCookie(name, value, options), identity)\n\n/**\n * Add a cookie to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const setCookie: {\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (cookie: Cookie): (self: Cookies) => Cookies\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, cookie: Cookie): Cookies\n} = dual(\n  2,\n  (self: Cookies, cookie: Cookie) =>\n    fromReadonlyRecord(Record.set(\n      self.cookies,\n      cookie.name,\n      cookie\n    ))\n)\n\n/**\n * Add multiple cookies to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const setAllCookie: {\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (cookies: Iterable<Cookie>): (self: Cookies) => Cookies\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, cookies: Iterable<Cookie>): Cookies\n} = dual(2, (self: Cookies, cookies: Iterable<Cookie>) => {\n  const record = { ...self.cookies }\n  for (const cookie of cookies) {\n    record[cookie.name] = cookie\n  }\n  return fromReadonlyRecord(record)\n})\n\n/**\n * Combine two Cookies objects, removing duplicates from the first\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const merge: {\n  /**\n   * Combine two Cookies objects, removing duplicates from the first\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (that: Cookies): (self: Cookies) => Cookies\n  /**\n   * Combine two Cookies objects, removing duplicates from the first\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, that: Cookies): Cookies\n} = dual(2, (self: Cookies, that: Cookies) =>\n  fromReadonlyRecord({\n    ...self.cookies,\n    ...that.cookies\n  }))\n\n/**\n * Remove a cookie by name\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const remove: {\n  /**\n   * Remove a cookie by name\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: Cookies) => Cookies\n  /**\n   * Remove a cookie by name\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string): Cookies\n} = dual(2, (self: Cookies, name: string) => fromReadonlyRecord(Record.remove(self.cookies, name)))\n\n/**\n * Get a cookie from a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const get: {\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: Cookies) => Option.Option<Cookie>\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string): Option.Option<Cookie>\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string): Option.Option<Cookie> => Record.get(self.cookies, name)\n)\n\n/**\n * Get a cookie from a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const getValue: {\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: Cookies) => Option.Option<string>\n  /**\n   * Get a cookie from a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string): Option.Option<string>\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string): Option.Option<string> =>\n    Option.map(Record.get(self.cookies, name), (cookie) => cookie.value)\n)\n\n/**\n * Add a cookie to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const set: {\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (self: Cookies) => Either.Either<Cookies, CookiesError>\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]): Either.Either<Cookies, CookiesError>\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]) =>\n    Either.map(\n      makeCookie(name, value, options),\n      (cookie) => fromReadonlyRecord(Record.set(self.cookies, name, cookie))\n    )\n)\n\n/**\n * Add a cookie to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSet: {\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (self: Cookies) => Cookies\n  /**\n   * Add a cookie to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]): Cookies\n} = dual(\n  (args) => isCookies(args[0]),\n  (self: Cookies, name: string, value: string, options?: Cookie[\"options\"]) =>\n    fromReadonlyRecord(Record.set(\n      self.cookies,\n      name,\n      unsafeMakeCookie(name, value, options)\n    ))\n)\n\n/**\n * Add multiple cookies to a Cookies object\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const setAll: {\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): (self: Cookies) => Either.Either<Cookies, CookiesError>\n  /**\n   * Add multiple cookies to a Cookies object\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Either.Either<Cookies, CookiesError>\n} = dual(\n  2,\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Either.Either<Cookies, CookiesError> => {\n    const record: Record<string, Cookie> = { ...self.cookies }\n    for (const [name, value, options] of cookies) {\n      const either = makeCookie(name, value, options)\n      if (Either.isLeft(either)) {\n        return either as Either.Left<CookiesError, never>\n      }\n      record[name] = either.right\n    }\n    return Either.right(fromReadonlyRecord(record))\n  }\n)\n\n/**\n * Add multiple cookies to a Cookies object, throwing an error if invalid\n *\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSetAll: {\n  /**\n   * Add multiple cookies to a Cookies object, throwing an error if invalid\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): (self: Cookies) => Cookies\n  /**\n   * Add multiple cookies to a Cookies object, throwing an error if invalid\n   *\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Cookies\n} = dual(\n  2,\n  (\n    self: Cookies,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookie[\"options\"]]>\n  ): Cookies => Either.getOrThrowWith(setAll(self, cookies), identity)\n)\n\n/**\n * Serialize a cookie into a string\n *\n * Adapted from https://github.com/fastify/fastify-cookie under MIT License\n *\n * @since 1.0.0\n * @category encoding\n */\nexport function serializeCookie(self: Cookie): string {\n  let str = self.name + \"=\" + self.valueEncoded\n\n  if (self.options === undefined) {\n    return str\n  }\n  const options = self.options\n\n  if (options.maxAge !== undefined) {\n    const maxAge = Duration.toSeconds(options.maxAge)\n    str += \"; Max-Age=\" + Math.trunc(maxAge)\n  }\n\n  if (options.domain !== undefined) {\n    str += \"; Domain=\" + options.domain\n  }\n\n  if (options.path !== undefined) {\n    str += \"; Path=\" + options.path\n  }\n\n  if (options.priority !== undefined) {\n    switch (options.priority) {\n      case \"low\":\n        str += \"; Priority=Low\"\n        break\n      case \"medium\":\n        str += \"; Priority=Medium\"\n        break\n      case \"high\":\n        str += \"; Priority=High\"\n        break\n    }\n  }\n\n  if (options.expires !== undefined) {\n    str += \"; Expires=\" + options.expires.toUTCString()\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\"\n  }\n\n  if (options.secure) {\n    str += \"; Secure\"\n  }\n\n  // Draft implementation to support Chrome from 2024-Q1 forward.\n  // See https://datatracker.ietf.org/doc/html/draft-cutler-httpbis-partitioned-cookies#section-2.1\n  if (options.partitioned) {\n    str += \"; Partitioned\"\n  }\n\n  if (options.sameSite !== undefined) {\n    switch (options.sameSite) {\n      case \"lax\":\n        str += \"; SameSite=Lax\"\n        break\n      case \"strict\":\n        str += \"; SameSite=Strict\"\n        break\n      case \"none\":\n        str += \"; SameSite=None\"\n        break\n    }\n  }\n\n  return str\n}\n\n/**\n * Serialize a Cookies object into a Cookie header\n *\n * @since 1.0.0\n * @category encoding\n */\nexport const toCookieHeader = (self: Cookies): string =>\n  Object.values(self.cookies).map((cookie) => `${cookie.name}=${cookie.valueEncoded}`).join(\"; \")\n\n/**\n * To record\n *\n * @since 1.0.0\n * @category encoding\n */\nexport const toRecord = (self: Cookies): Record<string, string> => {\n  const record: Record<string, string> = {}\n  const cookies = Object.values(self.cookies)\n  for (let index = 0; index < cookies.length; index++) {\n    const cookie = cookies[index]\n    record[cookie.name] = cookie.value\n  }\n  return record\n}\n\n/**\n * Serialize a Cookies object into Headers object containing one or more Set-Cookie headers\n *\n * @since 1.0.0\n * @category encoding\n */\nexport const toSetCookieHeaders = (self: Cookies): Array<string> => Object.values(self.cookies).map(serializeCookie)\n\n/**\n * Parse a cookie header into a record of key-value pairs\n *\n * Adapted from https://github.com/fastify/fastify-cookie under MIT License\n *\n * @since 1.0.0\n * @category decoding\n */\nexport function parseHeader(header: string): Record<string, string> {\n  const result: Record<string, string> = {}\n\n  const strLen = header.length\n  let pos = 0\n  let terminatorPos = 0\n\n  while (true) {\n    if (terminatorPos === strLen) break\n    terminatorPos = header.indexOf(\";\", pos)\n    if (terminatorPos === -1) terminatorPos = strLen // This is the last pair\n\n    let eqIdx = header.indexOf(\"=\", pos)\n    if (eqIdx === -1) break // No key-value pairs left\n    if (eqIdx > terminatorPos) {\n      // Malformed key-value pair\n      pos = terminatorPos + 1\n      continue\n    }\n\n    const key = header.substring(pos, eqIdx++).trim()\n    if (result[key] === undefined) {\n      const val = header.charCodeAt(eqIdx) === 0x22\n        ? header.substring(eqIdx + 1, terminatorPos - 1).trim()\n        : header.substring(eqIdx, terminatorPos).trim()\n\n      result[key] = !(val.indexOf(\"%\") === -1)\n        ? tryDecodeURIComponent(val)\n        : val\n    }\n\n    pos = terminatorPos + 1\n  }\n\n  return result\n}\n\nconst tryDecodeURIComponent = (str: string): string => {\n  try {\n    return decodeURIComponent(str)\n  } catch (_) {\n    return str\n  }\n}\n"],"names":["Duration","Either","dual","identity","Inspectable","Option","pipeArguments","Predicate","Record","TypeIdError","TypeId","Symbol","for","isCookies","u","hasProperty","CookieTypeId","ErrorTypeId","CookiesError","message","reason","Proto","BaseProto","toJSON","_id","cookies","map","cookie","pipe","arguments","fromReadonlyRecord","self","Object","create","fromIterable","record","name","fromSetCookie","headers","arrayHeaders","header","parseSetCookie","trim","isSome","push","value","parts","split","_","filter","length","none","firstEqual","indexOf","slice","fieldContentRegExp","test","valueEncoded","tryDecodeURIComponent","some","assign","CookieProto","options","i","part","equalIndex","key","undefined","toLowerCase","domain","replace","date","Date","isNaN","getTime","expires","maxAge","parseInt","seconds","path","priority","httpOnly","secure","partitioned","sameSite","keys","empty","isEmpty","isEmptyRecord","makeCookie","left","encodedValue","encodeURIComponent","isFinite","decode","right","unsafeMakeCookie","getOrThrowWith","setCookie","set","setAllCookie","merge","that","remove","get","args","getValue","unsafeSet","setAll","either","isLeft","unsafeSetAll","serializeCookie","str","toSeconds","Math","trunc","toUTCString","toCookieHeader","values","join","toRecord","index","toSetCookieHeaders","parseHeader","result","strLen","pos","terminatorPos","eqIdx","substring","val","charCodeAt","decodeURIComponent"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"file":"Headers.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Headers.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as FiberRef from \"effect/FiberRef\"\nimport * as FiberRefs from \"effect/FiberRefs\"\nimport { dual, identity } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport { type Redactable, symbolRedactable } from \"effect/Inspectable\"\nimport type * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Record from \"effect/Record\"\nimport * as Redacted from \"effect/Redacted\"\nimport * as Schema from \"effect/Schema\"\nimport * as String from \"effect/String\"\nimport type { Mutable } from \"effect/Types\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const HeadersTypeId: unique symbol = Symbol.for(\"@effect/platform/Headers\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type HeadersTypeId = typeof HeadersTypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isHeaders = (u: unknown): u is Headers => Predicate.hasProperty(u, HeadersTypeId)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Headers extends Redactable {\n  readonly [HeadersTypeId]: HeadersTypeId\n  readonly [key: string]: string\n}\n\nconst Proto = Object.assign(Object.create(null), {\n  [HeadersTypeId]: HeadersTypeId,\n  [symbolRedactable](\n    this: Headers,\n    fiberRefs: FiberRefs.FiberRefs\n  ): Record<string, string | Redacted.Redacted<string>> {\n    return redact(this, FiberRefs.getOrDefault(fiberRefs, currentRedactedNames))\n  }\n})\n\nconst make = (input: Record.ReadonlyRecord<string, string>): Mutable<Headers> =>\n  Object.assign(Object.create(Proto), input) as Headers\n\n/**\n * @since 1.0.0\n * @category schemas\n */\nexport const schemaFromSelf: Schema.Schema<Headers> = Schema.declare(isHeaders, {\n  identifier: \"Headers\",\n  equivalence: () => Record.getEquivalence(String.Equivalence)\n})\n\n/**\n * @since 1.0.0\n * @category schemas\n */\nexport const schema: Schema.Schema<Headers, Record.ReadonlyRecord<string, string>> = Schema\n  .transform(\n    Schema.Record({ key: Schema.String, value: Schema.String }),\n    schemaFromSelf,\n    { strict: true, decode: (record) => fromInput(record), encode: identity }\n  )\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Input =\n  | Record.ReadonlyRecord<string, string | ReadonlyArray<string> | undefined>\n  | Iterable<readonly [string, string]>\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: Headers = Object.create(Proto)\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromInput: (input?: Input) => Headers = (input) => {\n  if (input === undefined) {\n    return empty\n  } else if (Symbol.iterator in input) {\n    const out: Record<string, string> = Object.create(Proto)\n    for (const [k, v] of input) {\n      out[k.toLowerCase()] = v\n    }\n    return out as Headers\n  }\n  const out: Record<string, string> = Object.create(Proto)\n  for (const [k, v] of Object.entries(input)) {\n    if (Array.isArray(v)) {\n      out[k.toLowerCase()] = v.join(\", \")\n    } else if (v !== undefined) {\n      out[k.toLowerCase()] = v as string\n    }\n  }\n  return out as Headers\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeFromRecord = (input: Record.ReadonlyRecord<string, string>): Headers =>\n  Object.setPrototypeOf(input, Proto) as Headers\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const has: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: Headers) => boolean\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string): boolean\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string) => (self: Headers) => boolean,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string) => boolean\n>(2, (self, key) => key.toLowerCase() in self)\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const get: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: Headers) => Option.Option<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string): Option.Option<string>\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string) => (self: Headers) => Option.Option<string>,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string) => Option.Option<string>\n>(2, (self, key) => Record.get(self as Record<string, string>, key.toLowerCase()))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const set: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string, value: string): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string, value: string) => Headers\n>(3, (self, key, value) => {\n  const out = make(self)\n  out[key.toLowerCase()] = value\n  return out\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Input): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Input): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Input) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Input) => Headers\n>(2, (self, headers) =>\n  make({\n    ...self,\n    ...fromInput(headers)\n  }))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const merge: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Headers): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Headers): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (headers: Headers) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, headers: Headers) => Headers\n>(2, (self, headers) => {\n  const out = make(self)\n  Object.assign(out, headers)\n  return out\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const remove: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: Headers) => Headers\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string): Headers\n} = dual<\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string) => (self: Headers) => Headers,\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string) => Headers\n>(2, (self, key) => {\n  const out = make(self)\n  delete out[key.toLowerCase()]\n  return out\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const redact: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string | RegExp | ReadonlyArray<string | RegExp>): (self: Headers) => Record<string, string | Redacted.Redacted>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: Headers, key: string | RegExp | ReadonlyArray<string | RegExp>): Record<string, string | Redacted.Redacted>\n} = dual(\n  2,\n  (\n    self: Headers,\n    key: string | RegExp | ReadonlyArray<string | RegExp>\n  ): Record<string, string | Redacted.Redacted> => {\n    const out: Record<string, string | Redacted.Redacted> = { ...self }\n    const modify = (key: string | RegExp) => {\n      if (typeof key === \"string\") {\n        const k = key.toLowerCase()\n        if (k in self) {\n          out[k] = Redacted.make(self[k])\n        }\n      } else {\n        for (const name in self) {\n          if (key.test(name)) {\n            out[name] = Redacted.make(self[name])\n          }\n        }\n      }\n    }\n    if (Array.isArray(key)) {\n      for (let i = 0; i < key.length; i++) {\n        modify(key[i])\n      }\n    } else {\n      modify(key as string | RegExp)\n    }\n    return out\n  }\n)\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentRedactedNames: FiberRef.FiberRef<ReadonlyArray<string | RegExp>> = globalValue(\n  \"@effect/platform/Headers/currentRedactedNames\",\n  () =>\n    FiberRef.unsafeMake<ReadonlyArray<string | RegExp>>([\n      \"authorization\",\n      \"cookie\",\n      \"set-cookie\",\n      \"x-api-key\"\n    ])\n)\n"],"names":["FiberRef","FiberRefs","dual","identity","globalValue","symbolRedactable","Predicate","Record","Redacted","Schema","String","HeadersTypeId","Symbol","for","isHeaders","u","hasProperty","Proto","Object","assign","create","fiberRefs","redact","getOrDefault","currentRedactedNames","make","input","schemaFromSelf","declare","identifier","equivalence","getEquivalence","Equivalence","schema","transform","key","value","strict","decode","record","fromInput","encode","empty","undefined","iterator","out","k","v","toLowerCase","entries","Array","isArray","join","unsafeFromRecord","setPrototypeOf","has","self","get","set","setAll","headers","merge","remove","modify","name","test","i","length","unsafeMake"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"file":"Template.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Template.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Effect from \"effect/Effect\"\nimport * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Stream from \"effect/Stream\"\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type PrimitiveValue = string | number | bigint | boolean | null | undefined\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type Primitive = PrimitiveValue | ReadonlyArray<PrimitiveValue>\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type Interpolated =\n  | Primitive\n  | Option.Option<Primitive>\n  | Effect.Effect<Primitive, any, any>\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport type InterpolatedWithStream = Interpolated | Stream.Stream<Primitive, any, any>\n\n/**\n * @category models\n * @since 1.0.0\n */\nexport declare namespace Interpolated {\n  /**\n   * @category models\n   * @since 1.0.0\n   */\n  export type Context<A> = A extends infer T ? T extends Option.Option<infer _> ? never\n    : T extends Stream.Stream<infer _A, infer _E, infer R> ? R\n    : never\n    : never\n\n  /**\n   * @category models\n   * @since 1.0.0\n   */\n  export type Error<A> = A extends infer T ? T extends Option.Option<infer _> ? never\n    : T extends Stream.Stream<infer _A, infer E, infer _R> ? E\n    : never\n    : never\n}\n\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function make<A extends ReadonlyArray<Interpolated>>(\n  strings: TemplateStringsArray,\n  ...args: A\n): Effect.Effect<\n  string,\n  Interpolated.Error<A[number]>,\n  Interpolated.Context<A[number]>\n> {\n  const argsLength = args.length\n  const values = new Array<string>(argsLength)\n  const effects: Array<\n    [index: number, effect: Effect.Effect<Primitive, any, any>]\n  > = []\n\n  for (let i = 0; i < argsLength; i++) {\n    const arg = args[i]\n\n    if (Option.isOption(arg)) {\n      values[i] = arg._tag === \"Some\" ? primitiveToString(arg.value) : \"\"\n    } else if (isSuccess(arg)) {\n      values[i] = primitiveToString((arg as any).effect_instruction_i0)\n    } else if (Effect.isEffect(arg)) {\n      effects.push([i, arg])\n    } else {\n      values[i] = primitiveToString(arg)\n    }\n  }\n\n  if (effects.length === 0) {\n    return Effect.succeed(consolidate(strings, values))\n  }\n\n  return Effect.map(\n    Effect.forEach(\n      effects,\n      ([index, effect]) =>\n        Effect.tap(effect, (value) => {\n          values[index] = primitiveToString(value)\n        }),\n      {\n        concurrency: \"inherit\",\n        discard: true\n      }\n    ),\n    (_) => consolidate(strings, values)\n  )\n}\n\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function stream<A extends ReadonlyArray<InterpolatedWithStream>>(\n  strings: TemplateStringsArray,\n  ...args: A\n): Stream.Stream<\n  string,\n  Interpolated.Error<A[number]>,\n  Interpolated.Context<A[number]>\n> {\n  const chunks: Array<string | Stream.Stream<string, any, any>> = []\n  let buffer = \"\"\n\n  for (let i = 0, len = args.length; i < len; i++) {\n    buffer += strings[i]\n    const arg = args[i]\n    if (Option.isOption(arg)) {\n      buffer += arg._tag === \"Some\" ? primitiveToString(arg.value) : \"\"\n    } else if (isSuccess(arg)) {\n      buffer += primitiveToString((arg as any).effect_instruction_i0)\n    } else if (Predicate.hasProperty(arg, Stream.StreamTypeId)) {\n      if (buffer.length > 0) {\n        chunks.push(buffer)\n        buffer = \"\"\n      }\n      if (Effect.isEffect(arg)) {\n        chunks.push(Effect.map(arg, primitiveToString))\n      } else {\n        chunks.push(Stream.map(arg, primitiveToString))\n      }\n    } else {\n      buffer += primitiveToString(arg)\n    }\n  }\n\n  buffer += strings[strings.length - 1]\n  if (buffer.length > 0) {\n    chunks.push(buffer)\n    buffer = \"\"\n  }\n\n  return Stream.flatMap(\n    Stream.fromIterable(chunks),\n    (chunk) => typeof chunk === \"string\" ? Stream.succeed(chunk) : chunk,\n    { concurrency: \"unbounded\" }\n  )\n}\n\nfunction primitiveToString(value: Primitive): string {\n  if (Array.isArray(value)) {\n    return value.map(primitiveToString).join(\"\")\n  }\n\n  switch (typeof value) {\n    case \"string\": {\n      return value\n    }\n    case \"number\":\n    case \"bigint\": {\n      return value.toString()\n    }\n    case \"boolean\": {\n      return value ? \"true\" : \"false\"\n    }\n    default: {\n      return \"\"\n    }\n  }\n}\n\nfunction consolidate(\n  strings: ReadonlyArray<string>,\n  values: ReadonlyArray<string>\n): string {\n  let out = \"\"\n  for (let i = 0, len = values.length; i < len; i++) {\n    out += strings[i]\n    out += values[i]\n  }\n  return out + strings[strings.length - 1]\n}\n\nfunction isSuccess(u: unknown) {\n  return Effect.isEffect(u) && (u as any)._op === \"Success\"\n}\n"],"names":["Effect","Option","Predicate","Stream","make","strings","args","argsLength","length","values","Array","effects","i","arg","isOption","_tag","primitiveToString","value","isSuccess","effect_instruction_i0","isEffect","push","succeed","consolidate","map","forEach","index","effect","tap","concurrency","discard","_","stream","chunks","buffer","len","hasProperty","StreamTypeId","flatMap","fromIterable","chunk","isArray","join","toString","out","u","_op"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"file":"UrlParams.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/UrlParams.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Arr from \"effect/Array\"\nimport type * as Effect from \"effect/Effect\"\nimport * as Either from \"effect/Either\"\nimport { dual } from \"effect/Function\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface UrlParams extends ReadonlyArray<readonly [string, string]> {}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Input =\n  | CoercibleRecord\n  | Iterable<readonly [string, Coercible]>\n  | URLSearchParams\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Coercible = string | number | bigint | boolean | null | undefined\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface CoercibleRecord {\n  readonly [key: string]: Coercible | ReadonlyArray<Coercible> | CoercibleRecord\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromInput = (input: Input): UrlParams => {\n  const parsed = fromInputNested(input)\n  const out: Array<[string, string]> = []\n  for (let i = 0; i < parsed.length; i++) {\n    if (Array.isArray(parsed[i][0])) {\n      const [keys, value] = parsed[i] as [Array<string>, string]\n      out.push([`${keys[0]}[${keys.slice(1).join(\"][\")}]`, value])\n    } else {\n      out.push(parsed[i] as [string, string])\n    }\n  }\n  return out\n}\n\nconst fromInputNested = (input: Input): Array<[string | Array<string>, any]> => {\n  const entries = Symbol.iterator in input ? Arr.fromIterable(input) : Object.entries(input)\n  const out: Array<[string | Array<string>, string]> = []\n  for (const [key, value] of entries) {\n    if (Array.isArray(value)) {\n      for (let i = 0; i < value.length; i++) {\n        if (value[i] !== undefined) {\n          out.push([key, String(value[i])])\n        }\n      }\n    } else if (typeof value === \"object\") {\n      const nested = fromInputNested(value as CoercibleRecord)\n      for (const [k, v] of nested) {\n        out.push([[key, ...(typeof k === \"string\" ? [k] : k)], v])\n      }\n    } else if (value !== undefined) {\n      out.push([key, String(value)])\n    }\n  }\n  return out\n}\n\n/**\n * @since 1.0.0\n * @category schemas\n */\nexport const schema: Schema.Schema<UrlParams, ReadonlyArray<readonly [string, string]>> = Schema.Array(\n  Schema.Tuple(Schema.String, Schema.String)\n).annotations({ identifier: \"UrlParams\" })\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: UrlParams = []\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const getAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => ReadonlyArray<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): ReadonlyArray<string>\n} = dual(\n  2,\n  (self: UrlParams, key: string): ReadonlyArray<string> =>\n    Arr.reduce(self, [] as Array<string>, (acc, [k, value]) => {\n      if (k === key) {\n        acc.push(value)\n      }\n      return acc\n    })\n)\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const getFirst: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => Option.Option<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): Option.Option<string>\n} = dual(2, (self: UrlParams, key: string): Option.Option<string> =>\n  Option.map(\n    Arr.findFirst(self, ([k]) => k === key),\n    ([, value]) => value\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const getLast: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => Option.Option<string>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): Option.Option<string>\n} = dual(2, (self: UrlParams, key: string): Option.Option<string> =>\n  Option.map(\n    Arr.findLast(self, ([k]) => k === key),\n    ([, value]) => value\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const set: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: Coercible): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string, value: Coercible): UrlParams\n} = dual(3, (self: UrlParams, key: string, value: Coercible): UrlParams =>\n  Arr.append(\n    Arr.filter(self, ([k]) => k !== key),\n    [key, String(value)]\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Input): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, input: Input): UrlParams\n} = dual(2, (self: UrlParams, input: Input): UrlParams => {\n  const toSet = fromInput(input)\n  const keys = toSet.map(([k]) => k)\n  return Arr.appendAll(\n    Arr.filter(self, ([k]) => keys.includes(k)),\n    toSet\n  )\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const append: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: Coercible): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string, value: Coercible): UrlParams\n} = dual(3, (self: UrlParams, key: string, value: Coercible): UrlParams =>\n  Arr.append(\n    self,\n    [key, String(value)]\n  ))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Input): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, input: Input): UrlParams\n} = dual(2, (self: UrlParams, input: Input): UrlParams => Arr.appendAll(self, fromInput(input)))\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const remove: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string): (self: UrlParams) => UrlParams\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: UrlParams, key: string): UrlParams\n} = dual(2, (self: UrlParams, key: string): UrlParams => Arr.filter(self, ([k]) => k !== key))\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const makeUrl = (url: string, params: UrlParams, hash: Option.Option<string>): Either.Either<URL, Error> => {\n  try {\n    const urlInstance = new URL(url, baseUrl())\n    for (let i = 0; i < params.length; i++) {\n      const [key, value] = params[i]\n      if (value !== undefined) {\n        urlInstance.searchParams.append(key, value)\n      }\n    }\n    if (hash._tag === \"Some\") {\n      urlInstance.hash = hash.value\n    }\n    return Either.right(urlInstance)\n  } catch (e) {\n    return Either.left(e as Error)\n  }\n}\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toString = (self: UrlParams): string => new URLSearchParams(self as any).toString()\n\nconst baseUrl = (): string | undefined => {\n  if (\n    \"location\" in globalThis &&\n    globalThis.location !== undefined &&\n    globalThis.location.origin !== undefined &&\n    globalThis.location.pathname !== undefined\n  ) {\n    return location.origin + location.pathname\n  }\n  return undefined\n}\n\n/**\n * Builds a `Record` containing all the key-value pairs in the given `UrlParams`\n * as `string` (if only one value for a key) or a `NonEmptyArray<string>`\n * (when more than one value for a key)\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { UrlParams } from \"@effect/platform\"\n *\n * const urlParams = UrlParams.fromInput({ a: 1, b: true, c: \"string\", e: [1, 2, 3] })\n * const result = UrlParams.toRecord(urlParams)\n *\n * assert.deepStrictEqual(\n *   result,\n *   { \"a\": \"1\", \"b\": \"true\", \"c\": \"string\", \"e\": [\"1\", \"2\", \"3\"] }\n * )\n * ```\n *\n * @since 1.0.0\n * @category conversions\n */\nexport const toRecord = (self: UrlParams): Record<string, string | Arr.NonEmptyArray<string>> => {\n  const out: Record<string, string | Arr.NonEmptyArray<string>> = {}\n  for (const [k, value] of self) {\n    const curr = out[k]\n    if (curr === undefined) {\n      out[k] = value\n    } else if (typeof curr === \"string\") {\n      out[k] = [curr, value]\n    } else {\n      curr.push(value)\n    }\n  }\n  return out\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined): {\n  (\n    field: string\n  ): (self: UrlParams) => Effect.Effect<A, ParseResult.ParseError, R>\n  (\n    self: UrlParams,\n    field: string\n  ): Effect.Effect<A, ParseResult.ParseError, R>\n} => {\n  const parse = Schema.decodeUnknown(Schema.parseJson(schema), options)\n  return dual<\n    (field: string) => (self: UrlParams) => Effect.Effect<A, ParseResult.ParseError, R>,\n    (self: UrlParams, field: string) => Effect.Effect<A, ParseResult.ParseError, R>\n  >(2, (self, field) => parse(Option.getOrElse(getLast(self, field), () => \"\")))\n}\n\n/**\n * Extract schema from all key-value pairs in the given `UrlParams`.\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Effect, Schema } from \"effect\"\n * import { UrlParams } from \"@effect/platform\"\n *\n * Effect.gen(function* () {\n *   const urlParams = UrlParams.fromInput({ \"a\": [10, \"string\"], \"b\": false })\n *   const result = yield* UrlParams.schemaStruct(Schema.Struct({\n *     a: Schema.Tuple(Schema.NumberFromString, Schema.String),\n *     b: Schema.BooleanFromString\n *   }))(urlParams)\n *\n *   assert.deepStrictEqual(result, {\n *     a: [10, \"string\"],\n *     b: false\n *   })\n * })\n * ```\n *\n * @since 1.0.0\n * @category schema\n */\nexport const schemaStruct = <A, I extends Record<string, string | ReadonlyArray<string> | undefined>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) =>\n(self: UrlParams): Effect.Effect<A, ParseResult.ParseError, R> => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return parse(toRecord(self))\n}\n"],"names":["Arr","Either","dual","Option","Schema","fromInput","input","parsed","fromInputNested","out","i","length","Array","isArray","keys","value","push","slice","join","entries","Symbol","iterator","fromIterable","Object","key","undefined","String","nested","k","v","schema","Tuple","annotations","identifier","empty","getAll","self","reduce","acc","getFirst","map","findFirst","getLast","findLast","set","append","filter","setAll","toSet","appendAll","includes","remove","makeUrl","url","params","hash","urlInstance","URL","baseUrl","searchParams","_tag","right","e","left","toString","URLSearchParams","globalThis","location","origin","pathname","toRecord","curr","schemaJson","options","parse","decodeUnknown","parseJson","field","getOrElse","schemaStruct"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"file":"fileSystem.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/fileSystem.ts"],"sourcesContent":["import * as Channel from \"effect/Channel\"\nimport * as Chunk from \"effect/Chunk\"\nimport { GenericTag } from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport { identity, pipe } from \"effect/Function\"\nimport * as Layer from \"effect/Layer\"\nimport * as Option from \"effect/Option\"\nimport * as Sink from \"effect/Sink\"\nimport * as Stream from \"effect/Stream\"\nimport * as Error from \"../Error.js\"\nimport type { File, FileSystem, Size as Size_, SizeInput, StreamOptions } from \"../FileSystem.js\"\n\n/** @internal */\nexport const tag = GenericTag<FileSystem>(\"@effect/platform/FileSystem\")\n\n/** @internal */\nexport const Size = (bytes: SizeInput) => typeof bytes === \"bigint\" ? bytes as Size_ : BigInt(bytes) as Size_\n\n/** @internal */\nexport const KiB = (n: number) => Size(n * 1024)\n\n/** @internal */\nexport const MiB = (n: number) => Size(n * 1024 * 1024)\n\n/** @internal */\nexport const GiB = (n: number) => Size(n * 1024 * 1024 * 1024)\n\n/** @internal */\nexport const TiB = (n: number) => Size(n * 1024 * 1024 * 1024 * 1024)\n\nconst bigint1024 = BigInt(1024)\nconst bigintPiB = bigint1024 * bigint1024 * bigint1024 * bigint1024 * bigint1024\n\n/** @internal */\nexport const PiB = (n: number) => Size(BigInt(n) * bigintPiB)\n\n/** @internal */\nexport const make = (\n  impl: Omit<FileSystem, \"exists\" | \"readFileString\" | \"stream\" | \"sink\" | \"writeFileString\">\n): FileSystem => {\n  return tag.of({\n    ...impl,\n    exists: (path) =>\n      pipe(\n        impl.access(path),\n        Effect.as(true),\n        Effect.catchTag(\"SystemError\", (e) => e.reason === \"NotFound\" ? Effect.succeed(false) : Effect.fail(e))\n      ),\n    readFileString: (path, encoding) =>\n      Effect.tryMap(impl.readFile(path), {\n        try: (_) => new TextDecoder(encoding).decode(_),\n        catch: () =>\n          Error.BadArgument({\n            module: \"FileSystem\",\n            method: \"readFileString\",\n            message: \"invalid encoding\"\n          })\n      }),\n    stream: (path, options) =>\n      pipe(\n        impl.open(path, { flag: \"r\" }),\n        options?.offset ?\n          Effect.tap((file) => file.seek(options.offset!, \"start\")) :\n          identity,\n        Effect.map((file) => stream(file, options)),\n        Stream.unwrapScoped\n      ),\n    sink: (path, options) =>\n      pipe(\n        impl.open(path, { flag: \"w\", ...options }),\n        Effect.map((file) => Sink.forEach((_: Uint8Array) => file.writeAll(_))),\n        Sink.unwrapScoped\n      ),\n    writeFileString: (path, data, options) =>\n      Effect.flatMap(\n        Effect.try({\n          try: () => new TextEncoder().encode(data),\n          catch: () =>\n            Error.BadArgument({\n              module: \"FileSystem\",\n              method: \"writeFileString\",\n              message: \"could not encode string\"\n            })\n        }),\n        (_) => impl.writeFile(path, _, options)\n      )\n  })\n}\n\nconst notFound = (method: string, path: string) =>\n  Error.SystemError({\n    module: \"FileSystem\",\n    method,\n    reason: \"NotFound\",\n    message: \"No such file or directory\",\n    pathOrDescriptor: path\n  })\n\n/** @internal */\nexport const makeNoop = (\n  fileSystem: Partial<FileSystem>\n): FileSystem => {\n  return {\n    access(path) {\n      return Effect.fail(notFound(\"access\", path))\n    },\n    chmod(path) {\n      return Effect.fail(notFound(\"chmod\", path))\n    },\n    chown(path) {\n      return Effect.fail(notFound(\"chown\", path))\n    },\n    copy(path) {\n      return Effect.fail(notFound(\"copy\", path))\n    },\n    copyFile(path) {\n      return Effect.fail(notFound(\"copyFile\", path))\n    },\n    exists() {\n      return Effect.succeed(false)\n    },\n    link(path) {\n      return Effect.fail(notFound(\"link\", path))\n    },\n    makeDirectory() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempDirectory() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempDirectoryScoped() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempFile() {\n      return Effect.die(\"not implemented\")\n    },\n    makeTempFileScoped() {\n      return Effect.die(\"not implemented\")\n    },\n    open(path) {\n      return Effect.fail(notFound(\"open\", path))\n    },\n    readDirectory(path) {\n      return Effect.fail(notFound(\"readDirectory\", path))\n    },\n    readFile(path) {\n      return Effect.fail(notFound(\"readFile\", path))\n    },\n    readFileString(path) {\n      return Effect.fail(notFound(\"readFileString\", path))\n    },\n    readLink(path) {\n      return Effect.fail(notFound(\"readLink\", path))\n    },\n    realPath(path) {\n      return Effect.fail(notFound(\"realPath\", path))\n    },\n    remove() {\n      return Effect.void\n    },\n    rename(oldPath) {\n      return Effect.fail(notFound(\"rename\", oldPath))\n    },\n    sink(path) {\n      return Sink.fail(notFound(\"sink\", path))\n    },\n    stat(path) {\n      return Effect.fail(notFound(\"stat\", path))\n    },\n    stream(path) {\n      return Stream.fail(notFound(\"stream\", path))\n    },\n    symlink(fromPath) {\n      return Effect.fail(notFound(\"symlink\", fromPath))\n    },\n    truncate(path) {\n      return Effect.fail(notFound(\"truncate\", path))\n    },\n    utimes(path) {\n      return Effect.fail(notFound(\"utimes\", path))\n    },\n    watch(path) {\n      return Stream.fail(notFound(\"watch\", path))\n    },\n    writeFile(path) {\n      return Effect.fail(notFound(\"writeFile\", path))\n    },\n    writeFileString(path) {\n      return Effect.fail(notFound(\"writeFileString\", path))\n    },\n    ...fileSystem\n  }\n}\n\n/** @internal */\nexport const layerNoop = (\n  fileSystem: Partial<FileSystem>\n): Layer.Layer<FileSystem> => Layer.succeed(tag, makeNoop(fileSystem))\n\n/** @internal */\nconst stream = (file: File, {\n  bufferSize = 16,\n  bytesToRead: bytesToRead_,\n  chunkSize: chunkSize_ = Size(64 * 1024)\n}: StreamOptions = {}) => {\n  const bytesToRead = bytesToRead_ !== undefined ? Size(bytesToRead_) : undefined\n  const chunkSize = Size(chunkSize_)\n\n  function loop(\n    totalBytesRead: bigint\n  ): Channel.Channel<Chunk.Chunk<Uint8Array>, unknown, Error.PlatformError, unknown, void, unknown> {\n    if (bytesToRead !== undefined && bytesToRead <= totalBytesRead) {\n      return Channel.void\n    }\n\n    const toRead = bytesToRead !== undefined && (bytesToRead - totalBytesRead) < chunkSize\n      ? bytesToRead - totalBytesRead\n      : chunkSize\n\n    return Channel.flatMap(\n      file.readAlloc(toRead),\n      Option.match({\n        onNone: () => Channel.void,\n        onSome: (buf) =>\n          Channel.flatMap(\n            Channel.write(Chunk.of(buf)),\n            (_) => loop(totalBytesRead + BigInt(buf.length))\n          )\n      })\n    )\n  }\n\n  return Stream.bufferChunks(\n    Stream.fromChannel(loop(BigInt(0))),\n    { capacity: bufferSize }\n  )\n}\n"],"names":["Channel","Chunk","GenericTag","Effect","identity","pipe","Layer","Option","Sink","Stream","Error","tag","Size","bytes","BigInt","KiB","n","MiB","GiB","TiB","bigint1024","bigintPiB","PiB","make","impl","of","exists","path","access","as","catchTag","e","reason","succeed","fail","readFileString","encoding","tryMap","readFile","try","_","TextDecoder","decode","catch","BadArgument","module","method","message","stream","options","open","flag","offset","tap","file","seek","map","unwrapScoped","sink","forEach","writeAll","writeFileString","data","flatMap","TextEncoder","encode","writeFile","notFound","SystemError","pathOrDescriptor","makeNoop","fileSystem","chmod","chown","copy","copyFile","link","makeDirectory","die","makeTempDirectory","makeTempDirectoryScoped","makeTempFile","makeTempFileScoped","readDirectory","readLink","realPath","remove","void","rename","oldPath","stat","symlink","fromPath","truncate","utimes","watch","layerNoop","bufferSize","bytesToRead","bytesToRead_","chunkSize","chunkSize_","undefined","loop","totalBytesRead","toRead","readAlloc","match","onNone","onSome","buf","write","length","bufferChunks","fromChannel","capacity"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"file":"FileSystem.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/FileSystem.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Brand from \"effect/Brand\"\nimport type { Tag } from \"effect/Context\"\nimport * as Context from \"effect/Context\"\nimport * as Data from \"effect/Data\"\nimport type * as Effect from \"effect/Effect\"\nimport type { Layer } from \"effect/Layer\"\nimport type { Option } from \"effect/Option\"\nimport type { Scope } from \"effect/Scope\"\nimport type { Sink } from \"effect/Sink\"\nimport type { Stream } from \"effect/Stream\"\nimport type { PlatformError } from \"./Error.js\"\nimport * as internal from \"./internal/fileSystem.js\"\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport interface FileSystem {\n  /**\n   * Check if a file can be accessed.\n   * You can optionally specify the level of access to check for.\n   */\n  readonly access: (\n    path: string,\n    options?: AccessFileOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Copy a file or directory from `fromPath` to `toPath`.\n   *\n   * Equivalent to `cp -r`.\n   */\n  readonly copy: (\n    fromPath: string,\n    toPath: string,\n    options?: CopyOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Copy a file from `fromPath` to `toPath`.\n   */\n  readonly copyFile: (\n    fromPath: string,\n    toPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Change the permissions of a file.\n   */\n  readonly chmod: (\n    path: string,\n    mode: number\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Change the owner and group of a file.\n   */\n  readonly chown: (\n    path: string,\n    uid: number,\n    gid: number\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Check if a path exists.\n   */\n  readonly exists: (\n    path: string\n  ) => Effect.Effect<boolean, PlatformError>\n  /**\n   * Create a hard link from `fromPath` to `toPath`.\n   */\n  readonly link: (\n    fromPath: string,\n    toPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Create a directory at `path`. You can optionally specify the mode and\n   * whether to recursively create nested directories.\n   */\n  readonly makeDirectory: (\n    path: string,\n    options?: MakeDirectoryOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Create a temporary directory.\n   *\n   * By default the directory will be created inside the system's default\n   * temporary directory, but you can specify a different location by setting\n   * the `directory` option.\n   *\n   * You can also specify a prefix for the directory name by setting the\n   * `prefix` option.\n   */\n  readonly makeTempDirectory: (\n    options?: MakeTempDirectoryOptions\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Create a temporary directory inside a scope.\n   *\n   * Functionally equivalent to `makeTempDirectory`, but the directory will be\n   * automatically deleted when the scope is closed.\n   */\n  readonly makeTempDirectoryScoped: (\n    options?: MakeTempDirectoryOptions\n  ) => Effect.Effect<string, PlatformError, Scope>\n  /**\n   * Create a temporary file.\n   * The directory creation is functionally equivalent to `makeTempDirectory`.\n   * The file name will be a randomly generated string.\n   */\n  readonly makeTempFile: (\n    options?: MakeTempFileOptions\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Create a temporary file inside a scope.\n   *\n   * Functionally equivalent to `makeTempFile`, but the file will be\n   * automatically deleted when the scope is closed.\n   */\n  readonly makeTempFileScoped: (\n    options?: MakeTempFileOptions\n  ) => Effect.Effect<string, PlatformError, Scope>\n  /**\n   * Open a file at `path` with the specified `options`.\n   *\n   * The file handle will be automatically closed when the scope is closed.\n   */\n  readonly open: (\n    path: string,\n    options?: OpenFileOptions\n  ) => Effect.Effect<File, PlatformError, Scope>\n  /**\n   * List the contents of a directory.\n   *\n   * You can recursively list the contents of nested directories by setting the\n   * `recursive` option.\n   */\n  readonly readDirectory: (\n    path: string,\n    options?: ReadDirectoryOptions\n  ) => Effect.Effect<Array<string>, PlatformError>\n  /**\n   * Read the contents of a file.\n   */\n  readonly readFile: (\n    path: string\n  ) => Effect.Effect<Uint8Array, PlatformError>\n  /**\n   * Read the contents of a file.\n   */\n  readonly readFileString: (\n    path: string,\n    encoding?: string\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Read the destination of a symbolic link.\n   */\n  readonly readLink: (\n    path: string\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Resolve a path to its canonicalized absolute pathname.\n   */\n  readonly realPath: (\n    path: string\n  ) => Effect.Effect<string, PlatformError>\n  /**\n   * Remove a file or directory.\n   */\n  readonly remove: (\n    path: string,\n    options?: RemoveOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Rename a file or directory.\n   */\n  readonly rename: (\n    oldPath: string,\n    newPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Create a writable `Sink` for the specified `path`.\n   */\n  readonly sink: (\n    path: string,\n    options?: SinkOptions\n  ) => Sink<void, Uint8Array, never, PlatformError>\n  /**\n   * Get information about a file at `path`.\n   */\n  readonly stat: (\n    path: string\n  ) => Effect.Effect<File.Info, PlatformError>\n  /**\n   * Create a readable `Stream` for the specified `path`.\n   *\n   * Changing the `bufferSize` option will change the internal buffer size of\n   * the stream. It defaults to `4`.\n   *\n   * The `chunkSize` option will change the size of the chunks emitted by the\n   * stream. It defaults to 64kb.\n   *\n   * Changing `offset` and `bytesToRead` will change the offset and the number\n   * of bytes to read from the file.\n   */\n  readonly stream: (\n    path: string,\n    options?: StreamOptions\n  ) => Stream<Uint8Array, PlatformError>\n  /**\n   * Create a symbolic link from `fromPath` to `toPath`.\n   */\n  readonly symlink: (\n    fromPath: string,\n    toPath: string\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Truncate a file to a specified length. If the `length` is not specified,\n   * the file will be truncated to length `0`.\n   */\n  readonly truncate: (\n    path: string,\n    length?: SizeInput\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Change the file system timestamps of the file at `path`.\n   */\n  readonly utimes: (\n    path: string,\n    atime: Date | number,\n    mtime: Date | number\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Watch a directory or file for changes\n   */\n  readonly watch: (path: string) => Stream<WatchEvent, PlatformError>\n  /**\n   * Write data to a file at `path`.\n   */\n  readonly writeFile: (\n    path: string,\n    data: Uint8Array,\n    options?: WriteFileOptions\n  ) => Effect.Effect<void, PlatformError>\n  /**\n   * Write a string to a file at `path`.\n   */\n  readonly writeFileString: (\n    path: string,\n    data: string,\n    options?: WriteFileStringOptions\n  ) => Effect.Effect<void, PlatformError>\n}\n\n/**\n * Represents a size in bytes.\n *\n * @since 1.0.0\n * @category sizes\n */\nexport type Size = Brand.Branded<bigint, \"Size\">\n\n/**\n * Represents a size in bytes.\n *\n * @since 1.0.0\n * @category sizes\n */\nexport type SizeInput = bigint | number | Size\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const Size: (bytes: SizeInput) => Size = internal.Size\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const KiB: (n: number) => Size = internal.KiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const MiB: (n: number) => Size = internal.MiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const GiB: (n: number) => Size = internal.GiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const TiB: (n: number) => Size = internal.TiB\n\n/**\n * @since 1.0.0\n * @category sizes\n */\nexport const PiB: (n: number) => Size = internal.PiB\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type OpenFlag =\n  | \"r\"\n  | \"r+\"\n  | \"w\"\n  | \"wx\"\n  | \"w+\"\n  | \"wx+\"\n  | \"a\"\n  | \"ax\"\n  | \"a+\"\n  | \"ax+\"\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface AccessFileOptions {\n  readonly ok?: boolean\n  readonly readable?: boolean\n  readonly writable?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface MakeDirectoryOptions {\n  readonly recursive?: boolean\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface CopyOptions {\n  readonly overwrite?: boolean\n  readonly preserveTimestamps?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface MakeTempDirectoryOptions {\n  readonly directory?: string\n  readonly prefix?: string\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface MakeTempFileOptions {\n  readonly directory?: string\n  readonly prefix?: string\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface OpenFileOptions {\n  readonly flag?: OpenFlag\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface ReadDirectoryOptions {\n  readonly recursive?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface RemoveOptions {\n  /**\n   * When `true`, you can recursively remove nested directories.\n   */\n  readonly recursive?: boolean\n  /**\n   * When `true`, exceptions will be ignored if `path` does not exist.\n   */\n  readonly force?: boolean\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface SinkOptions extends OpenFileOptions {}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface StreamOptions {\n  readonly bufferSize?: number\n  readonly bytesToRead?: SizeInput\n  readonly chunkSize?: SizeInput\n  readonly offset?: SizeInput\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface WriteFileOptions {\n  readonly flag?: OpenFlag\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category options\n */\nexport interface WriteFileStringOptions {\n  readonly flag?: OpenFlag\n  readonly mode?: number\n}\n\n/**\n * @since 1.0.0\n * @category tag\n */\nexport const FileSystem: Tag<FileSystem, FileSystem> = internal.tag\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const make: (\n  impl: Omit<FileSystem, \"exists\" | \"readFileString\" | \"stream\" | \"sink\" | \"writeFileString\">\n) => FileSystem = internal.make\n\n/**\n * Create a no-op file system that can be used for testing.\n *\n * @since 1.0.0\n * @category constructor\n */\nexport const makeNoop: (fileSystem: Partial<FileSystem>) => FileSystem = internal.makeNoop\n\n/**\n * Create a no-op file system that can be used for testing.\n *\n * @since 1.0.0\n * @category layers\n */\nexport const layerNoop: (fileSystem: Partial<FileSystem>) => Layer<FileSystem> = internal.layerNoop\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const FileTypeId: unique symbol = Symbol.for(\n  \"@effect/platform/FileSystem/File\"\n)\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type FileTypeId = typeof FileTypeId\n\n/**\n * @since 1.0.0\n * @category guard\n */\nexport const isFile = (u: unknown): u is File => typeof u === \"object\" && u !== null && FileTypeId in u\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport interface File {\n  readonly [FileTypeId]: FileTypeId\n  readonly fd: File.Descriptor\n  readonly stat: Effect.Effect<File.Info, PlatformError>\n  readonly seek: (offset: SizeInput, from: SeekMode) => Effect.Effect<void>\n  readonly sync: Effect.Effect<void, PlatformError>\n  readonly read: (buffer: Uint8Array) => Effect.Effect<Size, PlatformError>\n  readonly readAlloc: (size: SizeInput) => Effect.Effect<Option<Uint8Array>, PlatformError>\n  readonly truncate: (length?: SizeInput) => Effect.Effect<void, PlatformError>\n  readonly write: (buffer: Uint8Array) => Effect.Effect<Size, PlatformError>\n  readonly writeAll: (buffer: Uint8Array) => Effect.Effect<void, PlatformError>\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace File {\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export type Descriptor = Brand.Branded<number, \"FileDescriptor\">\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export type Type =\n    | \"File\"\n    | \"Directory\"\n    | \"SymbolicLink\"\n    | \"BlockDevice\"\n    | \"CharacterDevice\"\n    | \"FIFO\"\n    | \"Socket\"\n    | \"Unknown\"\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Info {\n    readonly type: Type\n    readonly mtime: Option<Date>\n    readonly atime: Option<Date>\n    readonly birthtime: Option<Date>\n    readonly dev: number\n    readonly ino: Option<number>\n    readonly mode: number\n    readonly nlink: Option<number>\n    readonly uid: Option<number>\n    readonly gid: Option<number>\n    readonly rdev: Option<number>\n    readonly size: Size\n    readonly blksize: Option<Size>\n    readonly blocks: Option<number>\n  }\n}\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const FileDescriptor = Brand.nominal<File.Descriptor>()\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type SeekMode = \"start\" | \"current\"\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport type WatchEvent = WatchEvent.Create | WatchEvent.Update | WatchEvent.Remove\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport declare namespace WatchEvent {\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Create {\n    readonly _tag: \"Create\"\n    readonly path: string\n  }\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Update {\n    readonly _tag: \"Update\"\n    readonly path: string\n  }\n\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Remove {\n    readonly _tag: \"Remove\"\n    readonly path: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const WatchEventCreate: Data.Case.Constructor<WatchEvent.Create, \"_tag\"> = Data.tagged<WatchEvent.Create>(\n  \"Create\"\n)\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const WatchEventUpdate: Data.Case.Constructor<WatchEvent.Update, \"_tag\"> = Data.tagged<WatchEvent.Update>(\n  \"Update\"\n)\n\n/**\n * @since 1.0.0\n * @category constructor\n */\nexport const WatchEventRemove: Data.Case.Constructor<WatchEvent.Remove, \"_tag\"> = Data.tagged<WatchEvent.Remove>(\n  \"Remove\"\n)\n\n/**\n * @since 1.0.0\n * @category file watcher\n */\nexport class WatchBackend extends Context.Tag(\"@effect/platform/FileSystem/WatchBackend\")<\n  WatchBackend,\n  {\n    readonly register: (path: string, stat: File.Info) => Option<Stream<WatchEvent, PlatformError>>\n  }\n>() {\n}\n"],"names":["Brand","Context","Data","internal","Size","KiB","MiB","GiB","TiB","PiB","FileSystem","tag","make","makeNoop","layerNoop","FileTypeId","Symbol","for","isFile","u","FileDescriptor","nominal","WatchEventCreate","tagged","WatchEventUpdate","WatchEventRemove","WatchBackend","Tag"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAGA,OAAO,KAAKA,KAAK,MAAM,cAAc;AAErC,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,IAAI,MAAM,aAAa;AAQnC,OAAO,KAAKC,QAAQ,MAAM,0BAA0B;;;;;AAmQ7C,MAAMC,IAAI,mLAA+BD,OAAa,CAAL,CAACC;AAMlD,MAAMC,GAAG,mLAAwBF,MAAY,EAAJ,CAACE;AAM1C,MAAMC,GAAG,GAAwBH,QAAQ,CAACG,6KAAG;AAM7C,MAAMC,GAAG,mLAAwBJ,MAAY,EAAJ,CAACI;AAM1C,MAAMC,GAAG,mLAAwBL,MAAY,EAAJ,CAACK;AAM1C,MAAMC,GAAG,mLAAwBN,MAAY,EAAJ,CAACM;AAuI1C,MAAMC,UAAU,GAAgCP,QAAQ,CAACQ,6KAAG;AAM5D,MAAMC,IAAI,mLAECT,OAAa,CAAL,CAACS;AAQpB,MAAMC,QAAQ,mLAAoDV,QAAQ,CAACU,EAAQ;AAQnF,MAAMC,SAAS,kLAA2DX,QAAQ,CAACW,IAAS;AAM5F,MAAMC,UAAU,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CACjD,kCAAkC,CACnC;AAYM,MAAMC,MAAM,IAAIC,CAAU,GAAgB,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,IAAIJ,UAAU,IAAII,CAAC;AAqEhG,MAAMC,cAAc,GAAA,WAAA,wJAAGpB,KAAK,CAACqB,IAAAA,AAAO,EAAmB;AAmDvD,MAAMC,gBAAgB,GAAA,WAAA,uJAAqDpB,IAAI,CAACqB,IAAAA,AAAM,EAC3F,QAAQ,CACT;AAMM,MAAMC,gBAAgB,GAAA,WAAA,uJAAqDtB,IAAI,CAACqB,IAAAA,AAAM,EAC3F,QAAQ,CACT;AAMM,MAAME,gBAAgB,GAAA,WAAA,uJAAqDvB,IAAI,CAACqB,IAAAA,AAAM,EAC3F,QAAQ,CACT;AAMK,MAAOG,YAAa,SAAA,WAAA,0JAAQzB,MAAQ0B,AAAG,CAAJ,CAACA,AAAI,0CAA0C,CAAC,EAKtF;AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1149, "column": 0}, "map": {"version":3,"file":"httpBody.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpBody.ts"],"sourcesContent":["import * as Data from \"effect/Data\"\nimport * as Effect from \"effect/Effect\"\nimport { identity } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Stream_ from \"effect/Stream\"\nimport type * as PlatformError from \"../Error.js\"\nimport * as FileSystem from \"../FileSystem.js\"\nimport type * as Body from \"../HttpBody.js\"\nimport * as UrlParams from \"../UrlParams.js\"\n\n/** @internal */\nexport const TypeId: Body.TypeId = Symbol.for(\n  \"@effect/platform/HttpBody\"\n) as Body.TypeId\n\n/** @internal */\nexport const ErrorTypeId: Body.ErrorTypeId = Symbol.for(\n  \"@effect/platform/HttpBody/HttpBodyError\"\n) as Body.ErrorTypeId\n\nconst bodyError = Data.tagged<Body.HttpBodyError>(\"HttpBodyError\")\n\n/** @internal */\nexport const HttpBodyError = (reason: Body.ErrorReason): Body.HttpBodyError =>\n  bodyError({ [ErrorTypeId]: ErrorTypeId, reason })\n\nabstract class BodyBase implements Body.HttpBody.Proto {\n  readonly [TypeId]: Body.TypeId\n  abstract readonly _tag: string\n  constructor() {\n    this[TypeId] = TypeId\n  }\n  abstract toJSON(): unknown\n  [Inspectable.NodeInspectSymbol](): unknown {\n    return this.toJSON()\n  }\n  toString(): string {\n    return Inspectable.format(this)\n  }\n}\n\nclass EmptyImpl extends BodyBase implements Body.Empty {\n  readonly _tag = \"Empty\"\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Empty\"\n    }\n  }\n}\n\n/** @internal */\nexport const empty: Body.Empty = new EmptyImpl()\n\nclass RawImpl extends BodyBase implements Body.Raw {\n  readonly _tag = \"Raw\"\n  constructor(\n    readonly body: unknown,\n    readonly contentType?: string | undefined,\n    readonly contentLength?: number | undefined\n  ) {\n    super()\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Raw\",\n      body: this.body,\n      contentType: this.contentType,\n      contentLength: this.contentLength\n    }\n  }\n}\n\n/** @internal */\nexport const raw = (body: unknown, options?: {\n  readonly contentType?: string | undefined\n  readonly contentLength?: number | undefined\n}): Body.Raw => new RawImpl(body, options?.contentType, options?.contentLength)\n\nclass Uint8ArrayImpl extends BodyBase implements Body.Uint8Array {\n  readonly _tag = \"Uint8Array\"\n  constructor(\n    readonly body: Uint8Array,\n    readonly contentType: string\n  ) {\n    super()\n  }\n  get contentLength(): number {\n    return this.body.length\n  }\n  toJSON(): unknown {\n    const toString = this.contentType.startsWith(\"text/\") || this.contentType.endsWith(\"json\")\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Uint8Array\",\n      body: toString ? new TextDecoder().decode(this.body) : `Uint8Array(${this.body.length})`,\n      contentType: this.contentType,\n      contentLength: this.contentLength\n    }\n  }\n}\n\n/** @internal */\nexport const uint8Array = (body: Uint8Array, contentType?: string): Body.Uint8Array =>\n  new Uint8ArrayImpl(body, contentType ?? \"application/octet-stream\")\n\nconst encoder = new TextEncoder()\n\n/** @internal */\nexport const text = (body: string, contentType?: string): Body.Uint8Array =>\n  uint8Array(encoder.encode(body), contentType ?? \"text/plain\")\n\n/** @internal */\nexport const unsafeJson = (body: unknown): Body.Uint8Array => text(JSON.stringify(body), \"application/json\")\n\n/** @internal */\nexport const json = (body: unknown): Effect.Effect<Body.Uint8Array, Body.HttpBodyError> =>\n  Effect.try({\n    try: () => unsafeJson(body),\n    catch: (error) => HttpBodyError({ _tag: \"JsonError\", error })\n  })\n\n/** @internal */\nexport const urlParams = (urlParams: UrlParams.UrlParams): Body.Uint8Array =>\n  text(UrlParams.toString(urlParams), \"application/x-www-form-urlencoded\")\n\n/** @internal */\nexport const jsonSchema = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions) => {\n  const encode = Schema.encode(schema, options)\n  return (body: A): Effect.Effect<Body.Uint8Array, Body.HttpBodyError, R> =>\n    Effect.flatMap(\n      Effect.mapError(encode(body), (error) => HttpBodyError({ _tag: \"SchemaError\", error })),\n      json\n    )\n}\n\n/** @internal */\nexport const file = (\n  path: string,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n): Effect.Effect<Body.Stream, PlatformError.PlatformError, FileSystem.FileSystem> =>\n  Effect.flatMap(\n    FileSystem.FileSystem,\n    (fs) =>\n      Effect.map(fs.stat(path), (info) =>\n        stream(\n          fs.stream(path, options),\n          options?.contentType,\n          Number(info.size)\n        ))\n  )\n\n/** @internal */\nexport const fileInfo = (\n  path: string,\n  info: FileSystem.File.Info,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n): Effect.Effect<Body.Stream, PlatformError.PlatformError, FileSystem.FileSystem> =>\n  Effect.map(\n    FileSystem.FileSystem,\n    (fs) =>\n      stream(\n        fs.stream(path, options),\n        options?.contentType,\n        Number(info.size)\n      )\n  )\n\n/** @internal */\nexport const fileWeb = (file: Body.HttpBody.FileLike): Body.Stream =>\n  stream(Stream_.fromReadableStream(() => file.stream() as ReadableStream<Uint8Array>, identity), file.type, file.size)\n\nclass FormDataImpl extends BodyBase implements Body.FormData {\n  readonly _tag = \"FormData\"\n  constructor(\n    readonly formData: FormData\n  ) {\n    super()\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"FormData\",\n      formData: this.formData\n    }\n  }\n}\n\n/** @internal */\nexport const formData = (body: FormData): Body.FormData => new FormDataImpl(body)\n\nclass StreamImpl extends BodyBase implements Body.Stream {\n  readonly _tag = \"Stream\"\n  constructor(\n    readonly stream: Stream_.Stream<Uint8Array, unknown>,\n    readonly contentType: string,\n    readonly contentLength?: number | undefined\n  ) {\n    super()\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpBody\",\n      _tag: \"Stream\",\n      contentType: this.contentType,\n      contentLength: this.contentLength\n    }\n  }\n}\n\n/** @internal */\nexport const stream = (\n  body: Stream_.Stream<Uint8Array, unknown>,\n  contentType?: string | undefined,\n  contentLength?: number | undefined\n): Body.Stream => new StreamImpl(body, contentType ?? \"application/octet-stream\", contentLength)\n"],"names":["Data","Effect","identity","Inspectable","Schema","Stream_","FileSystem","UrlParams","TypeId","Symbol","for","ErrorTypeId","bodyError","tagged","HttpBodyError","reason","BodyBase","constructor","NodeInspectSymbol","toJSON","toString","format","EmptyImpl","_tag","_id","empty","RawImpl","body","contentType","contentLength","raw","options","Uint8ArrayImpl","length","startsWith","endsWith","TextDecoder","decode","uint8Array","encoder","TextEncoder","text","encode","unsafeJson","JSON","stringify","json","try","catch","error","urlParams","jsonSchema","schema","flatMap","mapError","file","path","fs","map","stat","info","stream","Number","size","fileInfo","fileWeb","fromReadableStream","type","FormDataImpl","formData","StreamImpl"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1322, "column": 0}, "map": {"version":3,"file":"httpServerResponse.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpServerResponse.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Effectable from \"effect/Effectable\"\nimport { dual } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Runtime from \"effect/Runtime\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Stream from \"effect/Stream\"\nimport * as Cookies from \"../Cookies.js\"\nimport type * as PlatformError from \"../Error.js\"\nimport type * as FileSystem from \"../FileSystem.js\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Body from \"../HttpBody.js\"\nimport type * as Platform from \"../HttpPlatform.js\"\nimport type * as Respondable from \"../HttpServerRespondable.js\"\nimport type * as ServerResponse from \"../HttpServerResponse.js\"\nimport * as Template from \"../Template.js\"\nimport * as UrlParams from \"../UrlParams.js\"\nimport * as internalBody from \"./httpBody.js\"\n\n/** @internal */\nexport const TypeId: ServerResponse.TypeId = Symbol.for(\"@effect/platform/HttpServerResponse\") as ServerResponse.TypeId\n\nconst respondableSymbol: typeof Respondable.symbol = Symbol.for(\n  \"@effect/platform/HttpServerRespondable\"\n) as typeof Respondable.symbol\n\nclass ServerResponseImpl extends Effectable.StructuralClass<ServerResponse.HttpServerResponse>\n  implements ServerResponse.HttpServerResponse\n{\n  readonly [TypeId]: ServerResponse.TypeId\n  readonly headers: Headers.Headers\n  constructor(\n    readonly status: number,\n    readonly statusText: string | undefined,\n    headers: Headers.Headers,\n    readonly cookies: Cookies.Cookies,\n    readonly body: Body.HttpBody\n  ) {\n    super()\n    this[TypeId] = TypeId\n    if (body.contentType || body.contentLength) {\n      const newHeaders = { ...headers }\n      if (body.contentType) {\n        newHeaders[\"content-type\"] = body.contentType\n      }\n      if (body.contentLength) {\n        newHeaders[\"content-length\"] = body.contentLength.toString()\n      }\n      this.headers = newHeaders\n    } else {\n      this.headers = headers\n    }\n  }\n\n  commit(): Effect.Effect<ServerResponse.HttpServerResponse> {\n    return Effect.succeed(this)\n  }\n\n  [respondableSymbol](): Effect.Effect<ServerResponse.HttpServerResponse, unknown> {\n    return Effect.succeed(this)\n  }\n\n  [Inspectable.NodeInspectSymbol]() {\n    return this.toJSON()\n  }\n\n  toString(): string {\n    return Inspectable.format(this)\n  }\n\n  toJSON() {\n    return {\n      _id: \"@effect/platform/HttpServerResponse\",\n      status: this.status,\n      statusText: this.statusText,\n      headers: Inspectable.redact(this.headers),\n      cookies: this.cookies.toJSON(),\n      body: this.body.toJSON()\n    }\n  }\n}\n\n/** @internal */\nexport const isServerResponse = (u: unknown): u is ServerResponse.HttpServerResponse =>\n  typeof u === \"object\" && u !== null && TypeId in u\n\n/** @internal */\nexport const empty = (options?: ServerResponse.Options.WithContent | undefined): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 204,\n    options?.statusText,\n    options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.empty\n  )\n\n/** @internal */\nexport const redirect = (\n  location: string | URL,\n  options?: ServerResponse.Options.WithContentType | undefined\n): ServerResponse.HttpServerResponse => {\n  const headers = Headers.unsafeFromRecord({ location: location.toString() })\n  return new ServerResponseImpl(\n    options?.status ?? 301,\n    options?.statusText,\n    options?.headers ?\n      Headers.merge(\n        headers,\n        Headers.fromInput(options.headers)\n      ) :\n      headers,\n    options?.cookies ?? Cookies.empty,\n    internalBody.empty\n  )\n}\n\n/** @internal */\nexport const uint8Array = (\n  body: Uint8Array,\n  options?: ServerResponse.Options.WithContentType\n): ServerResponse.HttpServerResponse => {\n  const headers = options?.headers ? Headers.fromInput(options.headers) : Headers.empty\n  return new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    headers,\n    options?.cookies ?? Cookies.empty,\n    internalBody.uint8Array(body, getContentType(options, headers))\n  )\n}\n\n/** @internal */\nexport const text = (\n  body: string,\n  options?: ServerResponse.Options.WithContentType\n): ServerResponse.HttpServerResponse => {\n  const headers = options?.headers ? Headers.fromInput(options.headers) : Headers.empty\n  return new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    headers,\n    options?.cookies ?? Cookies.empty,\n    internalBody.text(body, getContentType(options, headers))\n  )\n}\n\n/** @internal */\nexport const html: {\n  <A extends ReadonlyArray<Template.Interpolated>>(\n    strings: TemplateStringsArray,\n    ...args: A\n  ): Effect.Effect<\n    ServerResponse.HttpServerResponse,\n    Template.Interpolated.Error<A[number]>,\n    Template.Interpolated.Context<A[number]>\n  >\n  (html: string): ServerResponse.HttpServerResponse\n} = (\n  strings: TemplateStringsArray | string,\n  ...args: ReadonlyArray<Template.Interpolated>\n) => {\n  if (typeof strings === \"string\") {\n    return text(strings, { contentType: \"text/html\" })\n  }\n\n  return Effect.map(\n    Template.make(strings, ...args),\n    (_) => text(_, { contentType: \"text/html\" })\n  ) as any\n}\n\n/** @internal */\nexport const htmlStream = <A extends ReadonlyArray<Template.InterpolatedWithStream>>(\n  strings: TemplateStringsArray,\n  ...args: A\n): Effect.Effect<\n  ServerResponse.HttpServerResponse,\n  never,\n  Template.Interpolated.Context<A[number]>\n> =>\n  Effect.map(\n    Effect.context<any>(),\n    (context) =>\n      stream(\n        Stream.provideContext(\n          Stream.encodeText(Template.stream(strings, ...args)),\n          context\n        ),\n        { contentType: \"text/html\" }\n      )\n  )\n\n/** @internal */\nexport const json = (\n  body: unknown,\n  options?: ServerResponse.Options.WithContent | undefined\n): Effect.Effect<ServerResponse.HttpServerResponse, Body.HttpBodyError> =>\n  Effect.map(internalBody.json(body), (body) =>\n    new ServerResponseImpl(\n      options?.status ?? 200,\n      options?.statusText,\n      options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n      options?.cookies ?? Cookies.empty,\n      body\n    ))\n\n/** @internal */\nexport const unsafeJson = (\n  body: unknown,\n  options?: ServerResponse.Options.WithContent | undefined\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.unsafeJson(body)\n  )\n\n/** @internal */\nexport const schemaJson = <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const encode = internalBody.jsonSchema(schema, options)\n  return (\n    body: A,\n    options?: ServerResponse.Options.WithContent | undefined\n  ): Effect.Effect<ServerResponse.HttpServerResponse, Body.HttpBodyError, R> =>\n    Effect.map(encode(body), (body) =>\n      new ServerResponseImpl(\n        options?.status ?? 200,\n        options?.statusText,\n        options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n        options?.cookies ?? Cookies.empty,\n        body\n      ))\n}\n\nconst httpPlatform = Context.GenericTag<Platform.HttpPlatform>(\"@effect/platform/HttpPlatform\")\n\n/** @internal */\nexport const file = (\n  path: string,\n  options?: (ServerResponse.Options & FileSystem.StreamOptions) | undefined\n): Effect.Effect<ServerResponse.HttpServerResponse, PlatformError.PlatformError, Platform.HttpPlatform> =>\n  Effect.flatMap(\n    httpPlatform,\n    (platform) => platform.fileResponse(path, options)\n  )\n\n/** @internal */\nexport const fileWeb = (\n  file: Body.HttpBody.FileLike,\n  options?: (ServerResponse.Options.WithContent & FileSystem.StreamOptions) | undefined\n): Effect.Effect<ServerResponse.HttpServerResponse, never, Platform.HttpPlatform> =>\n  Effect.flatMap(\n    httpPlatform,\n    (platform) => platform.fileWebResponse(file, options)\n  )\n\n/** @internal */\nexport const urlParams = (\n  body: UrlParams.Input,\n  options?: ServerResponse.Options.WithContent | undefined\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.text(UrlParams.toString(UrlParams.fromInput(body)), \"application/x-www-form-urlencoded\")\n  )\n\n/** @internal */\nexport const raw = (body: unknown, options?: ServerResponse.Options | undefined): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.raw(body, {\n      contentType: options?.contentType,\n      contentLength: options?.contentLength\n    })\n  )\n\n/** @internal */\nexport const formData = (\n  body: FormData,\n  options?: ServerResponse.Options.WithContent | undefined\n): ServerResponse.HttpServerResponse =>\n  new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n    options?.cookies ?? Cookies.empty,\n    internalBody.formData(body)\n  )\n\n/** @internal */\nexport const stream = <E>(\n  body: Stream.Stream<Uint8Array, E>,\n  options?: ServerResponse.Options | undefined\n): ServerResponse.HttpServerResponse => {\n  const headers = options?.headers ? Headers.fromInput(options.headers) : Headers.empty\n  return new ServerResponseImpl(\n    options?.status ?? 200,\n    options?.statusText,\n    headers,\n    options?.cookies ?? Cookies.empty,\n    internalBody.stream(body, getContentType(options, headers), options?.contentLength)\n  )\n}\n\n/** @internal */\nexport const getContentType = (\n  options: ServerResponse.Options | undefined,\n  headers: Headers.Headers\n): string | undefined => {\n  if (options?.contentType) {\n    return options.contentType\n  } else if (options?.headers) {\n    return headers[\"content-type\"]\n  } else {\n    return\n  }\n}\n\n/** @internal */\nexport const setHeader = dual<\n  (key: string, value: string) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, key: string, value: string) => ServerResponse.HttpServerResponse\n>(3, (self, key, value) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    Headers.set(self.headers, key, value),\n    self.cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const replaceCookies = dual<\n  (cookies: Cookies.Cookies) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, cookies: Cookies.Cookies) => ServerResponse.HttpServerResponse\n>(2, (self, cookies) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    self.headers,\n    cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const setCookie = dual<\n  (\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => (\n    self: ServerResponse.HttpServerResponse\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>,\n  (\n    self: ServerResponse.HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>\n>(\n  (args) => isServerResponse(args[0]),\n  (self, name, value, options) =>\n    Effect.map(Cookies.set(self.cookies, name, value, options), (cookies) =>\n      new ServerResponseImpl(\n        self.status,\n        self.statusText,\n        self.headers,\n        cookies,\n        self.body\n      ))\n)\n\n/** @internal */\nexport const unsafeSetCookie = dual<\n  (\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookies.Cookie[\"options\"]\n  ) => ServerResponse.HttpServerResponse\n>(\n  (args) => isServerResponse(args[0]),\n  (self, name, value, options) =>\n    new ServerResponseImpl(\n      self.status,\n      self.statusText,\n      self.headers,\n      Cookies.unsafeSet(self.cookies, name, value, options),\n      self.body\n    )\n)\n\n/** @internal */\nexport const updateCookies = dual<\n  (\n    f: (cookies: Cookies.Cookies) => Cookies.Cookies\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    f: (cookies: Cookies.Cookies) => Cookies.Cookies\n  ) => ServerResponse.HttpServerResponse\n>(2, (self, f) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    self.headers,\n    f(self.cookies),\n    self.body\n  ))\n\n/** @internal */\nexport const setCookies = dual<\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => (\n    self: ServerResponse.HttpServerResponse\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>,\n  (\n    self: ServerResponse.HttpServerResponse,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => Effect.Effect<ServerResponse.HttpServerResponse, Cookies.CookiesError>\n>(\n  2,\n  (self, cookies) =>\n    Effect.map(Cookies.setAll(self.cookies, cookies), (cookies) =>\n      new ServerResponseImpl(\n        self.status,\n        self.statusText,\n        self.headers,\n        cookies,\n        self.body\n      ))\n)\n\n/** @internal */\nexport const mergeCookies = dual<\n  (\n    cookies: Cookies.Cookies\n  ) => (\n    self: ServerResponse.HttpServerResponse\n  ) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    cookies: Cookies.Cookies\n  ) => ServerResponse.HttpServerResponse\n>(\n  2,\n  (self, cookies) =>\n    new ServerResponseImpl(\n      self.status,\n      self.statusText,\n      self.headers,\n      Cookies.merge(self.cookies, cookies),\n      self.body\n    )\n)\n\n/** @internal */\nexport const unsafeSetCookies = dual<\n  (\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    cookies: Iterable<readonly [name: string, value: string, options?: Cookies.Cookie[\"options\"]]>\n  ) => ServerResponse.HttpServerResponse\n>(\n  2,\n  (self, cookies) =>\n    new ServerResponseImpl(\n      self.status,\n      self.statusText,\n      self.headers,\n      Cookies.unsafeSetAll(self.cookies, cookies),\n      self.body\n    )\n)\n\n/** @internal */\nexport const removeCookie = dual<\n  (\n    name: string\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (\n    self: ServerResponse.HttpServerResponse,\n    name: string\n  ) => ServerResponse.HttpServerResponse\n>(\n  2,\n  (self, name) =>\n    new ServerResponseImpl(\n      self.status,\n      self.statusText,\n      self.headers,\n      Cookies.remove(self.cookies, name),\n      self.body\n    )\n)\n\n/** @internal */\nexport const setHeaders = dual<\n  (input: Headers.Input) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, input: Headers.Input) => ServerResponse.HttpServerResponse\n>(2, (self, input) =>\n  new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    Headers.setAll(self.headers, input),\n    self.cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const setStatus = dual<\n  (\n    status: number,\n    statusText?: string\n  ) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, status: number, statusText?: string) => ServerResponse.HttpServerResponse\n>((args) => isServerResponse(args[0]), (self, status, statusText) =>\n  new ServerResponseImpl(\n    status,\n    statusText,\n    self.headers,\n    self.cookies,\n    self.body\n  ))\n\n/** @internal */\nexport const setBody = dual<\n  (body: Body.HttpBody) => (self: ServerResponse.HttpServerResponse) => ServerResponse.HttpServerResponse,\n  (self: ServerResponse.HttpServerResponse, body: Body.HttpBody) => ServerResponse.HttpServerResponse\n>(2, (self, body) => {\n  let headers = self.headers\n  if (body._tag === \"Empty\") {\n    headers = Headers.remove(Headers.remove(headers, \"Content-Type\"), \"Content-length\")\n  }\n  return new ServerResponseImpl(\n    self.status,\n    self.statusText,\n    headers,\n    self.cookies,\n    body\n  )\n})\n\n/** @internal */\nexport const toWeb = (response: ServerResponse.HttpServerResponse, options?: {\n  readonly withoutBody?: boolean | undefined\n  readonly runtime?: Runtime.Runtime<never> | undefined\n}): Response => {\n  const headers = new globalThis.Headers(response.headers)\n  if (!Cookies.isEmpty(response.cookies)) {\n    const toAdd = Cookies.toSetCookieHeaders(response.cookies)\n    for (const header of toAdd) {\n      headers.append(\"set-cookie\", header)\n    }\n  }\n  if (options?.withoutBody) {\n    return new Response(undefined, {\n      status: response.status,\n      statusText: response.statusText as string,\n      headers\n    })\n  }\n  const body = response.body\n  switch (body._tag) {\n    case \"Empty\": {\n      return new Response(undefined, {\n        status: response.status,\n        statusText: response.statusText as string,\n        headers\n      })\n    }\n    case \"Uint8Array\":\n    case \"Raw\": {\n      return new Response(body.body as any, {\n        status: response.status,\n        statusText: response.statusText,\n        headers\n      })\n    }\n    case \"FormData\": {\n      return new Response(body.formData as any, {\n        status: response.status,\n        statusText: response.statusText,\n        headers\n      })\n    }\n    case \"Stream\": {\n      return new Response(Stream.toReadableStreamRuntime(body.stream, options?.runtime ?? Runtime.defaultRuntime), {\n        status: response.status,\n        statusText: response.statusText,\n        headers\n      })\n    }\n  }\n}\n"],"names":["Context","Effect","Effectable","dual","Inspectable","Runtime","Stream","Cookies","Headers","Template","UrlParams","internalBody","TypeId","Symbol","for","respondableSymbol","ServerResponseImpl","StructuralClass","status","statusText","cookies","body","headers","constructor","contentType","contentLength","newHeaders","toString","commit","succeed","NodeInspectSymbol","toJSON","format","_id","redact","isServerResponse","u","empty","options","fromInput","redirect","location","unsafeFromRecord","merge","uint8Array","getContentType","text","html","strings","args","map","make","_","htmlStream","context","stream","provideContext","encodeText","json","unsafeJson","schemaJson","schema","encode","jsonSchema","httpPlatform","GenericTag","file","path","flatMap","platform","fileResponse","fileWeb","fileWebResponse","urlParams","raw","formData","setHeader","self","key","value","set","replaceCookies","setCookie","name","unsafeSetCookie","unsafeSet","updateCookies","f","setCookies","setAll","mergeCookies","unsafeSetCookies","unsafeSetAll","removeCookie","remove","setHeaders","input","setStatus","setBody","_tag","toWeb","response","globalThis","isEmpty","toAdd","toSetCookieHeaders","header","append","withoutBody","Response","undefined","toReadableStreamRuntime","runtime","defaultRuntime"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1566, "column": 0}, "map": {"version":3,"file":"HttpServerResponse.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpServerResponse.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Runtime from \"effect/Runtime\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport type { Cookie, Cookies, CookiesError } from \"./Cookies.js\"\nimport type * as PlatformError from \"./Error.js\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport type * as Body from \"./HttpBody.js\"\nimport type * as Platform from \"./HttpPlatform.js\"\nimport type { Respondable } from \"./HttpServerRespondable.js\"\nimport * as internal from \"./internal/httpServerResponse.js\"\nimport type * as Template from \"./Template.js\"\nimport type * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/HttpServerResponse\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpServerResponse extends Effect.Effect<HttpServerResponse>, Inspectable, Respondable {\n  readonly [TypeId]: TypeId\n  readonly status: number\n  readonly statusText?: string | undefined\n  readonly headers: Headers.Headers\n  readonly cookies: Cookies\n  readonly body: Body.HttpBody\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Options {\n  readonly status?: number | undefined\n  readonly statusText?: string | undefined\n  readonly headers?: Headers.Input | undefined\n  readonly cookies?: Cookies | undefined\n  readonly contentType?: string | undefined\n  readonly contentLength?: number | undefined\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Options {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface WithContent extends Omit<Options, \"contentType\" | \"contentLength\"> {}\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface WithContentType extends Omit<Options, \"contentLength\"> {}\n}\n\n/**\n * @since 1.0.0\n */\nexport const isServerResponse: (u: unknown) => u is HttpServerResponse = internal.isServerResponse\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: (options?: Options.WithContent | undefined) => HttpServerResponse = internal.empty\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const redirect: (location: string | URL, options?: Options.WithContentType | undefined) => HttpServerResponse =\n  internal.redirect\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const uint8Array: (body: Uint8Array, options?: Options.WithContentType | undefined) => HttpServerResponse =\n  internal.uint8Array\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const text: (body: string, options?: Options.WithContentType | undefined) => HttpServerResponse = internal.text\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const html: {\n  /**\n   * @since 1.0.0\n   * @category constructors\n   */\n  <A extends ReadonlyArray<Template.Interpolated>>(strings: TemplateStringsArray, ...args: A): Effect.Effect<HttpServerResponse, Template.Interpolated.Error<A[number]>, Template.Interpolated.Context<A[number]>>\n  /**\n   * @since 1.0.0\n   * @category constructors\n   */\n  (html: string): HttpServerResponse\n} = internal.html\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const htmlStream: <A extends ReadonlyArray<Template.InterpolatedWithStream>>(\n  strings: TemplateStringsArray,\n  ...args: A\n) => Effect.Effect<HttpServerResponse, never, Template.Interpolated.Context<A[number]>> = internal.htmlStream\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const json: (\n  body: unknown,\n  options?: Options.WithContentType | undefined\n) => Effect.Effect<HttpServerResponse, Body.HttpBodyError> = internal.json\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const schemaJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (body: A, options?: Options.WithContent | undefined) => Effect.Effect<HttpServerResponse, Body.HttpBodyError, R> =\n  internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeJson: (body: unknown, options?: Options.WithContentType | undefined) => HttpServerResponse =\n  internal.unsafeJson\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const urlParams: (body: UrlParams.Input, options?: Options.WithContentType | undefined) => HttpServerResponse =\n  internal.urlParams\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const raw: (body: unknown, options?: Options | undefined) => HttpServerResponse = internal.raw\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const formData: (body: FormData, options?: Options.WithContent | undefined) => HttpServerResponse =\n  internal.formData\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const stream: <E>(\n  body: Stream.Stream<Uint8Array, E, never>,\n  options?: Options | undefined\n) => HttpServerResponse = internal.stream\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const file: (\n  path: string,\n  options?: (Options & FileSystem.StreamOptions) | undefined\n) => Effect.Effect<HttpServerResponse, PlatformError.PlatformError, Platform.HttpPlatform> = internal.file\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fileWeb: (\n  file: Body.HttpBody.FileLike,\n  options?: (Options.WithContent & FileSystem.StreamOptions) | undefined\n) => Effect.Effect<HttpServerResponse, never, Platform.HttpPlatform> = internal.fileWeb\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeader: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, key: string, value: string): HttpServerResponse\n} = internal.setHeader\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeaders: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Headers.Input): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, input: Headers.Input): HttpServerResponse\n} = internal.setHeaders\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const removeCookie: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, name: string): HttpServerResponse\n} = internal.removeCookie\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const replaceCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (cookies: Cookies): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, cookies: Cookies): HttpServerResponse\n} = internal.replaceCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setCookie: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (\n    self: HttpServerResponse\n  ) => Effect.Effect<\n    HttpServerResponse,\n    CookiesError\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookie[\"options\"]\n  ): Effect.Effect<\n    HttpServerResponse,\n    CookiesError\n  >\n} = internal.setCookie\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSetCookie: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (name: string, value: string, options?: Cookie[\"options\"]): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    name: string,\n    value: string,\n    options?: Cookie[\"options\"]\n  ): HttpServerResponse\n} = internal.unsafeSetCookie\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const updateCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (f: (cookies: Cookies) => Cookies): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, f: (cookies: Cookies) => Cookies): HttpServerResponse\n} = internal.updateCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const mergeCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (cookies: Cookies): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, cookies: Cookies): HttpServerResponse\n} = internal.mergeCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): (self: HttpServerResponse) => Effect.Effect<HttpServerResponse, CookiesError, never>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): Effect.Effect<HttpServerResponse, CookiesError, never>\n} = internal.setCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const unsafeSetCookies: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n    self: HttpServerResponse,\n    cookies: Iterable<\n      readonly [\n        name: string,\n        value: string,\n        options?: Cookie[\"options\"]\n      ]\n    >\n  ): HttpServerResponse\n} = internal.unsafeSetCookies\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setBody: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: Body.HttpBody): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, body: Body.HttpBody): HttpServerResponse\n} = internal.setBody\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setStatus: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (status: number, statusText?: string | undefined): (self: HttpServerResponse) => HttpServerResponse\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpServerResponse, status: number, statusText?: string | undefined): HttpServerResponse\n} = internal.setStatus\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWeb: (\n  response: HttpServerResponse,\n  options?: {\n    readonly withoutBody?: boolean | undefined\n    readonly runtime?: Runtime.Runtime<never> | undefined\n  }\n) => Response = internal.toWeb\n"],"names":["internal","TypeId","Symbol","for","isServerResponse","empty","redirect","uint8Array","text","html","htmlStream","json","schemaJson","unsafeJson","urlParams","raw","formData","stream","file","fileWeb","setHeader","setHeaders","removeCookie","replaceCookies","setCookie","unsafeSetCookie","updateCookies","mergeCookies","setCookies","unsafeSetCookies","setBody","setStatus","toWeb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,QAAQ,MAAM,kCAAkC;;AAQrD,MAAMC,MAAM,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CAAC,qCAAqC,CAAC;AAsD/E,MAAMC,gBAAgB,2LAA4CJ,QAAQ,CAACI,UAAgB;AAM3F,MAAMC,KAAK,2LAAsEL,QAAQ,AAAM,CAALK;AAM1F,MAAMC,QAAQ,2LACnBN,QAAQ,CAACM,EAAQ;AAMZ,MAAMC,UAAU,2LACrBP,QAAQ,CAACO,IAAU;AAMd,MAAMC,IAAI,2LAAwFR,OAAa,CAAL,CAACQ;AAM3G,MAAMC,IAAI,2LAWbT,OAAa,CAAL,CAACS;AAMN,MAAMC,UAAU,2LAGmEV,QAAQ,CAACU,IAAU;AAMtG,MAAMC,IAAI,2LAG4CX,OAAa,CAAL,CAACW;AAM/D,MAAMC,UAAU,2LAIrBZ,QAAQ,CAACY,IAAU;AAMd,MAAMC,UAAU,2LACrBb,QAAQ,CAACa,IAAU;AAMd,MAAMC,SAAS,2LACpBd,QAAQ,CAACc,GAAS;AAMb,MAAMC,GAAG,2LAAyEf,MAAY,EAAJ,CAACe;AAM3F,MAAMC,QAAQ,2LACnBhB,QAAQ,CAACgB,EAAQ;AAMZ,MAAMC,MAAM,2LAGOjB,QAAQ,CAACiB,AAAM;AAMlC,MAAMC,IAAI,2LAG4ElB,OAAa,CAAL,CAACkB;AAM/F,MAAMC,OAAO,2LAGmDnB,QAAQ,CAACmB,CAAO;AAMhF,MAAMC,SAAS,2LAWlBpB,QAAQ,CAACoB,GAAS;AAMf,MAAMC,UAAU,2LAWnBrB,QAAQ,CAACqB,IAAU;AAMhB,MAAMC,YAAY,2LAWrBtB,QAAQ,CAACsB,MAAY;AAMlB,MAAMC,cAAc,2LAWvBvB,QAAQ,CAACuB,QAAc;AAMpB,MAAMC,SAAS,2LAwBlBxB,QAAQ,CAACwB,GAAS;AAMf,MAAMC,eAAe,2LAgBxBzB,QAAQ,CAACyB,SAAe;AAMrB,MAAMC,aAAa,2LAWtB1B,QAAQ,CAAC0B,OAAa;AAMnB,MAAMC,YAAY,2LAWrB3B,QAAQ,CAAC2B,MAAY;AAMlB,MAAMC,UAAU,2LA4BnB5B,QAAQ,CAAC4B,IAAU;AAMhB,MAAMC,gBAAgB,2LA4BzB7B,QAAQ,CAAC6B,UAAgB;AAMtB,MAAMC,OAAO,2LAWhB9B,QAAQ,CAAC8B,CAAO;AAMb,MAAMC,SAAS,2LAWlB/B,QAAQ,CAAC+B,GAAS;AAMf,MAAMC,KAAK,2LAMFhC,QAAQ,AAAM,CAALgC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1636, "column": 0}, "map": {"version":3,"file":"HttpServerRespondable.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpServerRespondable.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Cause from \"effect/Cause\"\nimport * as Effect from \"effect/Effect\"\nimport * as ParseResult from \"effect/ParseResult\"\nimport { hasProperty } from \"effect/Predicate\"\nimport type { HttpServerResponse } from \"./HttpServerResponse.js\"\nimport * as ServerResponse from \"./HttpServerResponse.js\"\n\n/**\n * @since 1.0.0\n * @category symbols\n */\nexport const symbol: unique symbol = Symbol.for(\"@effect/platform/HttpServerRespondable\")\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Respondable {\n  readonly [symbol]: () => Effect.Effect<HttpServerResponse, unknown>\n}\n\n/**\n * @since 1.0.0\n * @category guards\n */\nexport const isRespondable = (u: unknown): u is Respondable => hasProperty(u, symbol)\n\nconst badRequest = ServerResponse.empty({ status: 400 })\nconst notFound = ServerResponse.empty({ status: 404 })\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const toResponse = (self: Respondable): Effect.Effect<HttpServerResponse> => {\n  if (ServerResponse.isServerResponse(self)) {\n    return Effect.succeed(self)\n  }\n  return Effect.orDie(self[symbol]())\n}\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const toResponseOrElse = (u: unknown, orElse: HttpServerResponse): Effect.Effect<HttpServerResponse> => {\n  if (ServerResponse.isServerResponse(u)) {\n    return Effect.succeed(u)\n  } else if (isRespondable(u)) {\n    return Effect.catchAllCause(u[symbol](), () => Effect.succeed(orElse))\n    // add support for some commmon types\n  } else if (ParseResult.isParseError(u)) {\n    return Effect.succeed(badRequest)\n  } else if (Cause.isNoSuchElementException(u)) {\n    return Effect.succeed(notFound)\n  }\n  return Effect.succeed(orElse)\n}\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const toResponseOrElseDefect = (u: unknown, orElse: HttpServerResponse): Effect.Effect<HttpServerResponse> => {\n  if (ServerResponse.isServerResponse(u)) {\n    return Effect.succeed(u)\n  }\n  return Effect.succeed(orElse)\n}\n"],"names":["Cause","Effect","ParseResult","hasProperty","ServerResponse","symbol","Symbol","for","isRespondable","u","badRequest","empty","status","notFound","toResponse","self","isServerResponse","succeed","orDie","toResponseOrElse","orElse","catchAllCause","isParseError","isNoSuchElementException","toResponseOrElseDefect"],"mappings":"AAAA;;;;;;;;;AAGA,OAAO,KAAKA,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,KAAKC,cAAc,MAAM,yBAAyB;;;;;;AAMlD,MAAMC,MAAM,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CAAC,wCAAwC,CAAC;AAclF,MAAMC,aAAa,IAAIC,CAAU,4JAAuBN,cAAW,AAAXA,EAAYM,CAAC,EAAEJ,MAAM,CAAC;AAErF,MAAMK,UAAU,GAAA,WAAA,GAAGN,cAAc,CAACO,yKAAAA,AAAK,EAAC;IAAEC,MAAM,EAAE;AAAG,CAAE,CAAC;AACxD,MAAMC,QAAQ,GAAA,WAAA,mLAAGT,QAAeO,AAAK,EAAC,IAAP,CAACA;IAAQC,MAAM,EAAE;AAAG,CAAE,CAAC;AAM/C,MAAME,UAAU,IAAIC,IAAiB,IAAuC;IACjF,KAAIX,cAAc,CAACY,mLAAAA,AAAgB,EAACD,IAAI,CAAC,EAAE;QACzC,6JAAOd,MAAM,CAACgB,GAAAA,AAAO,EAACF,IAAI,CAAC;IAC7B;IACA,6JAAOd,MAAM,CAACiB,CAAAA,AAAK,EAACH,IAAI,CAACV,MAAM,CAAC,EAAE,CAAC;AACrC,CAAC;AAMM,MAAMc,gBAAgB,GAAGA,CAACV,CAAU,EAAEW,MAA0B,KAAuC;IAC5G,oLAAIhB,cAAc,CAACY,IAAAA,AAAgB,EAACP,CAAC,CAAC,EAAE;QACtC,6JAAOR,MAAM,CAACgB,GAAAA,AAAO,EAACR,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAID,aAAa,CAACC,CAAC,CAAC,EAAE;QAC3B,QAAOR,MAAM,CAACoB,8JAAAA,AAAa,EAACZ,CAAC,CAACJ,MAAM,CAAC,EAAE,EAAE,0JAAMJ,MAAM,CAACgB,GAAAA,AAAO,EAACG,MAAM,CAAC,CAAC;IACtE,qCAAA;IACF,CAAC,MAAM,KAAIlB,WAAW,CAACoB,6JAAAA,AAAY,EAACb,CAAC,CAAC,EAAE;QACtC,6JAAOR,MAAM,CAACgB,GAAAA,AAAO,EAACP,UAAU,CAAC;IACnC,CAAC,MAAM,yJAAIV,KAAK,CAACuB,qBAAAA,AAAwB,EAACd,CAAC,CAAC,EAAE;QAC5C,QAAOR,MAAM,CAACgB,wJAAO,AAAPA,EAAQJ,QAAQ,CAAC;IACjC;IACA,6JAAOZ,MAAM,CAACgB,GAAAA,AAAO,EAACG,MAAM,CAAC;AAC/B,CAAC;AAMM,MAAMI,sBAAsB,GAAGA,CAACf,CAAU,EAAEW,MAA0B,KAAuC;IAClH,oLAAIhB,cAAc,CAACY,IAAAA,AAAgB,EAACP,CAAC,CAAC,EAAE;QACtC,6JAAOR,MAAM,CAACgB,GAAAA,AAAO,EAACR,CAAC,CAAC;IAC1B;IACA,6JAAOR,MAAM,CAACgB,GAAAA,AAAO,EAACG,MAAM,CAAC;AAC/B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1694, "column": 0}, "map": {"version":3,"file":"httpServerError.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpServerError.ts"],"sourcesContent":["import * as Cause from \"effect/Cause\"\nimport * as Effect from \"effect/Effect\"\nimport type * as Exit from \"effect/Exit\"\nimport * as FiberId from \"effect/FiberId\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport type * as Error from \"../HttpServerError.js\"\nimport * as Respondable from \"../HttpServerRespondable.js\"\nimport type { HttpServerResponse } from \"../HttpServerResponse.js\"\nimport * as internalServerResponse from \"./httpServerResponse.js\"\n\n/** @internal */\nexport const TypeId: Error.TypeId = Symbol.for(\n  \"@effect/platform/HttpServerError\"\n) as Error.TypeId\n\n/** @internal */\nexport const isServerError = (u: unknown): u is Error.HttpServerError => Predicate.hasProperty(u, TypeId)\n\n/** @internal */\nexport const clientAbortFiberId = globalValue(\n  \"@effect/platform/HttpServerError/clientAbortFiberId\",\n  () => FiberId.runtime(-499, 0)\n)\n\n/** @internal */\nexport const causeResponse = <E>(\n  cause: Cause.Cause<E>\n): Effect.Effect<readonly [HttpServerResponse, Cause.Cause<E>]> => {\n  const [effect, stripped] = Cause.reduce(\n    cause,\n    [Effect.succeed(internalServerError), Cause.empty as Cause.Cause<E>] as const,\n    (acc, cause) => {\n      switch (cause._tag) {\n        case \"Empty\": {\n          return Option.some(acc)\n        }\n        case \"Fail\": {\n          return Option.some([Respondable.toResponseOrElse(cause.error, internalServerError), cause] as const)\n        }\n        case \"Die\": {\n          return Option.some([Respondable.toResponseOrElseDefect(cause.defect, internalServerError), cause] as const)\n        }\n        case \"Interrupt\": {\n          if (acc[1]._tag !== \"Empty\") {\n            return Option.none()\n          }\n          const response = cause.fiberId === clientAbortFiberId ? clientAbortError : serverAbortError\n          return Option.some([Effect.succeed(response), cause] as const)\n        }\n        default: {\n          return Option.none()\n        }\n      }\n    }\n  )\n  return Effect.map(effect, (response) => {\n    if (Cause.isEmptyType(stripped)) {\n      return [response, Cause.die(response)] as const\n    }\n    return [response, Cause.sequential(stripped, Cause.die(response))] as const\n  })\n}\n\n/** @internal */\nexport const causeResponseStripped = <E>(\n  cause: Cause.Cause<E>\n): readonly [response: HttpServerResponse, cause: Option.Option<Cause.Cause<E>>] => {\n  let response: HttpServerResponse | undefined\n  const stripped = Cause.stripSomeDefects(cause, (defect) => {\n    if (internalServerResponse.isServerResponse(defect)) {\n      response = defect\n      return Option.some(Cause.empty)\n    }\n    return Option.none()\n  })\n  return [response ?? internalServerError, stripped]\n}\n\nconst internalServerError = internalServerResponse.empty({ status: 500 })\nconst clientAbortError = internalServerResponse.empty({ status: 499 })\nconst serverAbortError = internalServerResponse.empty({ status: 503 })\n\n/** @internal */\nexport const exitResponse = <E>(exit: Exit.Exit<HttpServerResponse, E>): HttpServerResponse => {\n  if (exit._tag === \"Success\") {\n    return exit.value\n  }\n  return causeResponseStripped(exit.cause)[0]\n}\n"],"names":["Cause","Effect","FiberId","globalValue","Option","Predicate","Respondable","internalServerResponse","TypeId","Symbol","for","isServerError","u","hasProperty","clientAbortFiberId","runtime","causeResponse","cause","effect","stripped","reduce","succeed","internalServerError","empty","acc","_tag","some","toResponseOrElse","error","toResponseOrElseDefect","defect","none","response","fiberId","clientAbortError","serverAbortError","map","isEmptyType","die","sequential","causeResponseStripped","stripSomeDefects","isServerResponse","status","exitResponse","exit","value"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1810, "column": 0}, "map": {"version":3,"file":"HttpServerError.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpServerError.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Cause from \"effect/Cause\"\nimport type * as Effect from \"effect/Effect\"\nimport type * as Exit from \"effect/Exit\"\nimport type * as FiberId from \"effect/FiberId\"\nimport type * as Option from \"effect/Option\"\nimport { TypeIdError } from \"./Error.js\"\nimport type * as ServerRequest from \"./HttpServerRequest.js\"\nimport * as Respondable from \"./HttpServerRespondable.js\"\nimport * as ServerResponse from \"./HttpServerResponse.js\"\nimport * as internal from \"./internal/httpServerError.js\"\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport type HttpServerError = RequestError | ResponseError | RouteNotFound | ServeError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class RequestError extends TypeIdError(TypeId, \"RequestError\")<{\n  readonly request: ServerRequest.HttpServerRequest\n  readonly reason: \"Transport\" | \"Decode\"\n  readonly cause?: unknown\n  readonly description?: string\n}> implements Respondable.Respondable {\n  /**\n   * @since 1.0.0\n   */\n  [Respondable.symbol]() {\n    return ServerResponse.empty({ status: 400 })\n  }\n\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    return this.description ?\n      `${this.reason}: ${this.description} (${this.methodAndUrl})` :\n      `${this.reason} error (${this.methodAndUrl})`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category predicates\n */\nexport const isServerError: (u: unknown) => u is HttpServerError = internal.isServerError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class RouteNotFound extends TypeIdError(TypeId, \"RouteNotFound\")<{\n  readonly request: ServerRequest.HttpServerRequest\n}> {\n  constructor(options: { request: ServerRequest.HttpServerRequest }) {\n    super(options)\n    ;(this as any).stack = `${this.name}: ${this.message}`\n  }\n  /**\n   * @since 1.0.0\n   */\n  [Respondable.symbol]() {\n    return ServerResponse.empty({ status: 404 })\n  }\n  get message() {\n    return `${this.request.method} ${this.request.url} not found`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class ResponseError extends TypeIdError(TypeId, \"ResponseError\")<{\n  readonly request: ServerRequest.HttpServerRequest\n  readonly response: ServerResponse.HttpServerResponse\n  readonly reason: \"Decode\"\n  readonly cause?: unknown\n  readonly description?: string\n}> {\n  /**\n   * @since 1.0.0\n   */\n  [Respondable.symbol]() {\n    return ServerResponse.empty({ status: 500 })\n  }\n\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    const info = `${this.response.status} ${this.methodAndUrl}`\n    return this.description ?\n      `${this.description} (${info})` :\n      `${this.reason} error (${info})`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class ServeError extends TypeIdError(TypeId, \"ServeError\")<{\n  readonly cause: unknown\n}> {}\n\n/**\n * @since 1.0.0\n */\nexport const clientAbortFiberId: FiberId.FiberId = internal.clientAbortFiberId\n\n/**\n * @since 1.0.0\n */\nexport const causeResponse: <E>(\n  cause: Cause.Cause<E>\n) => Effect.Effect<readonly [ServerResponse.HttpServerResponse, Cause.Cause<E>]> = internal.causeResponse\n\n/**\n * @since 1.0.0\n */\nexport const causeResponseStripped: <E>(\n  cause: Cause.Cause<E>\n) => readonly [response: ServerResponse.HttpServerResponse, cause: Option.Option<Cause.Cause<E>>] =\n  internal.causeResponseStripped\n\n/**\n * @since 1.0.0\n */\nexport const exitResponse: <E>(\n  exit: Exit.Exit<ServerResponse.HttpServerResponse, E>\n) => ServerResponse.HttpServerResponse = internal.exitResponse\n"],"names":["TypeIdError","Respondable","ServerResponse","internal","TypeId","RequestError","symbol","empty","status","methodAndUrl","request","method","url","message","description","reason","isServerError","RouteNotFound","constructor","options","stack","name","ResponseError","info","response","ServeError","clientAbortFiberId","causeResponse","causeResponseStripped","exitResponse"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"file":"HttpIncomingMessage.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpIncomingMessage.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual } from \"effect/Function\"\nimport * as Global from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/HttpIncomingMessage\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpIncomingMessage<E> extends Inspectable.Inspectable {\n  readonly [TypeId]: TypeId\n  readonly headers: Headers.Headers\n  readonly remoteAddress: Option.Option<string>\n  readonly json: Effect.Effect<unknown, E>\n  readonly text: Effect.Effect<string, E>\n  readonly urlParamsBody: Effect.Effect<UrlParams.UrlParams, E>\n  readonly arrayBuffer: Effect.Effect<ArrayBuffer, E>\n  readonly stream: Stream.Stream<Uint8Array, E>\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return <E>(self: HttpIncomingMessage<E>): Effect.Effect<A, E | ParseResult.ParseError, R> =>\n    Effect.flatMap(self.json, parse)\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyUrlParams = <\n  A,\n  I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>,\n  R\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const decode = UrlParams.schemaStruct(schema, options)\n  return <E>(self: HttpIncomingMessage<E>): Effect.Effect<A, E | ParseResult.ParseError, R> =>\n    Effect.flatMap(self.urlParamsBody, decode)\n}\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaHeaders = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return <E>(self: HttpIncomingMessage<E>): Effect.Effect<A, ParseResult.ParseError, R> => parse(self.headers)\n}\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxBodySize: FiberRef.FiberRef<Option.Option<FileSystem.Size>> = Global.globalValue(\n  \"@effect/platform/HttpIncomingMessage/maxBodySize\",\n  () => FiberRef.unsafeMake(Option.none<FileSystem.Size>())\n)\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxBodySize = dual<\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (size: Option.Option<FileSystem.SizeInput>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: Option.Option<FileSystem.SizeInput>) => Effect.Effect<A, E, R>\n>(2, (effect, size) => Effect.locally(effect, maxBodySize, Option.map(size, FileSystem.Size)))\n\n/**\n * @since 1.0.0\n */\nexport const inspect = <E>(self: HttpIncomingMessage<E>, that: object): object => {\n  const contentType = self.headers[\"content-type\"] ?? \"\"\n  let body: unknown\n  if (contentType.includes(\"application/json\")) {\n    try {\n      body = Effect.runSync(self.json)\n    } catch (_) {\n      //\n    }\n  } else if (contentType.includes(\"text/\") || contentType.includes(\"urlencoded\")) {\n    try {\n      body = Effect.runSync(self.text)\n    } catch (_) {\n      //\n    }\n  }\n  const obj: any = {\n    ...that,\n    headers: Inspectable.redact(self.headers),\n    remoteAddress: self.remoteAddress.toJSON()\n  }\n  if (body !== undefined) {\n    obj.body = body\n  }\n  return obj\n}\n"],"names":["Effect","FiberRef","dual","Global","Inspectable","Option","Schema","FileSystem","UrlParams","TypeId","Symbol","for","schemaBodyJson","schema","options","parse","decodeUnknown","self","flatMap","json","schemaBodyUrlParams","decode","schemaStruct","urlParamsBody","schemaHeaders","headers","maxBodySize","globalValue","unsafeMake","none","withMaxBodySize","effect","size","locally","map","Size","inspect","that","contentType","body","includes","runSync","_","text","obj","redact","remoteAddress","toJSON","undefined"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1967, "column": 0}, "map": {"version":3,"file":"path.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/path.ts"],"sourcesContent":["import { GenericTag } from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport { identity } from \"effect/Function\"\nimport * as Layer from \"effect/Layer\"\nimport { BadArgument } from \"../Error.js\"\nimport type * as Api from \"../Path.js\"\n\n/** @internal */\nexport const TypeId: Api.TypeId = Symbol.for(\"@effect/platform/Path\") as Api.TypeId\n\n/** @internal */\nexport const Path = GenericTag<Api.Path>(\"@effect/platform/Path\")\n\n/**\n * The following functions are adapted from the Node.js source code:\n * https://github.com/nodejs/node/blob/main/lib/internal/url.js\n *\n * The following license applies to these functions:\n * - MIT\n */\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path: string, allowAboveRoot: boolean) {\n  let res = \"\"\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let code\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) {\n      code = path.charCodeAt(i)\n    } else if (code === 47 /*/*/) {\n      break\n    } else {\n      code = 47 /*/*/\n    }\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (\n          res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ ||\n          res.charCodeAt(res.length - 2) !== 46 /*.*/\n        ) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\")\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = \"\"\n                lastSegmentLength = 0\n              } else {\n                res = res.slice(0, lastSlashIndex)\n                lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\")\n              }\n              lastSlash = i\n              dots = 0\n              continue\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = \"\"\n            lastSegmentLength = 0\n            lastSlash = i\n            dots = 0\n            continue\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0) {\n            res += \"/..\"\n          } else {\n            res = \"..\"\n          }\n          lastSegmentLength = 2\n        }\n      } else {\n        if (res.length > 0) {\n          res += \"/\" + path.slice(lastSlash + 1, i)\n        } else {\n          res = path.slice(lastSlash + 1, i)\n        }\n        lastSegmentLength = i - lastSlash - 1\n      }\n      lastSlash = i\n      dots = 0\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ;++dots\n    } else {\n      dots = -1\n    }\n  }\n  return res\n}\n\nfunction _format(sep: string, pathObject: Partial<Api.Path.Parsed>) {\n  const dir = pathObject.dir || pathObject.root\n  const base = pathObject.base || (pathObject.name || \"\") + (pathObject.ext || \"\")\n  if (!dir) {\n    return base\n  }\n  if (dir === pathObject.root) {\n    return dir + base\n  }\n  return dir + sep + base\n}\n\nfunction fromFileUrl(url: URL): Effect.Effect<string, BadArgument> {\n  if (url.protocol !== \"file:\") {\n    return Effect.fail(BadArgument({\n      module: \"Path\",\n      method: \"fromFileUrl\",\n      message: \"URL must be of scheme file\"\n    }))\n  } else if (url.hostname !== \"\") {\n    return Effect.fail(BadArgument({\n      module: \"Path\",\n      method: \"fromFileUrl\",\n      message: \"Invalid file URL host\"\n    }))\n  }\n  const pathname = url.pathname\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === \"%\") {\n      const third = pathname.codePointAt(n + 2)! | 0x20\n      if (pathname[n + 1] === \"2\" && third === 102) {\n        return Effect.fail(BadArgument({\n          module: \"Path\",\n          method: \"fromFileUrl\",\n          message: \"must not include encoded / characters\"\n        }))\n      }\n    }\n  }\n  return Effect.succeed(decodeURIComponent(pathname))\n}\n\nconst resolve: Api.Path[\"resolve\"] = function resolve() {\n  let resolvedPath = \"\"\n  let resolvedAbsolute = false\n  let cwd: string | undefined = undefined\n\n  for (let i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    let path: string\n    if (i >= 0) {\n      path = arguments[i]\n    } else {\n      const process = (globalThis as any).process\n      if (\n        cwd === undefined && \"process\" in globalThis &&\n        typeof process === \"object\" &&\n        process !== null &&\n        typeof process.cwd === \"function\"\n      ) {\n        cwd = process.cwd()\n      }\n      path = cwd!\n    }\n\n    // Skip empty entries\n    if (path.length === 0) {\n      continue\n    }\n\n    resolvedPath = path + \"/\" + resolvedPath\n    resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute)\n\n  if (resolvedAbsolute) {\n    if (resolvedPath.length > 0) {\n      return \"/\" + resolvedPath\n    } else {\n      return \"/\"\n    }\n  } else if (resolvedPath.length > 0) {\n    return resolvedPath\n  } else {\n    return \".\"\n  }\n}\n\nconst CHAR_FORWARD_SLASH = 47\n\nfunction toFileUrl(filepath: string) {\n  const outURL = new URL(\"file://\")\n  let resolved = resolve(filepath)\n  // path.resolve strips trailing slashes so we must add them back\n  const filePathLast = filepath.charCodeAt(filepath.length - 1)\n  if (\n    (filePathLast === CHAR_FORWARD_SLASH) &&\n    resolved[resolved.length - 1] !== \"/\"\n  ) {\n    resolved += \"/\"\n  }\n  outURL.pathname = encodePathChars(resolved)\n  return Effect.succeed(outURL)\n}\n\nconst percentRegEx = /%/g\nconst backslashRegEx = /\\\\/g\nconst newlineRegEx = /\\n/g\nconst carriageReturnRegEx = /\\r/g\nconst tabRegEx = /\\t/g\n\nfunction encodePathChars(filepath: string) {\n  if (filepath.includes(\"%\")) {\n    filepath = filepath.replace(percentRegEx, \"%25\")\n  }\n  if (filepath.includes(\"\\\\\")) {\n    filepath = filepath.replace(backslashRegEx, \"%5C\")\n  }\n  if (filepath.includes(\"\\n\")) {\n    filepath = filepath.replace(newlineRegEx, \"%0A\")\n  }\n  if (filepath.includes(\"\\r\")) {\n    filepath = filepath.replace(carriageReturnRegEx, \"%0D\")\n  }\n  if (filepath.includes(\"\\t\")) {\n    filepath = filepath.replace(tabRegEx, \"%09\")\n  }\n  return filepath\n}\n\nconst posixImpl = Path.of({\n  [TypeId]: TypeId,\n  resolve,\n  normalize(path) {\n    if (path.length === 0) return \".\"\n\n    const isAbsolute = path.charCodeAt(0) === 47 /*/*/\n    const trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute)\n\n    if (path.length === 0 && !isAbsolute) path = \".\"\n    if (path.length > 0 && trailingSeparator) path += \"/\"\n\n    if (isAbsolute) return \"/\" + path\n    return path\n  },\n\n  isAbsolute(path) {\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/\n  },\n\n  join() {\n    if (arguments.length === 0) {\n      return \".\"\n    }\n    let joined\n    for (let i = 0; i < arguments.length; ++i) {\n      const arg = arguments[i]\n      if (arg.length > 0) {\n        if (joined === undefined) {\n          joined = arg\n        } else {\n          joined += \"/\" + arg\n        }\n      }\n    }\n    if (joined === undefined) {\n      return \".\"\n    }\n    return posixImpl.normalize(joined)\n  },\n\n  relative(from, to) {\n    if (from === to) return \"\"\n\n    from = posixImpl.resolve(from)\n    to = posixImpl.resolve(to)\n\n    if (from === to) return \"\"\n\n    // Trim any leading backslashes\n    let fromStart = 1\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/) {\n        break\n      }\n    }\n    const fromEnd = from.length\n    const fromLen = fromEnd - fromStart\n\n    // Trim any leading backslashes\n    let toStart = 1\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/) {\n        break\n      }\n    }\n    const toEnd = to.length\n    const toLen = toEnd - toStart\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen\n    let lastCommonSep = -1\n    let i = 0\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1)\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i)\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0\n          }\n        }\n        break\n      }\n      const fromCode = from.charCodeAt(fromStart + i)\n      const toCode = to.charCodeAt(toStart + i)\n      if (fromCode !== toCode) {\n        break\n      } else if (fromCode === 47 /*/*/) {\n        lastCommonSep = i\n      }\n    }\n\n    let out = \"\"\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0) {\n          out += \"..\"\n        } else {\n          out += \"/..\"\n        }\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0) {\n      return out + to.slice(toStart + lastCommonSep)\n    } else {\n      toStart += lastCommonSep\n      if (to.charCodeAt(toStart) === 47 /*/*/) {\n        ;++toStart\n      }\n      return to.slice(toStart)\n    }\n  },\n\n  dirname(path) {\n    if (path.length === 0) return \".\"\n    let code = path.charCodeAt(0)\n    const hasRoot = code === 47 /*/*/\n    let end = -1\n    let matchedSlash = true\n    for (let i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i)\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i\n          break\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false\n      }\n    }\n\n    if (end === -1) return hasRoot ? \"/\" : \".\"\n    if (hasRoot && end === 1) return \"//\"\n    return path.slice(0, end)\n  },\n\n  basename(path, ext) {\n    let start = 0\n    let end = -1\n    let matchedSlash = true\n    let i\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return \"\"\n      let extIdx = ext.length - 1\n      let firstNonSlashEnd = -1\n      for (i = path.length - 1; i >= 0; --i) {\n        const code = path.charCodeAt(i)\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1\n            break\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false\n            firstNonSlashEnd = i + 1\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1\n              end = firstNonSlashEnd\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd\n      else if (end === -1) end = path.length\n      return path.slice(start, end)\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1\n            break\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false\n          end = i + 1\n        }\n      }\n\n      if (end === -1) return \"\"\n      return path.slice(start, end)\n    }\n  },\n\n  extname(path) {\n    let startDot = -1\n    let startPart = 0\n    let end = -1\n    let matchedSlash = true\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = path.charCodeAt(i)\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1\n          break\n        }\n        continue\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false\n        end = i + 1\n      }\n      if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i\n        } else if (preDotState !== 1) {\n          preDotState = 1\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1\n      }\n    }\n\n    if (\n      startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n    ) {\n      return \"\"\n    }\n    return path.slice(startDot, end)\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== \"object\") {\n      throw new TypeError(\"The \\\"pathObject\\\" argument must be of type Object. Received type \" + typeof pathObject)\n    }\n    return _format(\"/\", pathObject)\n  },\n\n  parse(path) {\n    const ret = { root: \"\", dir: \"\", base: \"\", ext: \"\", name: \"\" }\n    if (path.length === 0) return ret\n    let code = path.charCodeAt(0)\n    const isAbsolute = code === 47 /*/*/\n    let start\n    if (isAbsolute) {\n      ret.root = \"/\"\n      start = 1\n    } else {\n      start = 0\n    }\n    let startDot = -1\n    let startPart = 0\n    let end = -1\n    let matchedSlash = true\n    let i = path.length - 1\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i)\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1\n          break\n        }\n        continue\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false\n        end = i + 1\n      }\n      if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i\n        else if (preDotState !== 1) preDotState = 1\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1\n      }\n    }\n\n    if (\n      startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n    ) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end)\n        else ret.base = ret.name = path.slice(startPart, end)\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot)\n        ret.base = path.slice(1, end)\n      } else {\n        ret.name = path.slice(startPart, startDot)\n        ret.base = path.slice(startPart, end)\n      }\n      ret.ext = path.slice(startDot, end)\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1)\n    else if (isAbsolute) ret.dir = \"/\"\n\n    return ret\n  },\n\n  sep: \"/\",\n  fromFileUrl,\n  toFileUrl,\n  toNamespacedPath: identity\n})\n\n/** @internal */\nexport const layer = Layer.succeed(Path, posixImpl)\n"],"names":["GenericTag","Effect","identity","Layer","BadArgument","TypeId","Symbol","for","Path","normalizeStringPosix","path","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","_format","sep","pathObject","dir","root","base","name","ext","fromFileUrl","url","protocol","fail","module","method","message","hostname","pathname","n","third","codePointAt","succeed","decodeURIComponent","resolve","resolvedPath","resolvedAbsolute","cwd","undefined","arguments","process","globalThis","CHAR_FORWARD_SLASH","toFileUrl","filepath","outURL","URL","resolved","filePathLast","encodePathChars","percentRegEx","backslashRegEx","newlineRegEx","carriageReturnRegEx","tabRegEx","includes","replace","posixImpl","of","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","out","dirname","hasRoot","end","matchedSlash","basename","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","TypeError","parse","ret","toNamespacedPath","layer"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2519, "column": 0}, "map": {"version":3,"file":"Path.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Path.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\n\nimport type { Tag } from \"effect/Context\"\nimport type { Effect } from \"effect/Effect\"\nimport type { Layer } from \"effect/Layer\"\nimport type { BadArgument } from \"./Error.js\"\nimport * as internal from \"./internal/path.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category model\n */\nexport interface Path {\n  readonly [TypeId]: TypeId\n  readonly sep: string\n  readonly basename: (path: string, suffix?: string) => string\n  readonly dirname: (path: string) => string\n  readonly extname: (path: string) => string\n  readonly format: (pathObject: Partial<Path.Parsed>) => string\n  readonly fromFileUrl: (url: URL) => Effect<string, BadArgument>\n  readonly isAbsolute: (path: string) => boolean\n  readonly join: (...paths: ReadonlyArray<string>) => string\n  readonly normalize: (path: string) => string\n  readonly parse: (path: string) => Path.Parsed\n  readonly relative: (from: string, to: string) => string\n  readonly resolve: (...pathSegments: ReadonlyArray<string>) => string\n  readonly toFileUrl: (path: string) => Effect<URL, BadArgument>\n  readonly toNamespacedPath: (path: string) => string\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Path {\n  /**\n   * @since 1.0.0\n   * @category model\n   */\n  export interface Parsed {\n    readonly root: string\n    readonly dir: string\n    readonly base: string\n    readonly ext: string\n    readonly name: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category tag\n */\nexport const Path: Tag<Path, Path> = internal.Path\n\n/**\n * An implementation of the Path interface that can be used in all environments\n * (including browsers).\n *\n * It uses the POSIX standard for paths.\n *\n * @since 1.0.0\n * @category layer\n */\nexport const layer: Layer<Path> = internal.layer\n"],"names":["internal","TypeId","Path","layer"],"mappings":"AAAA;;;;;;;AAQA,OAAO,KAAKA,QAAQ,MAAM,oBAAoB;;AAMvC,MAAMC,MAAM,6KAAkBD,QAAQ,CAACC,AAAM;AAmD7C,MAAMC,IAAI,6KAAoBF,OAAa,CAAL,CAACE;AAWvC,MAAMC,KAAK,6KAAgBH,QAAQ,AAAM,CAALG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2537, "column": 0}, "map": {"version":3,"file":"multipart.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/multipart.ts"],"sourcesContent":["import * as Channel from \"effect/Channel\"\nimport * as Chunk from \"effect/Chunk\"\nimport * as Effect from \"effect/Effect\"\nimport * as Exit from \"effect/Exit\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Mailbox from \"effect/Mailbox\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as AsyncInput from \"effect/SingleProducerAsyncInput\"\nimport * as Stream from \"effect/Stream\"\nimport * as MP from \"multipasta\"\nimport { TypeIdError } from \"../Error.js\"\nimport * as FileSystem from \"../FileSystem.js\"\nimport * as IncomingMessage from \"../HttpIncomingMessage.js\"\nimport type * as Multipart from \"../Multipart.js\"\nimport * as Path from \"../Path.js\"\n\n/** @internal */\nexport const TypeId: Multipart.TypeId = Symbol.for(\"@effect/platform/Multipart\") as Multipart.TypeId\n\n/** @internal */\nexport const isPart = (u: unknown): u is Multipart.Part => Predicate.hasProperty(u, TypeId)\n\n/** @internal */\nexport const isField = (u: unknown): u is Multipart.Field => isPart(u) && u._tag === \"Field\"\n\n/** @internal */\nexport const isFile = (u: unknown): u is Multipart.File => isPart(u) && u._tag === \"File\"\n\n/** @internal */\nexport const isPersistedFile = (u: unknown): u is Multipart.PersistedFile =>\n  Predicate.hasProperty(u, TypeId) && Predicate.isTagged(u, \"PersistedFile\")\n\n/** @internal */\nexport const ErrorTypeId: Multipart.ErrorTypeId = Symbol.for(\n  \"@effect/platform/Multipart/MultipartError\"\n) as Multipart.ErrorTypeId\n\n/** @internal */\nexport class MultipartError extends TypeIdError(ErrorTypeId, \"MultipartError\")<{\n  readonly reason: \"FileTooLarge\" | \"FieldTooLarge\" | \"BodyTooLarge\" | \"TooManyParts\" | \"InternalError\" | \"Parse\"\n  readonly cause: unknown\n}> {\n  get message(): string {\n    return this.reason\n  }\n}\n\n/** @internal */\nexport const maxParts: FiberRef.FiberRef<Option.Option<number>> = globalValue(\n  \"@effect/platform/Multipart/maxParts\",\n  () => FiberRef.unsafeMake(Option.none<number>())\n)\n\n/** @internal */\nexport const withMaxParts = dual<\n  (count: Option.Option<number>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, count: Option.Option<number>) => Effect.Effect<A, E, R>\n>(2, (effect, count) => Effect.locally(effect, maxParts, count))\n\n/** @internal */\nexport const maxFieldSize: FiberRef.FiberRef<FileSystem.Size> = globalValue(\n  \"@effect/platform/Multipart/maxFieldSize\",\n  () => FiberRef.unsafeMake(FileSystem.Size(10 * 1024 * 1024))\n)\n\n/** @internal */\nexport const withMaxFieldSize = dual<\n  (size: FileSystem.SizeInput) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: FileSystem.SizeInput) => Effect.Effect<A, E, R>\n>(2, (effect, size) => Effect.locally(effect, maxFieldSize, FileSystem.Size(size)))\n\n/** @internal */\nexport const maxFileSize: FiberRef.FiberRef<Option.Option<FileSystem.Size>> = globalValue(\n  \"@effect/platform/Multipart/maxFileSize\",\n  () => FiberRef.unsafeMake(Option.none<FileSystem.Size>())\n)\n\n/** @internal */\nexport const withMaxFileSize = dual<\n  (size: Option.Option<FileSystem.SizeInput>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: Option.Option<FileSystem.SizeInput>) => Effect.Effect<A, E, R>\n>(2, (effect, size) => Effect.locally(effect, maxFileSize, Option.map(size, FileSystem.Size)))\n\n/** @internal */\nexport const fieldMimeTypes: FiberRef.FiberRef<Chunk.Chunk<string>> = globalValue(\n  \"@effect/platform/Multipart/fieldMimeTypes\",\n  () => FiberRef.unsafeMake<Chunk.Chunk<string>>(Chunk.make(\"application/json\"))\n)\n\n/** @internal */\nexport const withFieldMimeTypes = dual<\n  (mimeTypes: ReadonlyArray<string>) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, mimeTypes: ReadonlyArray<string>) => Effect.Effect<A, E, R>\n>(2, (effect, mimeTypes) => Effect.locally(effect, fieldMimeTypes, Chunk.fromIterable(mimeTypes)))\n\n/** @internal */\nexport const FileSchema: Schema.Schema<Multipart.PersistedFile> = Schema.declare(isPersistedFile, {\n  identifier: \"PersistedFile\",\n  jsonSchema: {\n    type: \"string\",\n    format: \"binary\"\n  }\n})\n\n/** @internal */\nexport const FilesSchema: Schema.Schema<ReadonlyArray<Multipart.PersistedFile>> = Schema.Array(FileSchema)\n\n/** @internal */\nexport const SingleFileSchema: Schema.transform<\n  Schema.Schema<ReadonlyArray<Multipart.PersistedFile>>,\n  Schema.Schema<Multipart.PersistedFile>\n> = Schema.transform(FilesSchema.pipe(Schema.itemsCount(1)), FileSchema, {\n  strict: true,\n  decode: ([file]) => file,\n  encode: (file) => [file]\n})\n\n/** @internal */\nexport const schemaPersisted = <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return (persisted: Multipart.Persisted) => parse(persisted)\n}\n\n/** @internal */\nexport const schemaJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined): {\n  (\n    field: string\n  ): (persisted: Multipart.Persisted) => Effect.Effect<A, ParseResult.ParseError, R>\n  (\n    persisted: Multipart.Persisted,\n    field: string\n  ): Effect.Effect<A, ParseResult.ParseError, R>\n} => {\n  const fromJson = Schema.parseJson(schema)\n  return dual<\n    (\n      field: string\n    ) => (\n      persisted: Multipart.Persisted\n    ) => Effect.Effect<A, ParseResult.ParseError, R>,\n    (\n      persisted: Multipart.Persisted,\n      field: string\n    ) => Effect.Effect<A, ParseResult.ParseError, R>\n  >(2, (persisted, field) =>\n    Effect.map(\n      Schema.decodeUnknown(\n        Schema.Struct({\n          [field]: fromJson\n        }),\n        options\n      )(persisted),\n      (_) => _[field]\n    ))\n}\n\n/** @internal */\nexport const makeConfig = (\n  headers: Record<string, string>\n): Effect.Effect<MP.BaseConfig> =>\n  Effect.withFiberRuntime((fiber) => {\n    const mimeTypes = fiber.getFiberRef(fieldMimeTypes)\n    return Effect.succeed<MP.BaseConfig>({\n      headers,\n      maxParts: Option.getOrUndefined(fiber.getFiberRef(maxParts)),\n      maxFieldSize: Number(fiber.getFiberRef(maxFieldSize)),\n      maxPartSize: fiber.getFiberRef(maxFileSize).pipe(Option.map(Number), Option.getOrUndefined),\n      maxTotalSize: fiber.getFiberRef(IncomingMessage.maxBodySize).pipe(Option.map(Number), Option.getOrUndefined),\n      isFile: mimeTypes.length === 0 ? undefined : (info: MP.PartInfo): boolean =>\n        !Chunk.some(\n          mimeTypes,\n          (_) => info.contentType.includes(_)\n        ) && MP.defaultIsFile(info)\n    })\n  })\n\n/** @internal */\nexport const makeChannel = <IE>(\n  headers: Record<string, string>,\n  bufferSize = 16\n): Channel.Channel<\n  Chunk.Chunk<Multipart.Part>,\n  Chunk.Chunk<Uint8Array>,\n  Multipart.MultipartError | IE,\n  IE,\n  unknown,\n  unknown\n> =>\n  Channel.acquireUseRelease(\n    Effect.all([\n      makeConfig(headers),\n      Mailbox.make<Chunk.Chunk<Uint8Array>>(bufferSize)\n    ]),\n    ([config, mailbox]) => {\n      let partsBuffer: Array<Multipart.Part> = []\n      let exit = Option.none<Exit.Exit<void, IE | Multipart.MultipartError>>()\n\n      const input: AsyncInput.AsyncInputProducer<IE, Chunk.Chunk<Uint8Array>, unknown> = {\n        awaitRead: () => Effect.void,\n        emit(element) {\n          return mailbox.offer(element)\n        },\n        error(cause) {\n          exit = Option.some(Exit.failCause(cause))\n          return mailbox.end\n        },\n        done(_value) {\n          return mailbox.end\n        }\n      }\n\n      const parser = MP.make({\n        ...config,\n        onField(info, value) {\n          partsBuffer.push(new FieldImpl(info.name, info.contentType, MP.decodeField(info, value)))\n        },\n        onFile(info) {\n          let chunks: Array<Uint8Array> = []\n          let finished = false\n          const take: Channel.Channel<Chunk.Chunk<Uint8Array>> = Channel.suspend(() => {\n            if (chunks.length === 0) {\n              return finished ? Channel.void : Channel.zipRight(pump, take)\n            }\n            const chunk = Chunk.unsafeFromArray(chunks)\n            chunks = []\n            return finished ? Channel.write(chunk) : Channel.zipRight(\n              Channel.write(chunk),\n              Channel.zipRight(pump, take)\n            )\n          })\n          partsBuffer.push(new FileImpl(info, take))\n          return function(chunk) {\n            if (chunk === null) {\n              finished = true\n            } else {\n              chunks.push(chunk)\n            }\n          }\n        },\n        onError(error_) {\n          exit = Option.some(Exit.fail(convertError(error_)))\n        },\n        onDone() {\n          exit = Option.some(Exit.void)\n        }\n      })\n\n      const pump = Channel.flatMap(\n        mailbox.takeAll,\n        ([chunks, done]) =>\n          Channel.sync(() => {\n            Chunk.forEach(chunks, Chunk.forEach(parser.write))\n            if (done) {\n              parser.end()\n            }\n          })\n      )\n\n      const partsChannel: Channel.Channel<\n        Chunk.Chunk<Multipart.Part>,\n        unknown,\n        IE | Multipart.MultipartError\n      > = Channel.flatMap(\n        pump,\n        () => {\n          if (partsBuffer.length === 0) {\n            return exit._tag === \"None\" ? partsChannel : writeExit(exit.value)\n          }\n          const chunk = Chunk.unsafeFromArray(partsBuffer)\n          partsBuffer = []\n          return Channel.zipRight(\n            Channel.write(chunk),\n            exit._tag === \"None\" ? partsChannel : writeExit(exit.value)\n          )\n        }\n      )\n\n      return Channel.embedInput(partsChannel, input)\n    },\n    ([, mailbox]) => mailbox.shutdown\n  )\n\nconst writeExit = <A, E>(\n  self: Exit.Exit<A, E>\n): Channel.Channel<never, unknown, E> => self._tag === \"Success\" ? Channel.void : Channel.failCause(self.cause)\n\nfunction convertError(cause: MP.MultipartError): Multipart.MultipartError {\n  switch (cause._tag) {\n    case \"ReachedLimit\": {\n      switch (cause.limit) {\n        case \"MaxParts\": {\n          return new MultipartError({ reason: \"TooManyParts\", cause })\n        }\n        case \"MaxFieldSize\": {\n          return new MultipartError({ reason: \"FieldTooLarge\", cause })\n        }\n        case \"MaxPartSize\": {\n          return new MultipartError({ reason: \"FileTooLarge\", cause })\n        }\n        case \"MaxTotalSize\": {\n          return new MultipartError({ reason: \"BodyTooLarge\", cause })\n        }\n      }\n    }\n    default: {\n      return new MultipartError({ reason: \"Parse\", cause })\n    }\n  }\n}\n\nabstract class PartBase extends Inspectable.Class {\n  readonly [TypeId]: Multipart.TypeId\n  constructor() {\n    super()\n    this[TypeId] = TypeId\n  }\n}\n\nclass FieldImpl extends PartBase implements Multipart.Field {\n  readonly _tag = \"Field\"\n\n  constructor(\n    readonly key: string,\n    readonly contentType: string,\n    readonly value: string\n  ) {\n    super()\n  }\n\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/Multipart/Part\",\n      _tag: \"Field\",\n      key: this.key,\n      contentType: this.contentType,\n      value: this.value\n    }\n  }\n}\n\nclass FileImpl extends PartBase implements Multipart.File {\n  readonly _tag = \"File\"\n  readonly key: string\n  readonly name: string\n  readonly contentType: string\n  readonly content: Stream.Stream<Uint8Array, Multipart.MultipartError>\n\n  constructor(\n    info: MP.PartInfo,\n    channel: Channel.Channel<Chunk.Chunk<Uint8Array>, unknown, never, unknown, void, unknown>\n  ) {\n    super()\n    this.key = info.name\n    this.name = info.filename ?? info.name\n    this.contentType = info.contentType\n    this.content = Stream.fromChannel(channel)\n  }\n\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/Multipart/Part\",\n      _tag: \"File\",\n      key: this.key,\n      name: this.name,\n      contentType: this.contentType\n    }\n  }\n}\n\nconst defaultWriteFile = (path: string, file: Multipart.File) =>\n  Effect.flatMap(\n    FileSystem.FileSystem,\n    (fs) =>\n      Effect.mapError(\n        Stream.run(file.content, fs.sink(path)),\n        (cause) => new MultipartError({ reason: \"InternalError\", cause })\n      )\n  )\n\n/** @internal */\nexport const toPersisted = (\n  stream: Stream.Stream<Multipart.Part, Multipart.MultipartError>,\n  writeFile = defaultWriteFile\n): Effect.Effect<Multipart.Persisted, Multipart.MultipartError, FileSystem.FileSystem | Path.Path | Scope.Scope> =>\n  Effect.gen(function*() {\n    const fs = yield* FileSystem.FileSystem\n    const path_ = yield* Path.Path\n    const dir = yield* fs.makeTempDirectoryScoped()\n    const persisted: Record<string, Array<Multipart.PersistedFile> | Array<string> | string> = Object.create(null)\n    yield* Stream.runForEach(stream, (part) => {\n      if (part._tag === \"Field\") {\n        if (!(part.key in persisted)) {\n          persisted[part.key] = part.value\n        } else if (typeof persisted[part.key] === \"string\") {\n          persisted[part.key] = [persisted[part.key] as string, part.value]\n        } else {\n          ;(persisted[part.key] as Array<string>).push(part.value)\n        }\n        return Effect.void\n      } else if (part.name === \"\") {\n        return Effect.void\n      }\n      const file = part\n      const path = path_.join(dir, path_.basename(file.name).slice(-128))\n      const filePart = new PersistedFileImpl(\n        file.key,\n        file.name,\n        file.contentType,\n        path\n      )\n      if (Array.isArray(persisted[part.key])) {\n        ;(persisted[part.key] as Array<Multipart.PersistedFile>).push(filePart)\n      } else {\n        persisted[part.key] = [filePart]\n      }\n      return writeFile(path, file)\n    })\n    return persisted\n  }).pipe(\n    Effect.catchTags({\n      SystemError: (cause) => Effect.fail(new MultipartError({ reason: \"InternalError\", cause })),\n      BadArgument: (cause) => Effect.fail(new MultipartError({ reason: \"InternalError\", cause }))\n    })\n  )\n\nclass PersistedFileImpl extends PartBase implements Multipart.PersistedFile {\n  readonly _tag = \"PersistedFile\"\n\n  constructor(\n    readonly key: string,\n    readonly name: string,\n    readonly contentType: string,\n    readonly path: string\n  ) {\n    super()\n  }\n\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/Multipart/Part\",\n      _tag: \"PersistedFile\",\n      key: this.key,\n      name: this.name,\n      contentType: this.contentType,\n      path: this.path\n    }\n  }\n}\n"],"names":["Channel","Chunk","Effect","Exit","FiberRef","dual","globalValue","Inspectable","Mailbox","Option","Predicate","Schema","Stream","MP","TypeIdError","FileSystem","IncomingMessage","Path","TypeId","Symbol","for","isPart","u","hasProperty","isField","_tag","isFile","isPersistedFile","isTagged","ErrorTypeId","MultipartError","message","reason","maxParts","unsafeMake","none","withMaxParts","effect","count","locally","maxFieldSize","Size","withMaxFieldSize","size","maxFileSize","withMaxFileSize","map","fieldMimeTypes","make","withFieldMimeTypes","mimeTypes","fromIterable","FileSchema","declare","identifier","jsonSchema","type","format","FilesSchema","Array","SingleFileSchema","transform","pipe","itemsCount","strict","decode","file","encode","schemaPersisted","schema","options","parse","decodeUnknown","persisted","schemaJson","fromJson","parseJson","field","Struct","_","makeConfig","headers","withFiberRuntime","fiber","getFiberRef","succeed","getOrUndefined","Number","maxPartSize","maxTotalSize","maxBodySize","length","undefined","info","some","contentType","includes","defaultIsFile","makeChannel","bufferSize","acquireUseRelease","all","config","mailbox","partsBuffer","exit","input","awaitRead","void","emit","element","offer","error","cause","failCause","end","done","_value","parser","onField","value","push","FieldImpl","name","decodeField","onFile","chunks","finished","take","suspend","zipRight","pump","chunk","unsafeFromArray","write","FileImpl","onError","error_","fail","convertError","onDone","flatMap","takeAll","sync","forEach","partsChannel","writeExit","embedInput","shutdown","self","limit","PartBase","Class","constructor","key","toJSON","_id","content","channel","filename","fromChannel","defaultWriteFile","path","fs","mapError","run","sink","toPersisted","stream","writeFile","gen","path_","dir","makeTempDirectoryScoped","Object","create","runForEach","part","join","basename","slice","filePart","PersistedFileImpl","isArray","catchTags","SystemError","BadArgument"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,IAAI,MAAM,aAAa;AACnC,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AACjD,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAEvC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAC7C,OAAO,KAAKC,MAAM,MAAM,eAAe;AAIvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,EAAE,MAAM,YAAY;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAO,KAAKC,eAAe,MAAM,2BAA2B;AAE5D,OAAO,KAAKC,IAAI,MAAM,YAAY;;;;;;;;;;;;;;;;;;;AAG3B,MAAMC,MAAM,GAAA,WAAA,GAAqBC,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAqB;AAG7F,MAAMC,MAAM,IAAIC,CAAU,4JAA0BZ,SAAS,CAACa,IAAAA,AAAW,EAACD,CAAC,EAAEJ,MAAM,CAAC;AAGpF,MAAMM,OAAO,IAAIF,CAAU,GAA2BD,MAAM,CAACC,CAAC,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,OAAO;AAGrF,MAAMC,MAAM,IAAIJ,CAAU,GAA0BD,MAAM,CAACC,CAAC,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,MAAM;AAGlF,MAAME,eAAe,IAAIL,CAAU,4JACxCZ,SAAS,CAACa,IAAAA,AAAW,EAACD,CAAC,EAAEJ,MAAM,CAAC,6JAAIR,SAAS,CAACkB,CAAAA,AAAQ,EAACN,CAAC,EAAE,eAAe,CAAC;AAGrE,MAAMO,WAAW,GAAA,WAAA,GAA0BV,MAAM,CAACC,GAAG,CAC1D,2CAA2C,CACnB;AAGpB,MAAOU,cAAe,SAAA,WAAA,sKAAQhB,cAAAA,AAAW,EAACe,WAAW,EAAE,gBAAgB,CAG3E;IACA,IAAIE,OAAOA,CAAA,EAAA;QACT,OAAO,IAAI,CAACC,MAAM;IACpB;;AAIK,MAAMC,QAAQ,GAAA,WAAA,8JAA6C3B,cAAAA,AAAW,EAC3E,qCAAqC,EACrC,4JAAMF,QAAQ,CAAC8B,IAAAA,AAAU,wJAACzB,MAAM,CAAC0B,AAAI,EAAU,CAAC,CACjD;AAGM,MAAMC,YAAY,GAAA,WAAA,2JAAG/B,OAAAA,AAAI,EAG9B,CAAC,EAAE,CAACgC,MAAM,EAAEC,KAAK,yJAAKpC,MAAM,CAACqC,GAAAA,AAAO,EAACF,MAAM,EAAEJ,QAAQ,EAAEK,KAAK,CAAC,CAAC;AAGzD,MAAME,YAAY,GAAA,WAAA,OAAuClC,qKAAAA,AAAW,EACzE,yCAAyC,EACzC,2JAAMF,QAAQ,CAAC8B,KAAAA,AAAU,0KAACnB,OAAW0B,AAAI,EAAC,CAAN,CAACA,AAAO,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAC7D;AAGM,MAAMC,gBAAgB,GAAA,WAAA,0JAAGrC,QAAAA,AAAI,EAGlC,CAAC,EAAE,CAACgC,MAAM,EAAEM,IAAI,yJAAKzC,MAAM,CAACqC,GAAAA,AAAO,EAACF,MAAM,EAAEG,YAAY,0KAAEzB,OAAW0B,AAAI,EAACE,CAAN,CAACF,EAAS,CAAC,CAAC,CAAC;AAG5E,MAAMG,WAAW,GAAA,WAAA,8JAAsDtC,cAAAA,AAAW,EACvF,wCAAwC,EACxC,4JAAMF,QAAQ,CAAC8B,IAAAA,AAAU,uJAACzB,MAAM,CAAC0B,CAAAA,AAAI,EAAmB,CAAC,CAC1D;AAGM,MAAMU,eAAe,GAAA,WAAA,2JAAGxC,OAAAA,AAAI,EAGjC,CAAC,EAAE,CAACgC,MAAM,EAAEM,IAAI,yJAAKzC,MAAM,CAACqC,GAAAA,AAAO,EAACF,MAAM,EAAEO,WAAW,uJAAEnC,MAAM,CAACqC,AAAG,EAACH,IAAI,sKAAE5B,OAAe,CAAC,CAAC,CAAC,AAAR,CAAC0B;AAGhF,MAAMM,cAAc,GAAA,WAAA,8JAA2CzC,cAAAA,AAAW,EAC/E,2CAA2C,EAC3C,4JAAMF,QAAQ,CAAC8B,IAAAA,AAAU,MAAsBjC,KAAK,CAAC+C,kJAAAA,AAAI,EAAC,kBAAkB,CAAC,CAAC,CAC/E;AAGM,MAAMC,kBAAkB,GAAA,WAAA,2JAAG5C,OAAAA,AAAI,EAGpC,CAAC,EAAE,CAACgC,MAAM,EAAEa,SAAS,yJAAKhD,MAAM,CAACqC,GAAAA,AAAO,EAACF,MAAM,EAAEU,cAAc,uJAAE9C,KAAK,CAACkD,SAAAA,AAAY,EAACD,SAAS,CAAC,CAAC,CAAC;AAG3F,MAAME,UAAU,GAAA,WAAA,GAA2CzC,MAAM,CAAC0C,yKAAO,AAAPA,EAAQ1B,eAAe,EAAE;IAChG2B,UAAU,EAAE,eAAe;IAC3BC,UAAU,EAAE;QACVC,IAAI,EAAE,QAAQ;QACdC,MAAM,EAAE;;CAEX,CAAC;AAGK,MAAMC,WAAW,GAAA,WAAA,yKAA0D/C,MAAM,CAACgD,CAAAA,AAAK,EAACP,UAAU,CAAC;AAGnG,MAAMQ,gBAAgB,GAAA,WAAA,GAGzBjD,MAAM,CAACkD,2KAAAA,AAAS,EAAA,WAAA,GAACH,WAAW,CAACI,IAAI,CAAA,WAAA,yKAACnD,MAAM,CAACoD,MAAAA,AAAU,EAAC,CAAC,CAAC,CAAC,EAAEX,UAAU,EAAE;IACvEY,MAAM,EAAE,IAAI;IACZC,MAAM,EAAEA,CAAC,CAACC,IAAI,CAAC,GAAKA,IAAI;IACxBC,MAAM,GAAGD,IAAI,GAAK;YAACA,IAAI;SAAA;CACxB,CAAC;AAGK,MAAME,eAAe,GAAGA,CAC7BC,MAA8B,EAC9BC,OAAkC,KAChC;IACF,MAAMC,KAAK,yKAAG5D,MAAM,CAAC6D,SAAAA,AAAa,EAACH,MAAM,EAAEC,OAAO,CAAC;IACnD,QAAQG,SAA8B,GAAKF,KAAK,CAACE,SAAS,CAAC;AAC7D,CAAC;AAGM,MAAMC,UAAU,GAAGA,CAAUL,MAA8B,EAAEC,OAAkC,KAQlG;IACF,MAAMK,QAAQ,yKAAGhE,MAAM,CAACiE,KAAAA,AAAS,EAACP,MAAM,CAAC;IACzC,+JAAOhE,OAAI,AAAJA,EAUL,CAAC,EAAE,CAACoE,SAAS,EAAEI,KAAK,yJACpB3E,MAAM,AAAC4C,AAAG,CAAHA,uKACLnC,MAAM,CAAC6D,SAAAA,AAAa,wKAClB7D,MAAM,CAACmE,EAAAA,AAAM,EAAC;YACZ,CAACD,KAAK,CAAA,EAAGF;SACV,CAAC,EACFL,OAAO,CACR,CAACG,SAAS,CAAC,GACXM,CAAC,GAAKA,CAAC,CAACF,KAAK,CAAC,CAChB,CAAC;AACN,CAAC;AAGM,MAAMG,UAAU,IACrBC,OAA+B,yJAE/B/E,MAAM,CAACgF,YAAAA,AAAgB,GAAEC,KAAK,IAAI;QAChC,MAAMjC,SAAS,GAAGiC,KAAK,CAACC,WAAW,CAACrC,cAAc,CAAC;QACnD,6JAAO7C,MAAM,CAACmF,GAAAA,AAAO,EAAgB;YACnCJ,OAAO;YACPhD,QAAQ,wJAAExB,MAAM,CAAC6E,UAAAA,AAAc,EAACH,KAAK,CAACC,WAAW,CAACnD,QAAQ,CAAC,CAAC;YAC5DO,YAAY,EAAE+C,MAAM,CAACJ,KAAK,CAACC,WAAW,CAAC5C,YAAY,CAAC,CAAC;YACrDgD,WAAW,EAAEL,KAAK,CAACC,WAAW,CAACxC,WAAW,CAAC,CAACkB,IAAI,uJAACrD,MAAM,AAACqC,AAAG,CAAHA,CAAIyC,MAAM,CAAC,oJAAE9E,MAAM,CAAC6E,UAAc,CAAC;YAC3FG,YAAY,EAAEN,KAAK,CAACC,WAAW,8KAACpE,cAA2B,CAAC,AAAb,CAAC0E,AAAa5B,IAAI,uJAACrD,MAAM,AAACqC,AAAG,CAAHA,CAAIyC,MAAM,CAAC,mJAAE9E,MAAM,CAAC6E,WAAc,CAAC;YAC5G5D,MAAM,EAAEwB,SAAS,CAACyC,MAAM,KAAK,CAAC,GAAGC,SAAS,IAAIC,IAAiB,GAC7D,sJAAC5F,KAAK,CAAC6F,CAAAA,AAAI,EACT5C,SAAS,GACR6B,CAAC,GAAKc,IAAI,CAACE,WAAW,CAACC,QAAQ,CAACjB,CAAC,CAAC,CACpC,4JAAIlE,EAAE,CAACoF,cAAAA,AAAa,EAACJ,IAAI;SAC7B,CAAC;IACJ,CAAC,CAAC;AAGG,MAAMK,WAAW,GAAGA,CACzBjB,OAA+B,EAC/BkB,UAAU,GAAG,EAAE,0JASfnG,OAAO,CAACoG,YAAAA,AAAiB,uJACvBlG,MAAM,CAACmG,AAAG,EAAC;QACTrB,UAAU,CAACC,OAAO,CAAC;+JACnBzE,OAAO,AAACwC,AAAI,CAAJA,CAA8BmD,UAAU,CAAC;KAClD,CAAC,EACF,CAAC,CAACG,MAAM,EAAEC,OAAO,CAAC,KAAI;QACpB,IAAIC,WAAW,GAA0B,EAAE;QAC3C,IAAIC,IAAI,OAAGhG,MAAM,CAAC0B,kJAAAA,AAAI,EAAkD;QAExE,MAAMuE,KAAK,GAAwE;YACjFC,SAAS,EAAEA,CAAA,qJAAMzG,MAAM,CAAC0G,AAAI;YAC5BC,IAAIA,EAACC,OAAO;gBACV,OAAOP,OAAO,CAACQ,KAAK,CAACD,OAAO,CAAC;YAC/B,CAAC;YACDE,KAAKA,EAACC,KAAK;gBACTR,IAAI,OAAGhG,MAAM,CAACqF,kJAAAA,AAAI,sJAAC3F,IAAI,CAAC+G,OAAAA,AAAS,EAACD,KAAK,CAAC,CAAC;gBACzC,OAAOV,OAAO,CAACY,GAAG;YACpB,CAAC;YACDC,IAAIA,EAACC,MAAM;gBACT,OAAOd,OAAO,CAACY,GAAG;YACpB;SACD;QAED,MAAMG,MAAM,4JAAGzG,EAAE,CAACmC,IAAI,AAAJA,EAAK;YACrB,GAAGsD,MAAM;YACTiB,OAAOA,EAAC1B,IAAI,EAAE2B,KAAK;gBACjBhB,WAAW,CAACiB,IAAI,CAAC,IAAIC,SAAS,CAAC7B,IAAI,CAAC8B,IAAI,EAAE9B,IAAI,CAACE,WAAW,2JAAElF,EAAE,CAAC+G,WAAW,AAAXA,EAAY/B,IAAI,EAAE2B,KAAK,CAAC,CAAC,CAAC;YAC3F,CAAC;YACDK,MAAMA,EAAChC,IAAI;gBACT,IAAIiC,MAAM,GAAsB,EAAE;gBAClC,IAAIC,QAAQ,GAAG,KAAK;gBACpB,MAAMC,IAAI,0JAA6ChI,OAAO,CAACiI,EAAAA,AAAO,EAAC,MAAK;oBAC1E,IAAIH,MAAM,CAACnC,MAAM,KAAK,CAAC,EAAE;wBACvB,OAAOoC,QAAQ,sJAAG/H,OAAO,AAAK,CAAJ4G,EAAO5G,OAAO,CAACkI,0JAAAA,AAAQ,EAACC,IAAI,EAAEH,IAAI,CAAC;oBAC/D;oBACA,MAAMI,KAAK,wJAAGnI,KAAK,CAACoI,YAAAA,AAAe,EAACP,MAAM,CAAC;oBAC3CA,MAAM,GAAG,EAAE;oBACX,OAAOC,QAAQ,0JAAG/H,OAAO,CAACsI,AAAK,EAACF,KAAK,CAAC,GAAGpI,OAAO,CAACkI,0JAAAA,AAAQ,yJACvDlI,OAAO,CAACsI,AAAK,EAACF,KAAK,CAAC,yJACpBpI,OAAO,CAACkI,GAAAA,AAAQ,EAACC,IAAI,EAAEH,IAAI,CAAC,CAC7B;gBACH,CAAC,CAAC;gBACFxB,WAAW,CAACiB,IAAI,CAAC,IAAIc,QAAQ,CAAC1C,IAAI,EAAEmC,IAAI,CAAC,CAAC;gBAC1C,OAAO,SAASI,KAAK;oBACnB,IAAIA,KAAK,KAAK,IAAI,EAAE;wBAClBL,QAAQ,GAAG,IAAI;oBACjB,CAAC,MAAM;wBACLD,MAAM,CAACL,IAAI,CAACW,KAAK,CAAC;oBACpB;gBACF,CAAC;YACH,CAAC;YACDI,OAAOA,EAACC,MAAM;gBACZhC,IAAI,yJAAGhG,MAAM,CAACqF,AAAI,sJAAC3F,IAAI,CAACuI,EAAAA,AAAI,EAACC,YAAY,CAACF,MAAM,CAAC,CAAC,CAAC;YACrD,CAAC;YACDG,MAAMA,CAAA;gBACJnC,IAAI,yJAAGhG,MAAM,CAACqF,AAAI,kJAAC3F,IAAI,CAACyG,EAAI,CAAC;YAC/B;SACD,CAAC;QAEF,MAAMuB,IAAI,IAAGnI,OAAO,CAAC6I,wJAAAA,AAAO,EAC1BtC,OAAO,CAACuC,OAAO,EACf,CAAC,CAAChB,MAAM,EAAEV,IAAI,CAAC,0JACbpH,OAAO,AAAC+I,AAAI,CAAJA,CAAK,MAAK;gBAChB9I,KAAK,CAAC+I,yJAAAA,AAAO,EAAClB,MAAM,uJAAE7H,KAAK,CAAC+I,IAAAA,AAAO,EAAC1B,MAAM,CAACgB,KAAK,CAAC,CAAC;gBAClD,IAAIlB,IAAI,EAAE;oBACRE,MAAM,CAACH,GAAG,EAAE;gBACd;YACF,CAAC,CAAC,CACL;QAED,MAAM8B,YAAY,0JAIdjJ,OAAO,CAAC6I,EAAO,AAAPA,EACVV,IAAI,EACJ,MAAK;YACH,IAAI3B,WAAW,CAACb,MAAM,KAAK,CAAC,EAAE;gBAC5B,OAAOc,IAAI,CAAChF,IAAI,KAAK,MAAM,GAAGwH,YAAY,GAAGC,SAAS,CAACzC,IAAI,CAACe,KAAK,CAAC;YACpE;YACA,MAAMY,KAAK,wJAAGnI,KAAK,CAACoI,YAAAA,AAAe,EAAC7B,WAAW,CAAC;YAChDA,WAAW,GAAG,EAAE;YAChB,OAAOxG,OAAO,CAACkI,0JAAAA,AAAQ,yJACrBlI,OAAO,CAAM,AAALsI,EAAMF,KAAK,CAAC,EACpB3B,IAAI,CAAChF,IAAI,KAAK,MAAM,GAAGwH,YAAY,GAAGC,SAAS,CAACzC,IAAI,CAACe,KAAK,CAAC,CAC5D;QACH,CAAC,CACF;QAED,6JAAOxH,OAAO,CAACmJ,MAAAA,AAAU,EAACF,YAAY,EAAEvC,KAAK,CAAC;IAChD,CAAC,EACD,CAAC,GAAGH,OAAO,CAAC,GAAKA,OAAO,CAAC6C,QAAQ,CAClC;AAEH,MAAMF,SAAS,IACbG,IAAqB,GACkBA,IAAI,CAAC5H,IAAI,KAAK,SAAS,sJAAGzB,OAAO,AAAK,CAAJ4G,MAAO5G,OAAO,CAACkH,uJAAAA,AAAS,EAACmC,IAAI,CAACpC,KAAK,CAAC;AAE/G,SAAS0B,YAAYA,CAAC1B,KAAwB;IAC5C,OAAQA,KAAK,CAACxF,IAAI;QAChB,KAAK,cAAc;YAAE;gBACnB,OAAQwF,KAAK,CAACqC,KAAK;oBACjB,KAAK,UAAU;wBAAE;4BACf,OAAO,IAAIxH,cAAc,CAAC;gCAAEE,MAAM,EAAE,cAAc;gCAAEiF;4BAAK,CAAE,CAAC;wBAC9D;oBACA,KAAK,cAAc;wBAAE;4BACnB,OAAO,IAAInF,cAAc,CAAC;gCAAEE,MAAM,EAAE,eAAe;gCAAEiF;4BAAK,CAAE,CAAC;wBAC/D;oBACA,KAAK,aAAa;wBAAE;4BAClB,OAAO,IAAInF,cAAc,CAAC;gCAAEE,MAAM,EAAE,cAAc;gCAAEiF;4BAAK,CAAE,CAAC;wBAC9D;oBACA,KAAK,cAAc;wBAAE;4BACnB,OAAO,IAAInF,cAAc,CAAC;gCAAEE,MAAM,EAAE,cAAc;gCAAEiF;4BAAK,CAAE,CAAC;wBAC9D;gBACF;YACF;QACA;YAAS;gBACP,OAAO,IAAInF,cAAc,CAAC;oBAAEE,MAAM,EAAE,OAAO;oBAAEiF;gBAAK,CAAE,CAAC;YACvD;IACF;AACF;AAEA,MAAesC,QAAS,gKAAQhJ,QAAiB,GAAN,CAACiJ;IACjC,CAACtI,MAAM,CAAA,CAAA;IAChBuI,YAAA,CAAA;QACE,KAAK,EAAE;QACP,IAAI,CAACvI,MAAM,CAAC,GAAGA,MAAM;IACvB;;AAGF,MAAMwG,SAAU,SAAQ6B,QAAQ;IAInBG,GAAA,CAAA;IACA3D,WAAA,CAAA;IACAyB,KAAA,CAAA;IALF/F,IAAI,GAAG,OAAO,CAAA;IAEvBgI,YACWC,GAAW,EACX3D,WAAmB,EACnByB,KAAa,CAAA;QAEtB,KAAK,EAAE;QAJE,IAAA,CAAAkC,GAAG,GAAHA,GAAG;QACH,IAAA,CAAA3D,WAAW,GAAXA,WAAW;QACX,IAAA,CAAAyB,KAAK,GAALA,KAAK;IAGhB;IAEAmC,MAAMA,CAAA,EAAA;QACJ,OAAO;YACLC,GAAG,EAAE,iCAAiC;YACtCnI,IAAI,EAAE,OAAO;YACbiI,GAAG,EAAE,IAAI,CAACA,GAAG;YACb3D,WAAW,EAAE,IAAI,CAACA,WAAW;YAC7ByB,KAAK,EAAE,IAAI,CAACA,KAAAA;SACb;IACH;;AAGF,MAAMe,QAAS,SAAQgB,QAAQ;IACpB9H,IAAI,GAAG,MAAM,CAAA;IACbiI,GAAG,CAAA;IACH/B,IAAI,CAAA;IACJ5B,WAAW,CAAA;IACX8D,OAAO,CAAA;IAEhBJ,YACE5D,IAAiB,EACjBiE,OAAyF,CAAA;QAEzF,KAAK,EAAE;QACP,IAAI,CAACJ,GAAG,GAAG7D,IAAI,CAAC8B,IAAI;QACpB,IAAI,CAACA,IAAI,GAAG9B,IAAI,CAACkE,QAAQ,IAAIlE,IAAI,CAAC8B,IAAI;QACtC,IAAI,CAAC5B,WAAW,GAAGF,IAAI,CAACE,WAAW;QACnC,IAAI,CAAC8D,OAAO,yJAAGjJ,MAAM,CAACoJ,OAAAA,AAAW,EAACF,OAAO,CAAC;IAC5C;IAEAH,MAAMA,CAAA,EAAA;QACJ,OAAO;YACLC,GAAG,EAAE,iCAAiC;YACtCnI,IAAI,EAAE,MAAM;YACZiI,GAAG,EAAE,IAAI,CAACA,GAAG;YACb/B,IAAI,EAAE,IAAI,CAACA,IAAI;YACf5B,WAAW,EAAE,IAAI,CAACA,WAAAA;SACnB;IACH;;AAGF,MAAMkE,gBAAgB,GAAGA,CAACC,IAAY,EAAEhG,IAAoB,yJAC1DhE,MAAM,CAAC2I,GAAAA,AAAO,sKACZ9H,UAAU,CAACA,EAAU,EACpBoJ,EAAE,IACDjK,MAAM,CAACkK,0JAAAA,AAAQ,wJACbxJ,MAAM,AAACyJ,AAAG,CAAHA,CAAInG,IAAI,CAAC2F,OAAO,EAAEM,EAAE,CAACG,IAAI,CAACJ,IAAI,CAAC,CAAC,GACtCjD,KAAK,GAAK,IAAInF,cAAc,CAAC;gBAAEE,MAAM,EAAE,eAAe;gBAAEiF;YAAK,CAAE,CAAC,CAClE,CACJ;AAGI,MAAMsD,WAAW,GAAGA,CACzBC,MAA+D,EAC/DC,SAAS,GAAGR,gBAAgB,IAE5B/J,MAAM,CAACwK,oJAAAA,AAAG,EAAC,aAAS;QAClB,MAAMP,EAAE,GAAG,2KAAOpJ,UAAU,CAACA,EAAU;QACvC,MAAM4J,KAAK,GAAG,qKAAO1J,IAAI,CAACA,EAAI;QAC9B,MAAM2J,GAAG,GAAG,OAAOT,EAAE,CAACU,uBAAuB,EAAE;QAC/C,MAAMpG,SAAS,GAA4EqG,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;QAC9G,6JAAOnK,MAAM,CAACoK,MAAAA,AAAU,EAACR,MAAM,GAAGS,IAAI,IAAI;YACxC,IAAIA,IAAI,CAACxJ,IAAI,KAAK,OAAO,EAAE;gBACzB,IAAI,CAAA,CAAEwJ,IAAI,CAACvB,GAAG,IAAIjF,SAAS,CAAC,EAAE;oBAC5BA,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAC,GAAGuB,IAAI,CAACzD,KAAK;gBAClC,CAAC,MAAM,IAAI,OAAO/C,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAC,KAAK,QAAQ,EAAE;oBAClDjF,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAC,GAAG;wBAACjF,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAW;wBAAEuB,IAAI,CAACzD,KAAK;qBAAC;gBACnE,CAAC,MAAM;;oBACH/C,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAmB,CAACjC,IAAI,CAACwD,IAAI,CAACzD,KAAK,CAAC;gBAC1D;gBACA,yJAAOtH,MAAM,CAAC0G,AAAI;YACpB,CAAC,MAAM,IAAIqE,IAAI,CAACtD,IAAI,KAAK,EAAE,EAAE;gBAC3B,yJAAOzH,MAAM,CAAC0G,AAAI;YACpB;YACA,MAAM1C,IAAI,GAAG+G,IAAI;YACjB,MAAMf,IAAI,GAAGS,KAAK,CAACO,IAAI,CAACN,GAAG,EAAED,KAAK,CAACQ,QAAQ,CAACjH,IAAI,CAACyD,IAAI,CAAC,CAACyD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;YACnE,MAAMC,QAAQ,GAAG,IAAIC,iBAAiB,CACpCpH,IAAI,CAACwF,GAAG,EACRxF,IAAI,CAACyD,IAAI,EACTzD,IAAI,CAAC6B,WAAW,EAChBmE,IAAI,CACL;YACD,IAAIvG,KAAK,CAAC4H,OAAO,CAAC9G,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAC,CAAC,EAAE;;gBACpCjF,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAoC,CAACjC,IAAI,CAAC4D,QAAQ,CAAC;YACzE,CAAC,MAAM;gBACL5G,SAAS,CAACwG,IAAI,CAACvB,GAAG,CAAC,GAAG;oBAAC2B,QAAQ;iBAAC;YAClC;YACA,OAAOZ,SAAS,CAACP,IAAI,EAAEhG,IAAI,CAAC;QAC9B,CAAC,CAAC;QACF,OAAOO,SAAS;IAClB,CAAC,CAAC,CAACX,IAAI,KACL5D,MAAM,CAACsL,uJAAAA,AAAS,EAAC;QACfC,WAAW,GAAGxE,KAAK,yJAAK/G,MAAM,CAACwI,AAAI,EAAC,IAAI5G,cAAc,CAAC;gBAAEE,MAAM,EAAE,eAAe;gBAAEiF;YAAK,CAAE,CAAC,CAAC;QAC3FyE,WAAW,GAAGzE,KAAK,yJAAK/G,MAAM,CAACwI,AAAI,EAAC,IAAI5G,cAAc,CAAC;gBAAEE,MAAM,EAAE,eAAe;gBAAEiF;YAAK,CAAE,CAAC;KAC3F,CAAC,CACH;AAEH,MAAMqE,iBAAkB,SAAQ/B,QAAQ;IAI3BG,GAAA,CAAA;IACA/B,IAAA,CAAA;IACA5B,WAAA,CAAA;IACAmE,IAAA,CAAA;IANFzI,IAAI,GAAG,eAAe,CAAA;IAE/BgI,YACWC,GAAW,EACX/B,IAAY,EACZ5B,WAAmB,EACnBmE,IAAY,CAAA;QAErB,KAAK,EAAE;QALE,IAAA,CAAAR,GAAG,GAAHA,GAAG;QACH,IAAA,CAAA/B,IAAI,GAAJA,IAAI;QACJ,IAAA,CAAA5B,WAAW,GAAXA,WAAW;QACX,IAAA,CAAAmE,IAAI,GAAJA,IAAI;IAGf;IAEAP,MAAMA,CAAA,EAAA;QACJ,OAAO;YACLC,GAAG,EAAE,iCAAiC;YACtCnI,IAAI,EAAE,eAAe;YACrBiI,GAAG,EAAE,IAAI,CAACA,GAAG;YACb/B,IAAI,EAAE,IAAI,CAACA,IAAI;YACf5B,WAAW,EAAE,IAAI,CAACA,WAAW;YAC7BmE,IAAI,EAAE,IAAI,CAACA,IAAAA;SACZ;IACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2896, "column": 0}, "map": {"version":3,"file":"Multipart.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Multipart.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type { YieldableError } from \"effect/Cause\"\nimport type * as Channel from \"effect/Channel\"\nimport type * as Chunk from \"effect/Chunk\"\nimport type * as Effect from \"effect/Effect\"\nimport type * as FiberRef from \"effect/FiberRef\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as Multipasta from \"multipasta\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport * as internal from \"./internal/multipart.js\"\nimport type * as Path from \"./Path.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Part = Field | File\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isPart: (u: unknown) => u is Part = internal.isPart\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Part {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface Proto extends Inspectable {\n    readonly [TypeId]: TypeId\n    readonly _tag: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Field extends Part.Proto {\n  readonly _tag: \"Field\"\n  readonly key: string\n  readonly contentType: string\n  readonly value: string\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isField: (u: unknown) => u is Field = internal.isField\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface File extends Part.Proto {\n  readonly _tag: \"File\"\n  readonly key: string\n  readonly name: string\n  readonly contentType: string\n  readonly content: Stream.Stream<Uint8Array, MultipartError>\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isFile: (u: unknown) => u is File = internal.isFile\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface PersistedFile extends Part.Proto {\n  readonly _tag: \"PersistedFile\"\n  readonly key: string\n  readonly name: string\n  readonly contentType: string\n  readonly path: string\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isPersistedFile: (u: unknown) => u is PersistedFile = internal.isPersistedFile\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Persisted {\n  readonly [key: string]: ReadonlyArray<PersistedFile> | ReadonlyArray<string> | string\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const ErrorTypeId: unique symbol = internal.ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type ErrorTypeId = typeof ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport interface MultipartError extends YieldableError {\n  readonly [ErrorTypeId]: ErrorTypeId\n  readonly _tag: \"MultipartError\"\n  readonly reason: \"FileTooLarge\" | \"FieldTooLarge\" | \"BodyTooLarge\" | \"TooManyParts\" | \"InternalError\" | \"Parse\"\n  readonly message: string\n  readonly cause: unknown\n}\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport const MultipartError: new(\n  options: {\n    readonly reason: MultipartError[\"reason\"]\n    readonly cause: unknown\n  }\n) => MultipartError = internal.MultipartError\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxParts: FiberRef.FiberRef<Option.Option<number>> = internal.maxParts\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxParts: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (count: Option.Option<number>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, count: Option.Option<number>): Effect.Effect<A, E, R>\n} = internal.withMaxParts\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxFieldSize: FiberRef.FiberRef<FileSystem.Size> = internal.maxFieldSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxFieldSize: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (size: FileSystem.SizeInput): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: FileSystem.SizeInput): Effect.Effect<A, E, R>\n} = internal.withMaxFieldSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const maxFileSize: FiberRef.FiberRef<Option.Option<FileSystem.Size>> = internal.maxFileSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withMaxFileSize: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (size: Option.Option<FileSystem.SizeInput>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, size: Option.Option<FileSystem.SizeInput>): Effect.Effect<A, E, R>\n} = internal.withMaxFileSize\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const fieldMimeTypes: FiberRef.FiberRef<Chunk.Chunk<string>> = internal.fieldMimeTypes\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withFieldMimeTypes: {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  (mimeTypes: ReadonlyArray<string>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, mimeTypes: ReadonlyArray<string>): Effect.Effect<A, E, R>\n} = internal.withFieldMimeTypes\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const FileSchema: Schema.Schema<PersistedFile> = internal.FileSchema\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const FilesSchema: Schema.Schema<ReadonlyArray<PersistedFile>> = internal.FilesSchema\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const SingleFileSchema: Schema.transform<\n  Schema.Schema<ReadonlyArray<PersistedFile>>,\n  Schema.Schema<PersistedFile>\n> = internal.SingleFileSchema\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  (field: string): (persisted: Persisted) => Effect.Effect<A, ParseResult.ParseError, R>\n  (persisted: Persisted, field: string): Effect.Effect<A, ParseResult.ParseError, R>\n} = internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaPersisted: <A, I extends Partial<Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (persisted: Persisted) => Effect.Effect<A, ParseResult.ParseError, R> = internal.schemaPersisted\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeChannel: <IE>(\n  headers: Record<string, string>,\n  bufferSize?: number\n) => Channel.Channel<Chunk.Chunk<Part>, Chunk.Chunk<Uint8Array>, MultipartError | IE, IE, unknown, unknown> =\n  internal.makeChannel\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeConfig: (headers: Record<string, string>) => Effect.Effect<Multipasta.BaseConfig> = internal.makeConfig\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const toPersisted: (\n  stream: Stream.Stream<Part, MultipartError>,\n  writeFile?: (path: string, file: File) => Effect.Effect<void, MultipartError, FileSystem.FileSystem>\n) => Effect.Effect<Persisted, MultipartError, FileSystem.FileSystem | Path.Path | Scope.Scope> = internal.toPersisted\n"],"names":["internal","TypeId","isPart","isField","isFile","isPersistedFile","ErrorTypeId","MultipartError","maxParts","withMaxParts","maxFieldSize","withMaxFieldSize","maxFileSize","withMaxFileSize","fieldMimeTypes","withFieldMimeTypes","FileSchema","FilesSchema","SingleFileSchema","schemaJson","schemaPersisted","makeChannel","makeConfig","toPersisted"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAKA,QAAQ,MAAM,yBAAyB;;AAO5C,MAAMC,MAAM,kLAAkBD,QAAQ,CAACC,AAAM;AAkB7C,MAAMC,MAAM,kLAA8BF,QAAQ,CAACE,AAAM;AA+BzD,MAAMC,OAAO,kLAA+BH,QAAQ,CAACG,CAAO;AAkB5D,MAAMC,MAAM,kLAA8BJ,QAAQ,CAACI,AAAM;AAkBzD,MAAMC,eAAe,kLAAuCL,QAAQ,CAACK,SAAe;AAcpF,MAAMC,WAAW,kLAAkBN,QAAQ,CAACM,KAAW;AAwBvD,MAAMC,cAAc,kLAKLP,QAAQ,CAACO,QAAc;AAMtC,MAAMC,QAAQ,kLAA6CR,QAAQ,CAACQ,EAAQ;AAM5E,MAAMC,YAAY,kLAWrBT,QAAQ,CAACS,MAAY;AAMlB,MAAMC,YAAY,kLAAuCV,QAAQ,CAACU,MAAY;AAM9E,MAAMC,gBAAgB,kLAWzBX,QAAQ,CAACW,UAAgB;AAMtB,MAAMC,WAAW,kLAAsDZ,QAAQ,CAACY,KAAW;AAM3F,MAAMC,eAAe,kLAWxBb,QAAQ,CAACa,SAAe;AAMrB,MAAMC,cAAc,kLAA2Cd,QAAQ,CAACc,QAAc;AAMtF,MAAMC,kBAAkB,kLAW3Bf,QAAQ,CAACe,YAAkB;AAMxB,MAAMC,UAAU,kLAAiChB,QAAQ,CAACgB,IAAU;AAMpE,MAAMC,WAAW,kLAAgDjB,QAAQ,CAACiB,KAAW;AAMrF,MAAMC,gBAAgB,kLAGzBlB,QAAQ,CAACkB,UAAgB;AAMtB,MAAMC,UAAU,kLAMnBnB,QAAQ,CAACmB,IAAU;AAMhB,MAAMC,eAAe,kLAGiDpB,QAAQ,CAACoB,SAAe;AAM9F,MAAMC,WAAW,kLAItBrB,QAAQ,CAACqB,KAAW;AAMf,MAAMC,UAAU,kLAA8EtB,QAAQ,CAACsB,IAAU;AAMjH,MAAMC,WAAW,kLAGyEvB,QAAQ,CAACuB,KAAW","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2952, "column": 0}, "map": {"version":3,"file":"Socket.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Socket.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Channel from \"effect/Channel\"\nimport type * as Chunk from \"effect/Chunk\"\nimport * as Context from \"effect/Context\"\nimport * as Deferred from \"effect/Deferred\"\nimport type { DurationInput } from \"effect/Duration\"\nimport * as Effect from \"effect/Effect\"\nimport * as ExecutionStrategy from \"effect/ExecutionStrategy\"\nimport * as Exit from \"effect/Exit\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport * as FiberSet from \"effect/FiberSet\"\nimport { dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Layer from \"effect/Layer\"\nimport * as Mailbox from \"effect/Mailbox\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Scope from \"effect/Scope\"\nimport type * as AsyncProducer from \"effect/SingleProducerAsyncInput\"\nimport { TypeIdError } from \"./Error.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/Socket\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category guards\n */\nexport const isSocket = (u: unknown): u is Socket => Predicate.hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const Socket: Context.Tag<Socket, Socket> = Context.GenericTag<Socket>(\n  \"@effect/platform/Socket\"\n)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Socket {\n  readonly [TypeId]: TypeId\n  readonly run: <_, E = never, R = never>(\n    handler: (_: Uint8Array) => Effect.Effect<_, E, R> | void\n  ) => Effect.Effect<void, SocketError | E, R>\n  readonly runRaw: <_, E = never, R = never>(\n    handler: (_: string | Uint8Array) => Effect.Effect<_, E, R> | void\n  ) => Effect.Effect<void, SocketError | E, R>\n  readonly writer: Effect.Effect<\n    (chunk: Uint8Array | string | CloseEvent) => Effect.Effect<void, SocketError>,\n    never,\n    Scope.Scope\n  >\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const CloseEventTypeId: unique symbol = Symbol.for(\"@effect/platform/Socket/CloseEvent\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type CloseEventTypeId = typeof CloseEventTypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport class CloseEvent {\n  /**\n   * @since 1.0.0\n   */\n  readonly [CloseEventTypeId]: CloseEventTypeId\n  constructor(readonly code = 1000, readonly reason?: string) {\n    this[CloseEventTypeId] = CloseEventTypeId\n  }\n  /**\n   * @since 1.0.0\n   */\n  toString() {\n    return this.reason ? `${this.code}: ${this.reason}` : `${this.code}`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isCloseEvent = (u: unknown): u is CloseEvent => Predicate.hasProperty(u, CloseEventTypeId)\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const SocketErrorTypeId: unique symbol = Symbol.for(\"@effect/platform/Socket/SocketError\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type SocketErrorTypeId = typeof SocketErrorTypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isSocketError = (u: unknown): u is SocketError => Predicate.hasProperty(u, SocketErrorTypeId)\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport type SocketError = SocketGenericError | SocketCloseError\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport class SocketGenericError extends TypeIdError(SocketErrorTypeId, \"SocketError\")<{\n  readonly reason: \"Write\" | \"Read\" | \"Open\" | \"OpenTimeout\"\n  readonly cause: unknown\n}> {\n  get message() {\n    return `An error occurred during ${this.reason}`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport class SocketCloseError extends TypeIdError(SocketErrorTypeId, \"SocketError\")<{\n  readonly reason: \"Close\"\n  readonly code: number\n  readonly closeReason?: string | undefined\n}> {\n  /**\n   * @since 1.0.0\n   */\n  static is(u: unknown): u is SocketCloseError {\n    return isSocketError(u) && u.reason === \"Close\"\n  }\n\n  /**\n   * @since 1.0.0\n   */\n  static isClean(isClean: (code: number) => boolean) {\n    return function(u: unknown): u is SocketCloseError {\n      return SocketCloseError.is(u) && isClean(u.code)\n    }\n  }\n\n  get message() {\n    if (this.closeReason) {\n      return `${this.reason}: ${this.code}: ${this.closeReason}`\n    }\n    return `${this.reason}: ${this.code}`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannelMap = <IE, A>(\n  self: Socket,\n  f: (data: Uint8Array | string) => A\n): Channel.Channel<\n  Chunk.Chunk<A>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> =>\n  Effect.gen(function*() {\n    const scope = yield* Effect.scope\n    const mailbox = yield* Mailbox.make<A, SocketError | IE>()\n    const writeScope = yield* Scope.fork(scope, ExecutionStrategy.sequential)\n    const write = yield* Scope.extend(self.writer, writeScope)\n    function* emit(chunk: Chunk.Chunk<Uint8Array | string | CloseEvent>) {\n      for (const data of chunk) {\n        yield* write(data)\n      }\n    }\n    const input: AsyncProducer.AsyncInputProducer<IE, Chunk.Chunk<Uint8Array | string | CloseEvent>, unknown> = {\n      awaitRead: () => Effect.void,\n      emit(chunk) {\n        return Effect.catchAllCause(\n          Effect.gen(() => emit(chunk)),\n          (cause) => mailbox.failCause(cause)\n        )\n      },\n      error(error) {\n        return Effect.zipRight(\n          Scope.close(writeScope, Exit.void),\n          mailbox.failCause(error)\n        )\n      },\n      done() {\n        return Scope.close(writeScope, Exit.void)\n      }\n    }\n\n    yield* self.runRaw((data) => {\n      mailbox.unsafeOffer(f(data))\n    }).pipe(\n      Mailbox.into(mailbox),\n      Effect.forkIn(scope),\n      Effect.interruptible\n    )\n\n    return Channel.embedInput(Mailbox.toChannel(mailbox), input)\n  }).pipe(Channel.unwrapScoped)\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannel = <IE>(\n  self: Socket\n): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> => {\n  const encoder = new TextEncoder()\n  return toChannelMap(self, (data) => typeof data === \"string\" ? encoder.encode(data) : data)\n}\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannelString: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (encoding?: string | undefined): <IE>(self: Socket) => Channel.Channel<\n    Chunk.Chunk<string>,\n    Chunk.Chunk<Uint8Array | string | CloseEvent>,\n    SocketError | IE,\n    IE,\n    void,\n    unknown\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <IE>(self: Socket, encoding?: string | undefined): Channel.Channel<\n    Chunk.Chunk<string>,\n    Chunk.Chunk<Uint8Array | string | CloseEvent>,\n    SocketError | IE,\n    IE,\n    void,\n    unknown\n  >\n} = dual((args) => isSocket(args[0]), <IE>(\n  self: Socket,\n  encoding?: string | undefined\n): Channel.Channel<\n  Chunk.Chunk<string>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> => {\n  const decoder = new TextDecoder(encoding)\n  return toChannelMap(self, (data) => typeof data === \"string\" ? data : decoder.decode(data))\n})\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toChannelWith = <IE = never>() =>\n(\n  self: Socket\n): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown\n> => toChannel(self)\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeChannel = <IE = never>(): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown,\n  Socket\n> => Channel.unwrap(Effect.map(Socket, toChannelWith<IE>()))\n\n/**\n * @since 1.0.0\n */\nexport const defaultCloseCodeIsError = (code: number) => code !== 1000 && code !== 1006\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport interface WebSocket {\n  readonly _: unique symbol\n}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const WebSocket: Context.Tag<WebSocket, globalThis.WebSocket> = Context.GenericTag(\n  \"@effect/platform/Socket/WebSocket\"\n)\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport interface WebSocketConstructor {\n  readonly _: unique symbol\n}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const WebSocketConstructor: Context.Tag<\n  WebSocketConstructor,\n  (url: string, protocols?: string | Array<string> | undefined) => globalThis.WebSocket\n> = Context\n  .GenericTag(\"@effect/platform/Socket/WebSocketConstructor\")\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layerWebSocketConstructorGlobal: Layer.Layer<WebSocketConstructor> = Layer.succeed(\n  WebSocketConstructor,\n  (url, protocols) => new globalThis.WebSocket(url, protocols)\n)\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeWebSocket = (url: string | Effect.Effect<string>, options?: {\n  readonly closeCodeIsError?: ((code: number) => boolean) | undefined\n  readonly openTimeout?: DurationInput | undefined\n  readonly protocols?: string | Array<string> | undefined\n}): Effect.Effect<Socket, never, WebSocketConstructor> =>\n  fromWebSocket(\n    Effect.acquireRelease(\n      (typeof url === \"string\" ? Effect.succeed(url) : url).pipe(\n        Effect.flatMap((url) => Effect.map(WebSocketConstructor, (f) => f(url, options?.protocols)))\n      ),\n      (ws) => Effect.sync(() => ws.close(1000))\n    ),\n    options\n  )\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromWebSocket = <RO>(\n  acquire: Effect.Effect<globalThis.WebSocket, SocketError, RO>,\n  options?: {\n    readonly closeCodeIsError?: (code: number) => boolean\n    readonly openTimeout?: DurationInput\n  }\n): Effect.Effect<Socket, never, Exclude<RO, Scope.Scope>> =>\n  Effect.withFiberRuntime((fiber) => {\n    let currentWS: globalThis.WebSocket | undefined\n    const latch = Effect.unsafeMakeLatch(false)\n    const acquireContext = fiber.currentContext as Context.Context<RO>\n    const closeCodeIsError = options?.closeCodeIsError ?? defaultCloseCodeIsError\n\n    const runRaw = <_, E, R>(handler: (_: string | Uint8Array) => Effect.Effect<_, E, R> | void) =>\n      Effect.scopedWith((scope) =>\n        Effect.gen(function*() {\n          const fiberSet = yield* FiberSet.make<any, E | SocketError>().pipe(\n            Scope.extend(scope)\n          )\n          const ws = yield* Scope.extend(acquire, scope)\n          const run = yield* Effect.provideService(FiberSet.runtime(fiberSet)<R>(), WebSocket, ws)\n          let open = false\n\n          function onMessage(event: MessageEvent) {\n            if (event.data instanceof Blob) {\n              return Effect.promise(() => event.data.arrayBuffer() as Promise<ArrayBuffer>).pipe(\n                Effect.andThen((buffer) => handler(new Uint8Array(buffer))),\n                run\n              )\n            }\n            const result = handler(event.data)\n            if (Effect.isEffect(result)) {\n              run(result)\n            }\n          }\n          function onError(cause: Event) {\n            ws.removeEventListener(\"message\", onMessage)\n            ws.removeEventListener(\"close\", onClose)\n            Deferred.unsafeDone(\n              fiberSet.deferred,\n              Effect.fail(new SocketGenericError({ reason: open ? \"Read\" : \"Open\", cause }))\n            )\n          }\n          function onClose(event: globalThis.CloseEvent) {\n            ws.removeEventListener(\"message\", onMessage)\n            ws.removeEventListener(\"error\", onError)\n            Deferred.unsafeDone(\n              fiberSet.deferred,\n              Effect.fail(\n                new SocketCloseError({\n                  reason: \"Close\",\n                  code: event.code,\n                  closeReason: event.reason\n                })\n              )\n            )\n          }\n\n          ws.addEventListener(\"close\", onClose, { once: true })\n          ws.addEventListener(\"error\", onError, { once: true })\n          ws.addEventListener(\"message\", onMessage)\n\n          if (ws.readyState !== 1) {\n            const openDeferred = Deferred.unsafeMake<void>(fiber.id())\n            ws.addEventListener(\"open\", () => {\n              open = true\n              Deferred.unsafeDone(openDeferred, Effect.void)\n            }, { once: true })\n            yield* Deferred.await(openDeferred).pipe(\n              Effect.timeoutFail({\n                duration: options?.openTimeout ?? 10000,\n                onTimeout: () =>\n                  new SocketGenericError({ reason: \"OpenTimeout\", cause: \"timeout waiting for \\\"open\\\"\" })\n              }),\n              Effect.raceFirst(FiberSet.join(fiberSet))\n            )\n          }\n          open = true\n          currentWS = ws\n          yield* latch.open\n          return yield* FiberSet.join(fiberSet).pipe(\n            Effect.catchIf(\n              SocketCloseError.isClean((_) => !closeCodeIsError(_)),\n              (_) => Effect.void\n            )\n          )\n        })\n      ).pipe(\n        Effect.mapInputContext((input: Context.Context<R>) => Context.merge(acquireContext, input)),\n        Effect.ensuring(Effect.sync(() => {\n          latch.unsafeClose()\n          currentWS = undefined\n        })),\n        Effect.interruptible\n      )\n\n    const encoder = new TextEncoder()\n    const run = <_, E, R>(handler: (_: Uint8Array) => Effect.Effect<_, E, R> | void) =>\n      runRaw((data) =>\n        typeof data === \"string\"\n          ? handler(encoder.encode(data))\n          : data instanceof Uint8Array\n          ? handler(data)\n          : handler(new Uint8Array(data))\n      )\n\n    const write = (chunk: Uint8Array | string | CloseEvent) =>\n      latch.whenOpen(Effect.sync(() => {\n        const ws = currentWS!\n        if (isCloseEvent(chunk)) {\n          ws.close(chunk.code, chunk.reason)\n        } else {\n          ws.send(chunk)\n        }\n      }))\n    const writer = Effect.succeed(write)\n\n    return Effect.succeed(Socket.of({\n      [TypeId]: TypeId,\n      run,\n      runRaw,\n      writer\n    }))\n  })\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeWebSocketChannel = <IE = never>(\n  url: string,\n  options?: {\n    readonly closeCodeIsError?: (code: number) => boolean\n  }\n): Channel.Channel<\n  Chunk.Chunk<Uint8Array>,\n  Chunk.Chunk<Uint8Array | string | CloseEvent>,\n  SocketError | IE,\n  IE,\n  void,\n  unknown,\n  WebSocketConstructor\n> =>\n  Channel.unwrapScoped(\n    Effect.map(makeWebSocket(url, options), toChannelWith<IE>())\n  )\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layerWebSocket = (url: string, options?: {\n  readonly closeCodeIsError?: (code: number) => boolean\n}): Layer.Layer<Socket, never, WebSocketConstructor> =>\n  Layer.effect(\n    Socket,\n    makeWebSocket(url, options)\n  )\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentSendQueueCapacity: FiberRef.FiberRef<number> = globalValue(\n  \"@effect/platform/Socket/currentSendQueueCapacity\",\n  () => FiberRef.unsafeMake(16)\n)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface InputTransformStream {\n  readonly readable: ReadableStream<Uint8Array> | ReadableStream<string> | ReadableStream<Uint8Array | string>\n  readonly writable: WritableStream<Uint8Array>\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromTransformStream = <R>(acquire: Effect.Effect<InputTransformStream, SocketError, R>, options?: {\n  readonly closeCodeIsError?: (code: number) => boolean\n}): Effect.Effect<Socket, never, Exclude<R, Scope.Scope>> =>\n  Effect.withFiberRuntime((fiber) => {\n    const latch = Effect.unsafeMakeLatch(false)\n    let currentStream: {\n      readonly stream: InputTransformStream\n      readonly fiberSet: FiberSet.FiberSet<any, any>\n    } | undefined\n    const acquireContext = fiber.currentContext as Context.Context<R>\n    const closeCodeIsError = options?.closeCodeIsError ?? defaultCloseCodeIsError\n    const runRaw = <_, E, R>(handler: (_: string | Uint8Array) => Effect.Effect<_, E, R> | void) =>\n      Effect.scopedWith((scope) =>\n        Effect.gen(function*() {\n          const stream = yield* Scope.extend(acquire, scope)\n          const reader = stream.readable.getReader()\n          yield* Scope.addFinalizer(scope, Effect.promise(() => reader.cancel()))\n          const fiberSet = yield* FiberSet.make<any, E | SocketError>().pipe(\n            Scope.extend(scope)\n          )\n          const runFork = yield* FiberSet.runtime(fiberSet)<R>()\n\n          yield* Effect.tryPromise({\n            try: async () => {\n              while (true) {\n                const { done, value } = await reader.read()\n                if (done) {\n                  throw new SocketCloseError({ reason: \"Close\", code: 1000 })\n                }\n                const result = handler(value)\n                if (Effect.isEffect(result)) {\n                  runFork(result)\n                }\n              }\n            },\n            catch: (cause) => isSocketError(cause) ? cause : new SocketGenericError({ reason: \"Read\", cause })\n          }).pipe(\n            FiberSet.run(fiberSet)\n          )\n\n          currentStream = { stream, fiberSet }\n          yield* latch.open\n\n          return yield* FiberSet.join(fiberSet).pipe(\n            Effect.catchIf(\n              SocketCloseError.isClean((_) => !closeCodeIsError(_)),\n              (_) => Effect.void\n            )\n          )\n        })\n      ).pipe(\n        (_) => _,\n        Effect.mapInputContext((input: Context.Context<R>) => Context.merge(acquireContext, input)),\n        Effect.ensuring(Effect.sync(() => {\n          latch.unsafeClose()\n          currentStream = undefined\n        })),\n        Effect.interruptible\n      )\n\n    const encoder = new TextEncoder()\n    const run = <_, E, R>(handler: (_: Uint8Array) => Effect.Effect<_, E, R> | void) =>\n      runRaw((data) =>\n        typeof data === \"string\"\n          ? handler(encoder.encode(data))\n          : handler(data)\n      )\n\n    const writers = new WeakMap<InputTransformStream, WritableStreamDefaultWriter<Uint8Array>>()\n    const getWriter = (stream: InputTransformStream) => {\n      let writer = writers.get(stream)\n      if (!writer) {\n        writer = stream.writable.getWriter()\n        writers.set(stream, writer)\n      }\n      return writer\n    }\n    const write = (chunk: Uint8Array | string | CloseEvent) =>\n      latch.whenOpen(Effect.suspend(() => {\n        const { fiberSet, stream } = currentStream!\n        if (isCloseEvent(chunk)) {\n          return Deferred.fail(\n            fiberSet.deferred,\n            new SocketCloseError({ reason: \"Close\", code: chunk.code, closeReason: chunk.reason })\n          )\n        }\n        return Effect.promise(() => getWriter(stream).write(typeof chunk === \"string\" ? encoder.encode(chunk) : chunk))\n      }))\n    const writer = Effect.acquireRelease(\n      Effect.succeed(write),\n      () =>\n        Effect.promise(async () => {\n          if (!currentStream) return\n          await getWriter(currentStream.stream).close()\n        })\n    )\n\n    return Effect.succeed(Socket.of({\n      [TypeId]: TypeId,\n      run,\n      runRaw,\n      writer\n    }))\n  })\n"],"names":["Channel","Context","Deferred","Effect","ExecutionStrategy","Exit","FiberRef","FiberSet","dual","globalValue","Layer","Mailbox","Predicate","Scope","TypeIdError","TypeId","Symbol","for","isSocket","u","hasProperty","Socket","GenericTag","CloseEventTypeId","CloseEvent","code","reason","constructor","toString","isCloseEvent","SocketErrorTypeId","isSocketError","SocketGenericError","message","SocketCloseError","is","isClean","closeReason","toChannelMap","self","f","gen","scope","mailbox","make","writeScope","fork","sequential","write","extend","writer","emit","chunk","data","input","awaitRead","void","catchAllCause","cause","failCause","error","zipRight","close","done","runRaw","unsafeOffer","pipe","into","forkIn","interruptible","embedInput","toChannel","unwrapScoped","encoder","TextEncoder","encode","toChannelString","args","encoding","decoder","TextDecoder","decode","toChannelWith","makeChannel","unwrap","map","defaultCloseCodeIsError","WebSocket","WebSocketConstructor","layerWebSocketConstructorGlobal","succeed","url","protocols","globalThis","makeWebSocket","options","fromWebSocket","acquireRelease","flatMap","ws","sync","acquire","withFiberRuntime","fiber","currentWS","latch","unsafeMakeLatch","acquireContext","currentContext","closeCodeIsError","handler","scopedWith","fiberSet","run","provideService","runtime","open","onMessage","event","Blob","promise","arrayBuffer","andThen","buffer","Uint8Array","result","isEffect","onError","removeEventListener","onClose","unsafeDone","deferred","fail","addEventListener","once","readyState","openDeferred","unsafeMake","id","await","timeoutFail","duration","openTimeout","onTimeout","raceFirst","join","catchIf","_","mapInputContext","merge","ensuring","unsafeClose","undefined","whenOpen","send","of","makeWebSocketChannel","layerWebSocket","effect","currentSendQueueCapacity","fromTransformStream","currentStream","stream","reader","readable","getReader","addFinalizer","cancel","runFork","tryPromise","try","value","read","catch","writers","WeakMap","getWriter","get","writable","set","suspend"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3271, "column": 0}, "map": {"version":3,"file":"httpServerRequest.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpServerRequest.ts"],"sourcesContent":["import * as Channel from \"effect/Channel\"\nimport * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type { ReadonlyRecord } from \"effect/Record\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport * as Stream from \"effect/Stream\"\nimport * as Cookies from \"../Cookies.js\"\nimport type * as FileSystem from \"../FileSystem.js\"\nimport * as Headers from \"../Headers.js\"\nimport * as IncomingMessage from \"../HttpIncomingMessage.js\"\nimport type { HttpMethod } from \"../HttpMethod.js\"\nimport * as Error from \"../HttpServerError.js\"\nimport type * as ServerRequest from \"../HttpServerRequest.js\"\nimport * as Multipart from \"../Multipart.js\"\nimport type * as Path from \"../Path.js\"\nimport * as Socket from \"../Socket.js\"\nimport * as UrlParams from \"../UrlParams.js\"\n\n/** @internal */\nexport const TypeId: ServerRequest.TypeId = Symbol.for(\"@effect/platform/HttpServerRequest\") as ServerRequest.TypeId\n\n/** @internal */\nexport const serverRequestTag = Context.GenericTag<ServerRequest.HttpServerRequest>(\n  \"@effect/platform/HttpServerRequest\"\n)\n\n/** @internal */\nexport const parsedSearchParamsTag = Context.GenericTag<\n  ServerRequest.ParsedSearchParams,\n  ReadonlyRecord<string, string | Array<string>>\n>(\"@effect/platform/HttpServerRequest/ParsedSearchParams\")\n\n/** @internal */\nexport const upgrade = Effect.flatMap(serverRequestTag, (request) => request.upgrade)\n\n/** @internal */\nexport const upgradeChannel = <IE = never>() => Channel.unwrap(Effect.map(upgrade, Socket.toChannelWith<IE>()))\n\n/** @internal */\nexport const multipartPersisted = Effect.flatMap(serverRequestTag, (request) => request.multipart)\n\n/** @internal */\nexport const searchParamsFromURL = (url: URL): ReadonlyRecord<string, string | Array<string>> => {\n  const out: Record<string, string | Array<string>> = {}\n  for (const [key, value] of url.searchParams.entries()) {\n    const entry = out[key]\n    if (entry !== undefined) {\n      if (Array.isArray(entry)) {\n        entry.push(value)\n      } else {\n        out[key] = [entry, value]\n      }\n    } else {\n      out[key] = value\n    }\n  }\n  return out\n}\n\n/** @internal */\nexport const schemaCookies = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(serverRequestTag, (req) => parse(req.cookies))\n}\n\n/** @internal */\nexport const schemaHeaders = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = IncomingMessage.schemaHeaders(schema, options)\n  return Effect.flatMap(serverRequestTag, parse)\n}\n\n/** @internal */\nexport const schemaSearchParams = <\n  A,\n  I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>,\n  R\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(parsedSearchParamsTag, parse)\n}\n\n/** @internal */\nexport const schemaBodyJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = IncomingMessage.schemaBodyJson(schema, options)\n  return Effect.flatMap(serverRequestTag, parse)\n}\n\nconst isMultipart = (request: ServerRequest.HttpServerRequest) =>\n  request.headers[\"content-type\"]?.toLowerCase().includes(\"multipart/form-data\")\n\n/** @internal */\nexport const schemaBodyForm = <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parseMultipart = Multipart.schemaPersisted(schema, options)\n  const parseUrlParams = IncomingMessage.schemaBodyUrlParams(schema as Schema.Schema<A, any, R>, options)\n  return Effect.flatMap(serverRequestTag, (request): Effect.Effect<\n    A,\n    Multipart.MultipartError | ParseResult.ParseError | Error.RequestError,\n    R | ServerRequest.HttpServerRequest | Scope.Scope | FileSystem.FileSystem | Path.Path\n  > => {\n    if (isMultipart(request)) {\n      return Effect.flatMap(request.multipart, parseMultipart)\n    }\n    return parseUrlParams(request)\n  })\n}\n\n/** @internal */\nexport const schemaBodyUrlParams = <\n  A,\n  I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>,\n  R\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = IncomingMessage.schemaBodyUrlParams(schema, options)\n  return Effect.flatMap(serverRequestTag, parse)\n}\n\n/** @internal */\nexport const schemaBodyMultipart = <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Multipart.schemaPersisted(schema, options)\n  return Effect.flatMap(multipartPersisted, parse)\n}\n\n/** @internal */\nexport const schemaBodyFormJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parseMultipart = Multipart.schemaJson(schema, options)\n  const parseUrlParams = UrlParams.schemaJson(schema, options)\n  return (field: string) =>\n    Effect.flatMap(\n      serverRequestTag,\n      (\n        request\n      ): Effect.Effect<\n        A,\n        ParseResult.ParseError | Error.RequestError,\n        R | FileSystem.FileSystem | Path.Path | Scope.Scope | ServerRequest.HttpServerRequest\n      > => {\n        if (isMultipart(request)) {\n          return Effect.flatMap(\n            Effect.mapError(request.multipart, (cause) =>\n              new Error.RequestError({\n                request,\n                reason: \"Decode\",\n                cause\n              })),\n            parseMultipart(field)\n          )\n        }\n        return Effect.flatMap(request.urlParamsBody, parseUrlParams(field))\n      }\n    )\n}\n\n/** @internal */\nexport const fromWeb = (request: globalThis.Request): ServerRequest.HttpServerRequest =>\n  new ServerRequestImpl(request, removeHost(request.url))\n\nconst removeHost = (url: string) => {\n  if (url[0] === \"/\") {\n    return url\n  }\n  const index = url.indexOf(\"/\", url.indexOf(\"//\") + 2)\n  return index === -1 ? \"/\" : url.slice(index)\n}\n\nclass ServerRequestImpl extends Inspectable.Class implements ServerRequest.HttpServerRequest {\n  readonly [TypeId]: ServerRequest.TypeId\n  readonly [IncomingMessage.TypeId]: IncomingMessage.TypeId\n  constructor(\n    readonly source: Request,\n    readonly url: string,\n    public headersOverride?: Headers.Headers,\n    private remoteAddressOverride?: string\n  ) {\n    super()\n    this[TypeId] = TypeId\n    this[IncomingMessage.TypeId] = IncomingMessage.TypeId\n  }\n  toJSON(): unknown {\n    return IncomingMessage.inspect(this, {\n      _id: \"@effect/platform/HttpServerRequest\",\n      method: this.method,\n      url: this.originalUrl\n    })\n  }\n  modify(\n    options: {\n      readonly url?: string | undefined\n      readonly headers?: Headers.Headers | undefined\n      readonly remoteAddress?: string | undefined\n    }\n  ) {\n    return new ServerRequestImpl(\n      this.source,\n      options.url ?? this.url,\n      options.headers ?? this.headersOverride,\n      options.remoteAddress ?? this.remoteAddressOverride\n    )\n  }\n  get method(): HttpMethod {\n    return this.source.method.toUpperCase() as HttpMethod\n  }\n  get originalUrl() {\n    return this.source.url\n  }\n  get remoteAddress(): Option.Option<string> {\n    return this.remoteAddressOverride ? Option.some(this.remoteAddressOverride) : Option.none()\n  }\n  get headers(): Headers.Headers {\n    this.headersOverride ??= Headers.fromInput(this.source.headers)\n    return this.headersOverride\n  }\n\n  private cachedCookies: ReadonlyRecord<string, string> | undefined\n  get cookies() {\n    if (this.cachedCookies) {\n      return this.cachedCookies\n    }\n    return this.cachedCookies = Cookies.parseHeader(this.headers.cookie ?? \"\")\n  }\n\n  get stream(): Stream.Stream<Uint8Array, Error.RequestError> {\n    return this.source.body\n      ? Stream.fromReadableStream(() => this.source.body as any, (cause) =>\n        new Error.RequestError({\n          request: this,\n          reason: \"Decode\",\n          cause\n        }))\n      : Stream.fail(\n        new Error.RequestError({\n          request: this,\n          reason: \"Decode\",\n          description: \"can not create stream from empty body\"\n        })\n      )\n  }\n\n  private textEffect: Effect.Effect<string, Error.RequestError> | undefined\n  get text(): Effect.Effect<string, Error.RequestError> {\n    if (this.textEffect) {\n      return this.textEffect\n    }\n    this.textEffect = Effect.runSync(Effect.cached(\n      Effect.tryPromise({\n        try: () => this.source.text(),\n        catch: (cause) =>\n          new Error.RequestError({\n            request: this,\n            reason: \"Decode\",\n            cause\n          })\n      })\n    ))\n    return this.textEffect\n  }\n\n  get json(): Effect.Effect<unknown, Error.RequestError> {\n    return Effect.tryMap(this.text, {\n      try: (_) => JSON.parse(_) as unknown,\n      catch: (cause) =>\n        new Error.RequestError({\n          request: this,\n          reason: \"Decode\",\n          cause\n        })\n    })\n  }\n\n  get urlParamsBody(): Effect.Effect<UrlParams.UrlParams, Error.RequestError> {\n    return Effect.flatMap(this.text, (_) =>\n      Effect.try({\n        try: () => UrlParams.fromInput(new URLSearchParams(_)),\n        catch: (cause) =>\n          new Error.RequestError({\n            request: this,\n            reason: \"Decode\",\n            cause\n          })\n      }))\n  }\n\n  private multipartEffect:\n    | Effect.Effect<\n      Multipart.Persisted,\n      Multipart.MultipartError,\n      Scope.Scope | FileSystem.FileSystem | Path.Path\n    >\n    | undefined\n  get multipart(): Effect.Effect<\n    Multipart.Persisted,\n    Multipart.MultipartError,\n    Scope.Scope | FileSystem.FileSystem | Path.Path\n  > {\n    if (this.multipartEffect) {\n      return this.multipartEffect\n    }\n    this.multipartEffect = Effect.runSync(Effect.cached(\n      Multipart.toPersisted(this.multipartStream)\n    ))\n    return this.multipartEffect\n  }\n\n  get multipartStream(): Stream.Stream<Multipart.Part, Multipart.MultipartError> {\n    return Stream.pipeThroughChannel(\n      Stream.mapError(this.stream, (cause) => new Multipart.MultipartError({ reason: \"InternalError\", cause })),\n      Multipart.makeChannel(this.headers)\n    )\n  }\n\n  private arrayBufferEffect: Effect.Effect<ArrayBuffer, Error.RequestError> | undefined\n  get arrayBuffer(): Effect.Effect<ArrayBuffer, Error.RequestError> {\n    if (this.arrayBufferEffect) {\n      return this.arrayBufferEffect\n    }\n    this.arrayBufferEffect = Effect.runSync(Effect.cached(\n      Effect.tryPromise({\n        try: () => this.source.arrayBuffer(),\n        catch: (cause) =>\n          new Error.RequestError({\n            request: this,\n            reason: \"Decode\",\n            cause\n          })\n      })\n    ))\n    return this.arrayBufferEffect\n  }\n\n  get upgrade(): Effect.Effect<Socket.Socket, Error.RequestError> {\n    return Effect.fail(\n      new Error.RequestError({\n        request: this,\n        reason: \"Decode\",\n        description: \"Not an upgradeable ServerRequest\"\n      })\n    )\n  }\n}\n\n/** @internal */\nexport const toURL = (self: ServerRequest.HttpServerRequest): Option.Option<URL> => {\n  const host = self.headers.host ?? \"localhost\"\n  const protocol = self.headers[\"x-forwarded-proto\"] === \"https\" ? \"https\" : \"http\"\n  try {\n    return Option.some(new URL(self.url, `${protocol}://${host}`))\n  } catch (_) {\n    return Option.none()\n  }\n}\n"],"names":["Channel","Context","Effect","Inspectable","Option","Schema","Stream","Cookies","Headers","IncomingMessage","Error","Multipart","Socket","UrlParams","TypeId","Symbol","for","serverRequestTag","GenericTag","parsedSearchParamsTag","upgrade","flatMap","request","upgradeChannel","unwrap","map","toChannelWith","multipartPersisted","multipart","searchParamsFromURL","url","out","key","value","searchParams","entries","entry","undefined","Array","isArray","push","schemaCookies","schema","options","parse","decodeUnknown","req","cookies","schemaHeaders","schemaSearchParams","schemaBodyJson","isMultipart","headers","toLowerCase","includes","schemaBodyForm","parseMultipart","schemaPersisted","parseUrlParams","schemaBodyUrlParams","schemaBodyMultipart","schemaBodyFormJson","schemaJson","field","mapError","cause","RequestError","reason","urlParamsBody","fromWeb","ServerRequestImpl","removeHost","index","indexOf","slice","Class","source","headersOverride","remoteAddressOverride","constructor","toJSON","inspect","_id","method","originalUrl","modify","remoteAddress","toUpperCase","some","none","fromInput","cachedCookies","parseHeader","cookie","stream","body","fromReadableStream","fail","description","textEffect","text","runSync","cached","tryPromise","try","catch","json","tryMap","_","JSON","URLSearchParams","multipartEffect","toPersisted","multipartStream","pipeThroughChannel","MultipartError","makeChannel","arrayBufferEffect","arrayBuffer","toURL","self","host","protocol","URL"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3544, "column": 0}, "map": {"version":3,"file":"HttpServerRequest.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpServerRequest.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type { Channel } from \"effect/Channel\"\nimport type { Chunk } from \"effect/Chunk\"\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type { Option } from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type { ReadonlyRecord } from \"effect/Record\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport type * as IncomingMessage from \"./HttpIncomingMessage.js\"\nimport type { HttpMethod } from \"./HttpMethod.js\"\nimport type * as Error from \"./HttpServerError.js\"\nimport * as internal from \"./internal/httpServerRequest.js\"\nimport type * as Multipart from \"./Multipart.js\"\nimport type * as Path from \"./Path.js\"\nimport type * as Socket from \"./Socket.js\"\n\nexport {\n  /**\n   * @since 1.0.0\n   * @category fiber refs\n   */\n  maxBodySize\n} from \"./HttpIncomingMessage.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpServerRequest extends IncomingMessage.HttpIncomingMessage<Error.RequestError> {\n  readonly [TypeId]: TypeId\n  readonly source: unknown\n  readonly url: string\n  readonly originalUrl: string\n  readonly method: HttpMethod\n  readonly cookies: ReadonlyRecord<string, string>\n\n  readonly multipart: Effect.Effect<\n    Multipart.Persisted,\n    Multipart.MultipartError,\n    Scope.Scope | FileSystem.FileSystem | Path.Path\n  >\n  readonly multipartStream: Stream.Stream<Multipart.Part, Multipart.MultipartError>\n\n  readonly upgrade: Effect.Effect<Socket.Socket, Error.RequestError>\n\n  readonly modify: (\n    options: {\n      readonly url?: string\n      readonly headers?: Headers.Headers\n      readonly remoteAddress?: string\n    }\n  ) => HttpServerRequest\n}\n\n/**\n * @since 1.0.0\n * @category context\n */\nexport const HttpServerRequest: Context.Tag<HttpServerRequest, HttpServerRequest> = internal.serverRequestTag\n\n/**\n * @since 1.0.0\n * @category search params\n */\nexport interface ParsedSearchParams {\n  readonly _: unique symbol\n}\n\n/**\n * @since 1.0.0\n * @category search params\n */\nexport const ParsedSearchParams: Context.Tag<ParsedSearchParams, ReadonlyRecord<string, string | Array<string>>> =\n  internal.parsedSearchParamsTag\n\n/**\n * @since 1.0.0\n * @category search params\n */\nexport const searchParamsFromURL: (url: URL) => ReadonlyRecord<string, string | Array<string>> =\n  internal.searchParamsFromURL\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const persistedMultipart: Effect.Effect<\n  unknown,\n  Multipart.MultipartError,\n  Scope.Scope | FileSystem.FileSystem | Path.Path | HttpServerRequest\n> = internal.multipartPersisted\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const upgrade: Effect.Effect<Socket.Socket, Error.RequestError, HttpServerRequest> = internal.upgrade\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const upgradeChannel: <IE = never>() => Channel<\n  Chunk<Uint8Array>,\n  Chunk<Uint8Array | string | Socket.CloseEvent>,\n  Error.RequestError | IE | Socket.SocketError,\n  IE,\n  void,\n  unknown,\n  HttpServerRequest\n> = internal.upgradeChannel\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaCookies: <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, HttpServerRequest | R> = internal.schemaCookies\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaHeaders: <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, HttpServerRequest | R> = internal.schemaHeaders\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaSearchParams: <A, I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, ParsedSearchParams | R> = internal.schemaSearchParams\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, Error.RequestError | ParseResult.ParseError, HttpServerRequest | R> = internal.schemaBodyJson\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyForm: <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  Multipart.MultipartError | ParseResult.ParseError | Error.RequestError,\n  R | HttpServerRequest | Scope.Scope | FileSystem.FileSystem | Path.Path\n> = internal.schemaBodyForm\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyUrlParams: <\n  A,\n  I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>,\n  R\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError | Error.RequestError, R | HttpServerRequest> = internal.schemaBodyUrlParams\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyMultipart: <A, I extends Partial<Multipart.Persisted>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  Multipart.MultipartError | ParseResult.ParseError,\n  R | HttpServerRequest | Scope.Scope | FileSystem.FileSystem | Path.Path\n> = internal.schemaBodyMultipart\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaBodyFormJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (\n  field: string\n) => Effect.Effect<\n  A,\n  ParseResult.ParseError | Error.RequestError,\n  R | HttpServerRequest | FileSystem.FileSystem | Path.Path | Scope.Scope\n> = internal.schemaBodyFormJson\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const fromWeb: (request: Request) => HttpServerRequest = internal.fromWeb\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toURL: (self: HttpServerRequest) => Option<URL> = internal.toURL\n"],"names":["internal","maxBodySize","TypeId","HttpServerRequest","serverRequestTag","ParsedSearchParams","parsedSearchParamsTag","searchParamsFromURL","persistedMultipart","multipartPersisted","upgrade","upgradeChannel","schemaCookies","schemaHeaders","schemaSearchParams","schemaBodyJson","schemaBodyForm","schemaBodyUrlParams","schemaBodyMultipart","schemaBodyFormJson","fromWeb","toURL"],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,OAAO,KAAKA,QAAQ,MAAM,iCAAiC;;;AAiBpD,MAAME,MAAM,0LAAkBF,QAAQ,CAACE,AAAM;AA0C7C,MAAMC,iBAAiB,0LAAsDH,QAAQ,CAACI,UAAgB;AActG,MAAMC,kBAAkB,0LAC7BL,QAAQ,CAACM,eAAqB;AAMzB,MAAMC,mBAAmB,0LAC9BP,QAAQ,CAACO,aAAmB;AAMvB,MAAMC,kBAAkB,0LAI3BR,QAAQ,CAACS,YAAkB;AAMxB,MAAMC,OAAO,0LAAwEV,QAAQ,CAACU,CAAO;AAMrG,MAAMC,cAAc,0LAQvBX,QAAQ,CAACW,QAAc;AAMpB,MAAMC,aAAa,0LAG6CZ,QAAQ,CAACY,OAAa;AAMtF,MAAMC,aAAa,0LAG6Cb,QAAQ,CAACa,OAAa;AAMtF,MAAMC,kBAAkB,0LAGyCd,QAAQ,CAACc,YAAkB;AAM5F,MAAMC,cAAc,0LAGiEf,QAAQ,CAACe,QAAc;AAM5G,MAAMC,cAAc,0LAOvBhB,QAAQ,CAACgB,QAAc;AAMpB,MAAMC,mBAAmB,0LAO4DjB,QAAQ,CAACiB,aAAmB;AAMjH,MAAMC,mBAAmB,0LAO5BlB,QAAQ,CAACkB,aAAmB;AAMzB,MAAMC,kBAAkB,0LAS3BnB,QAAQ,CAACmB,YAAkB;AAMxB,MAAMC,OAAO,0LAA4CpB,QAAQ,CAACoB,CAAO;AAMzE,MAAMC,KAAK,0LAA6CrB,QAAQ,AAAM,CAALqB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3589, "column": 0}, "map": {"version":3,"file":"httpApp.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpApp.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Option from \"effect/Option\"\nimport type { HttpApp, PreResponseHandler } from \"../HttpApp.js\"\n\n/** @internal */\nexport const currentPreResponseHandlers: FiberRef.FiberRef<Option.Option<PreResponseHandler>> = globalValue(\n  Symbol.for(\"@effect/platform/HttpApp/preResponseHandlers\"),\n  () => FiberRef.unsafeMake<Option.Option<PreResponseHandler>>(Option.none())\n)\n\n/** @internal */\nexport const appendPreResponseHandler: (handler: PreResponseHandler) => Effect.Effect<void> = (\n  handler: PreResponseHandler\n) =>\n  FiberRef.update(\n    currentPreResponseHandlers,\n    Option.match({\n      onNone: () => Option.some(handler),\n      onSome: (prev) =>\n        Option.some((request, response) =>\n          Effect.flatMap(prev(request, response), (response) => handler(request, response))\n        )\n    })\n  )\n\n/** @internal */\nexport const withPreResponseHandler = dual<\n  (handler: PreResponseHandler) => <A, E, R>(self: HttpApp<A, E, R>) => HttpApp<A, E, R>,\n  <A, E, R>(self: HttpApp<A, E, R>, handler: PreResponseHandler) => HttpApp<A, E, R>\n>(2, (self, handler) =>\n  Effect.locallyWith(\n    self,\n    currentPreResponseHandlers,\n    Option.match({\n      onNone: () => Option.some(handler),\n      onSome: (prev) =>\n        Option.some((request, response) =>\n          Effect.flatMap(prev(request, response), (response) => handler(request, response))\n        )\n    })\n  ))\n"],"names":["Effect","FiberRef","dual","globalValue","Option","currentPreResponseHandlers","Symbol","for","unsafeMake","none","appendPreResponseHandler","handler","update","match","onNone","some","onSome","prev","request","response","flatMap","withPreResponseHandler","self","locallyWith"],"mappings":";;;;;AAAA,OAAO,KAAKA,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,KAAKC,MAAM,MAAM,eAAe;;;;;;AAIhC,MAAMC,0BAA0B,GAAA,WAAA,8JAAyDF,cAAAA,AAAW,EAAA,WAAA,GACzGG,MAAM,CAACC,GAAG,CAAC,8CAA8C,CAAC,EAC1D,QAAMN,QAAQ,CAACO,wJAAAA,AAAU,wJAAoCJ,MAAM,CAACK,AAAI,EAAE,CAAC,CAC5E;AAGM,MAAMC,wBAAwB,IACnCC,OAA2B,2JAE3BV,QAAQ,CAACW,AAAM,EACbP,0BAA0B,GAC1BD,MAAM,CAACS,sJAAAA,AAAK,EAAC;QACXC,MAAM,EAAEA,CAAA,yJAAMV,MAAM,CAACW,AAAI,EAACJ,OAAO,CAAC;QAClCK,MAAM,GAAGC,IAAI,GACXb,MAAM,CAACW,sJAAAA,AAAI,EAAC,CAACG,OAAO,EAAEC,QAAQ,yJAC5BnB,MAAM,CAACoB,GAAAA,AAAO,EAACH,IAAI,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGA,QAAQ,GAAKR,OAAO,CAACO,OAAO,EAAEC,QAAQ,CAAC,CAAC;KAEtF,CAAC,CACH;AAGI,MAAME,sBAAsB,GAAA,WAAA,2JAAGnB,OAAAA,AAAI,EAGxC,CAAC,EAAE,CAACoB,IAAI,EAAEX,OAAO,GACjBX,MAAM,CAACuB,6JAAAA,AAAW,EAChBD,IAAI,EACJjB,0BAA0B,wJAC1BD,MAAM,CAACS,CAAAA,AAAK,EAAC;QACXC,MAAM,EAAEA,CAAA,IAAMV,MAAM,CAACW,qJAAAA,AAAI,EAACJ,OAAO,CAAC;QAClCK,MAAM,GAAGC,IAAI,yJACXb,MAAM,CAACW,AAAI,EAAC,CAACG,OAAO,EAAEC,QAAQ,yJAC5BnB,MAAM,CAACoB,GAAAA,AAAO,EAACH,IAAI,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGA,QAAQ,GAAKR,OAAO,CAACO,OAAO,EAAEC,QAAQ,CAAC,CAAC;KAEtF,CAAC,CACH,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3619, "column": 0}, "map": {"version":3,"file":"HttpTraceContext.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpTraceContext.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Option from \"effect/Option\"\nimport * as Tracer from \"effect/Tracer\"\nimport * as Headers from \"./Headers.js\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface FromHeaders {\n  (headers: Headers.Headers): Option.Option<Tracer.ExternalSpan>\n}\n\n/**\n * @since 1.0.0\n * @category encoding\n */\nexport const toHeaders = (span: Tracer.Span): Headers.Headers =>\n  Headers.unsafeFromRecord({\n    b3: `${span.traceId}-${span.spanId}-${span.sampled ? \"1\" : \"0\"}${\n      span.parent._tag === \"Some\" ? `-${span.parent.value.spanId}` : \"\"\n    }`,\n    traceparent: `00-${span.traceId}-${span.spanId}-${span.sampled ? \"01\" : \"00\"}`\n  })\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const fromHeaders = (headers: Headers.Headers): Option.Option<Tracer.ExternalSpan> => {\n  let span = w3c(headers)\n  if (span._tag === \"Some\") {\n    return span\n  }\n  span = b3(headers)\n  if (span._tag === \"Some\") {\n    return span\n  }\n  return xb3(headers)\n}\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const b3: FromHeaders = (headers) => {\n  if (!(\"b3\" in headers)) {\n    return Option.none()\n  }\n  const parts = headers[\"b3\"].split(\"-\")\n  if (parts.length < 2) {\n    return Option.none()\n  }\n  return Option.some(Tracer.externalSpan({\n    traceId: parts[0],\n    spanId: parts[1],\n    sampled: parts[2] ? parts[2] === \"1\" : true\n  }))\n}\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const xb3: FromHeaders = (headers) => {\n  if (!(headers[\"x-b3-traceid\"]) || !(headers[\"x-b3-spanid\"])) {\n    return Option.none()\n  }\n  return Option.some(Tracer.externalSpan({\n    traceId: headers[\"x-b3-traceid\"],\n    spanId: headers[\"x-b3-spanid\"],\n    sampled: headers[\"x-b3-sampled\"] ? headers[\"x-b3-sampled\"] === \"1\" : true\n  }))\n}\n\nconst w3cTraceId = /^[0-9a-f]{32}$/i\nconst w3cSpanId = /^[0-9a-f]{16}$/i\n\n/**\n * @since 1.0.0\n * @category decoding\n */\nexport const w3c: FromHeaders = (headers) => {\n  if (!(headers[\"traceparent\"])) {\n    return Option.none()\n  }\n  const parts = headers[\"traceparent\"].split(\"-\")\n  if (parts.length !== 4) {\n    return Option.none()\n  }\n  const [version, traceId, spanId, flags] = parts\n  switch (version) {\n    case \"00\": {\n      if (w3cTraceId.test(traceId) === false || w3cSpanId.test(spanId) === false) {\n        return Option.none()\n      }\n      return Option.some(Tracer.externalSpan({\n        traceId,\n        spanId,\n        sampled: (parseInt(flags, 16) & 1) === 1\n      }))\n    }\n    default: {\n      return Option.none()\n    }\n  }\n}\n"],"names":["Option","Tracer","Headers","toHeaders","span","unsafeFromRecord","b3","traceId","spanId","sampled","parent","_tag","value","traceparent","fromHeaders","headers","w3c","xb3","none","parts","split","length","some","externalSpan","w3cTraceId","w3cSpanId","version","flags","test","parseInt"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3708, "column": 0}, "map": {"version":3,"file":"httpMiddleware.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpMiddleware.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { constFalse, dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Layer from \"effect/Layer\"\nimport * as Option from \"effect/Option\"\nimport type * as Predicate from \"effect/Predicate\"\nimport type { ReadonlyRecord } from \"effect/Record\"\nimport * as Headers from \"../Headers.js\"\nimport type * as App from \"../HttpApp.js\"\nimport type * as Middleware from \"../HttpMiddleware.js\"\nimport * as ServerError from \"../HttpServerError.js\"\nimport * as ServerRequest from \"../HttpServerRequest.js\"\nimport * as ServerResponse from \"../HttpServerResponse.js\"\nimport type { HttpServerResponse } from \"../HttpServerResponse.js\"\nimport * as TraceContext from \"../HttpTraceContext.js\"\nimport * as internalHttpApp from \"./httpApp.js\"\n\n/** @internal */\nexport const make = <M extends Middleware.HttpMiddleware>(middleware: M): M => middleware\n\n/** @internal */\nexport const loggerDisabled = globalValue(\n  Symbol.for(\"@effect/platform/HttpMiddleware/loggerDisabled\"),\n  () => FiberRef.unsafeMake(false)\n)\n\n/** @internal */\nexport const withLoggerDisabled = <A, E, R>(self: Effect.Effect<A, E, R>): Effect.Effect<A, E, R> =>\n  Effect.zipRight(\n    FiberRef.set(loggerDisabled, true),\n    self\n  )\n\n/** @internal */\nexport const currentTracerDisabledWhen = globalValue(\n  Symbol.for(\"@effect/platform/HttpMiddleware/tracerDisabledWhen\"),\n  () => FiberRef.unsafeMake<Predicate.Predicate<ServerRequest.HttpServerRequest>>(constFalse)\n)\n\n/** @internal */\nexport const withTracerDisabledWhen = dual<\n  (\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => <A, E, R>(layer: Layer.Layer<A, E, R>) => Layer.Layer<A, E, R>,\n  <A, E, R>(\n    layer: Layer.Layer<A, E, R>,\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => Layer.Layer<A, E, R>\n>(2, (self, pred) => Layer.locally(self, currentTracerDisabledWhen, pred))\n\n/** @internal */\nexport const withTracerDisabledWhenEffect = dual<\n  (\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,\n  <A, E, R>(\n    effect: Effect.Effect<A, E, R>,\n    predicate: Predicate.Predicate<ServerRequest.HttpServerRequest>\n  ) => Effect.Effect<A, E, R>\n>(2, (self, pred) => Effect.locally(self, currentTracerDisabledWhen, pred))\n\n/** @internal */\nexport const withTracerDisabledForUrls = dual<\n  (\n    urls: ReadonlyArray<string>\n  ) => <A, E, R>(layer: Layer.Layer<A, E, R>) => Layer.Layer<A, E, R>,\n  <A, E, R>(\n    layer: Layer.Layer<A, E, R>,\n    urls: ReadonlyArray<string>\n  ) => Layer.Layer<A, E, R>\n>(2, (self, urls) => Layer.locally(self, currentTracerDisabledWhen, (req) => urls.includes(req.url)))\n\n/** @internal */\nexport const SpanNameGenerator = Context.Reference<Middleware.SpanNameGenerator>()(\n  \"@effect/platform/HttpMiddleware/SpanNameGenerator\",\n  {\n    defaultValue: () => (request: ServerRequest.HttpServerRequest) => `http.server ${request.method}`\n  }\n)\n\n/** @internal */\nexport const withSpanNameGenerator = dual<\n  (\n    f: (request: ServerRequest.HttpServerRequest) => string\n  ) => <A, E, R>(layer: Layer.Layer<A, E, R>) => Layer.Layer<A, E, R>,\n  <A, E, R>(\n    layer: Layer.Layer<A, E, R>,\n    f: (request: ServerRequest.HttpServerRequest) => string\n  ) => Layer.Layer<A, E, R>\n>(2, (self, f) => Layer.provide(self, Layer.succeed(SpanNameGenerator, f)))\n\n/** @internal */\nexport const logger = make((httpApp) => {\n  let counter = 0\n  return Effect.withFiberRuntime((fiber) => {\n    const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n    return Effect.withLogSpan(\n      Effect.flatMap(Effect.exit(httpApp), (exit) => {\n        if (fiber.getFiberRef(loggerDisabled)) {\n          return exit\n        } else if (exit._tag === \"Failure\") {\n          const [response, cause] = ServerError.causeResponseStripped(exit.cause)\n          return Effect.zipRight(\n            Effect.annotateLogs(Effect.log(cause._tag === \"Some\" ? cause.value : \"Sent HTTP Response\"), {\n              \"http.method\": request.method,\n              \"http.url\": request.url,\n              \"http.status\": response.status\n            }),\n            exit\n          )\n        }\n        return Effect.zipRight(\n          Effect.annotateLogs(Effect.log(\"Sent HTTP response\"), {\n            \"http.method\": request.method,\n            \"http.url\": request.url,\n            \"http.status\": exit.value.status\n          }),\n          exit\n        )\n      }),\n      `http.span.${++counter}`\n    )\n  })\n})\n\n/** @internal */\nexport const tracer = make((httpApp) =>\n  Effect.withFiberRuntime((fiber) => {\n    const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n    const disabled = fiber.getFiberRef(currentTracerDisabledWhen)(request)\n    if (disabled) {\n      return httpApp\n    }\n    const url = Option.getOrUndefined(ServerRequest.toURL(request))\n    if (url !== undefined && (url.username !== \"\" || url.password !== \"\")) {\n      url.username = \"REDACTED\"\n      url.password = \"REDACTED\"\n    }\n    const redactedHeaderNames = fiber.getFiberRef(Headers.currentRedactedNames)\n    const redactedHeaders = Headers.redact(request.headers, redactedHeaderNames)\n    const nameGenerator = Context.get(fiber.currentContext, SpanNameGenerator)\n    return Effect.useSpan(\n      nameGenerator(request),\n      {\n        parent: Option.getOrUndefined(TraceContext.fromHeaders(request.headers)),\n        kind: \"server\",\n        captureStackTrace: false\n      },\n      (span) => {\n        span.attribute(\"http.request.method\", request.method)\n        if (url !== undefined) {\n          span.attribute(\"url.full\", url.toString())\n          span.attribute(\"url.path\", url.pathname)\n          const query = url.search.slice(1)\n          if (query !== \"\") {\n            span.attribute(\"url.query\", url.search.slice(1))\n          }\n          span.attribute(\"url.scheme\", url.protocol.slice(0, -1))\n        }\n        if (request.headers[\"user-agent\"] !== undefined) {\n          span.attribute(\"user_agent.original\", request.headers[\"user-agent\"])\n        }\n        for (const name in redactedHeaders) {\n          span.attribute(`http.request.header.${name}`, String(redactedHeaders[name]))\n        }\n        if (request.remoteAddress._tag === \"Some\") {\n          span.attribute(\"client.address\", request.remoteAddress.value)\n        }\n        return Effect.flatMap(\n          Effect.exit(Effect.withParentSpan(httpApp, span)),\n          (exit) => {\n            const response = ServerError.exitResponse(exit)\n            span.attribute(\"http.response.status_code\", response.status)\n            const redactedHeaders = Headers.redact(response.headers, redactedHeaderNames)\n            for (const name in redactedHeaders) {\n              span.attribute(`http.response.header.${name}`, String(redactedHeaders[name]))\n            }\n            return exit\n          }\n        )\n      }\n    )\n  })\n)\n\n/** @internal */\nexport const xForwardedHeaders = make((httpApp) =>\n  Effect.updateService(httpApp, ServerRequest.HttpServerRequest, (request) =>\n    request.headers[\"x-forwarded-host\"]\n      ? request.modify({\n        headers: Headers.set(\n          request.headers,\n          \"host\",\n          request.headers[\"x-forwarded-host\"]\n        ),\n        remoteAddress: request.headers[\"x-forwarded-for\"]?.split(\",\")[0].trim()\n      })\n      : request)\n)\n\n/** @internal */\nexport const searchParamsParser = <E, R>(httpApp: App.Default<E, R>) =>\n  Effect.withFiberRuntime<\n    HttpServerResponse,\n    E,\n    ServerRequest.HttpServerRequest | Exclude<R, ServerRequest.ParsedSearchParams>\n  >((fiber) => {\n    const context = fiber.currentContext\n    const request = Context.unsafeGet(context, ServerRequest.HttpServerRequest)\n    const params = ServerRequest.searchParamsFromURL(new URL(request.originalUrl))\n    return Effect.locally(\n      httpApp,\n      FiberRef.currentContext,\n      Context.add(context, ServerRequest.ParsedSearchParams, params)\n    ) as any\n  })\n\n/** @internal */\nexport const cors = (options?: {\n  readonly allowedOrigins?: ReadonlyArray<string> | undefined\n  readonly allowedMethods?: ReadonlyArray<string> | undefined\n  readonly allowedHeaders?: ReadonlyArray<string> | undefined\n  readonly exposedHeaders?: ReadonlyArray<string> | undefined\n  readonly maxAge?: number | undefined\n  readonly credentials?: boolean | undefined\n}) => {\n  const opts = {\n    allowedOrigins: [\"*\"],\n    allowedMethods: [\"GET\", \"HEAD\", \"PUT\", \"PATCH\", \"POST\", \"DELETE\"],\n    allowedHeaders: [],\n    exposedHeaders: [],\n    credentials: false,\n    ...options\n  }\n\n  const isAllowedOrigin = (origin: string) => opts.allowedOrigins.includes(origin)\n\n  const allowOrigin = (originHeader: string): ReadonlyRecord<string, string> | undefined => {\n    if (opts.allowedOrigins.length === 0) {\n      return { \"access-control-allow-origin\": \"*\" }\n    }\n\n    if (opts.allowedOrigins.length === 1) {\n      return {\n        \"access-control-allow-origin\": opts.allowedOrigins[0],\n        vary: \"Origin\"\n      }\n    }\n\n    if (isAllowedOrigin(originHeader)) {\n      return {\n        \"access-control-allow-origin\": originHeader,\n        vary: \"Origin\"\n      }\n    }\n\n    return undefined\n  }\n\n  const allowMethods = opts.allowedMethods.length > 0\n    ? { \"access-control-allow-methods\": opts.allowedMethods.join(\", \") }\n    : undefined\n\n  const allowCredentials = opts.credentials\n    ? { \"access-control-allow-credentials\": \"true\" }\n    : undefined\n\n  const allowHeaders = (\n    accessControlRequestHeaders: string | undefined\n  ): ReadonlyRecord<string, string> | undefined => {\n    if (opts.allowedHeaders.length === 0 && accessControlRequestHeaders) {\n      return {\n        vary: \"Access-Control-Request-Headers\",\n        \"access-control-allow-headers\": accessControlRequestHeaders\n      }\n    }\n\n    if (opts.allowedHeaders) {\n      return {\n        \"access-control-allow-headers\": opts.allowedHeaders.join(\",\")\n      }\n    }\n\n    return undefined\n  }\n\n  const exposeHeaders = opts.exposedHeaders.length > 0\n    ? { \"access-control-expose-headers\": opts.exposedHeaders.join(\",\") }\n    : undefined\n\n  const maxAge = opts.maxAge\n    ? { \"access-control-max-age\": opts.maxAge.toString() }\n    : undefined\n\n  const headersFromRequest = (request: ServerRequest.HttpServerRequest) => {\n    const origin = request.headers[\"origin\"]\n    return Headers.unsafeFromRecord({\n      ...allowOrigin(origin),\n      ...allowCredentials,\n      ...exposeHeaders\n    })\n  }\n\n  const headersFromRequestOptions = (request: ServerRequest.HttpServerRequest) => {\n    const origin = request.headers[\"origin\"]\n    const accessControlRequestHeaders = request.headers[\"access-control-request-headers\"]\n    return Headers.unsafeFromRecord({\n      ...allowOrigin(origin),\n      ...allowCredentials,\n      ...exposeHeaders,\n      ...allowMethods,\n      ...allowHeaders(accessControlRequestHeaders),\n      ...maxAge\n    })\n  }\n\n  const preResponseHandler = (request: ServerRequest.HttpServerRequest, response: HttpServerResponse) =>\n    Effect.succeed(ServerResponse.setHeaders(response, headersFromRequest(request)))\n\n  return <E, R>(httpApp: App.Default<E, R>): App.Default<E, R> =>\n    Effect.withFiberRuntime((fiber) => {\n      const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n      if (request.method === \"OPTIONS\") {\n        return Effect.succeed(ServerResponse.empty({\n          status: 204,\n          headers: headersFromRequestOptions(request)\n        }))\n      }\n      return Effect.zipRight(internalHttpApp.appendPreResponseHandler(preResponseHandler), httpApp)\n    })\n}\n"],"names":["Context","Effect","FiberRef","constFalse","dual","globalValue","Layer","Option","Headers","ServerError","ServerRequest","ServerResponse","TraceContext","internalHttpApp","make","middleware","loggerDisabled","Symbol","for","unsafeMake","withLoggerDisabled","self","zipRight","set","currentTracerDisabledWhen","withTracerDisabledWhen","pred","locally","withTracerDisabledWhenEffect","withTracerDisabledForUrls","urls","req","includes","url","SpanNameGenerator","Reference","defaultValue","request","method","withSpanNameGenerator","f","provide","succeed","logger","httpApp","counter","withFiberRuntime","fiber","unsafeGet","currentContext","HttpServerRequest","withLogSpan","flatMap","exit","getFiberRef","_tag","response","cause","causeResponseStripped","annotateLogs","log","value","status","tracer","disabled","getOrUndefined","toURL","undefined","username","password","redactedHeaderNames","currentRedactedNames","redactedHeaders","redact","headers","nameGenerator","get","useSpan","parent","fromHeaders","kind","captureStackTrace","span","attribute","toString","pathname","query","search","slice","protocol","name","String","remoteAddress","withParentSpan","exitResponse","xForwardedHeaders","updateService","modify","split","trim","searchParamsParser","context","params","searchParamsFromURL","URL","originalUrl","add","ParsedSearchParams","cors","options","opts","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","credentials","isAllowedOrigin","origin","allowOrigin","originHeader","length","vary","allowMethods","join","allowCredentials","allowHeaders","accessControlRequestHeaders","exposeHeaders","maxAge","headersFromRequest","unsafeFromRecord","headersFromRequestOptions","preResponseHandler","setHeaders","empty","appendPreResponseHandler"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3946, "column": 0}, "map": {"version":3,"file":"HttpApp.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpApp.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Exit from \"effect/Exit\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport * as Layer from \"effect/Layer\"\nimport type * as Option from \"effect/Option\"\nimport * as Runtime from \"effect/Runtime\"\nimport * as Scope from \"effect/Scope\"\nimport { unify } from \"effect/Unify\"\nimport type { HttpMiddleware } from \"./HttpMiddleware.js\"\nimport * as ServerError from \"./HttpServerError.js\"\nimport * as ServerRequest from \"./HttpServerRequest.js\"\nimport * as ServerResponse from \"./HttpServerResponse.js\"\nimport * as internal from \"./internal/httpApp.js\"\nimport * as internalMiddleware from \"./internal/httpMiddleware.js\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type HttpApp<A = ServerResponse.HttpServerResponse, E = never, R = never> = Effect.Effect<\n  A,\n  E,\n  R | ServerRequest.HttpServerRequest\n>\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Default<E = never, R = never> = HttpApp<ServerResponse.HttpServerResponse, E, R>\n\nconst handledSymbol = Symbol.for(\"@effect/platform/HttpApp/handled\")\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const toHandled = <E, R, _, EH, RH>(\n  self: Default<E, R>,\n  handleResponse: (\n    request: ServerRequest.HttpServerRequest,\n    response: ServerResponse.HttpServerResponse\n  ) => Effect.Effect<_, EH, RH>,\n  middleware?: HttpMiddleware | undefined\n): Effect.Effect<void, never, Exclude<R | RH | ServerRequest.HttpServerRequest, Scope.Scope>> => {\n  const responded = Effect.withFiberRuntime<\n    ServerResponse.HttpServerResponse,\n    E | EH | ServerError.ResponseError,\n    R | RH | ServerRequest.HttpServerRequest\n  >((fiber) =>\n    Effect.flatMap(self, (response) => {\n      const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n      const handler = fiber.getFiberRef(currentPreResponseHandlers)\n      if (handler._tag === \"None\") {\n        ;(request as any)[handledSymbol] = true\n        return Effect.as(handleResponse(request, response), response)\n      }\n      return Effect.tap(handler.value(request, response), (response) => {\n        ;(request as any)[handledSymbol] = true\n        return handleResponse(request, response)\n      })\n    })\n  )\n\n  const withErrorHandling = Effect.catchAllCause(\n    responded,\n    (cause) =>\n      Effect.withFiberRuntime<\n        ServerResponse.HttpServerResponse,\n        E | EH | ServerError.ResponseError,\n        ServerRequest.HttpServerRequest | RH\n      >((fiber) =>\n        Effect.flatMap(ServerError.causeResponse(cause), ([response, cause]) => {\n          const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n          const handler = fiber.getFiberRef(currentPreResponseHandlers)\n          if (handler._tag === \"None\") {\n            ;(request as any)[handledSymbol] = true\n            return Effect.zipRight(handleResponse(request, response), Effect.failCause(cause))\n          }\n          return Effect.zipRight(\n            Effect.tap(handler.value(request, response), (response) => {\n              ;(request as any)[handledSymbol] = true\n              return handleResponse(request, response)\n            }),\n            Effect.failCause(cause)\n          )\n        })\n      )\n  )\n\n  const withMiddleware = unify(\n    middleware === undefined ?\n      internalMiddleware.tracer(withErrorHandling) :\n      Effect.matchCauseEffect(middleware(internalMiddleware.tracer(withErrorHandling)), {\n        onFailure: (cause): Effect.Effect<void, EH, RH> =>\n          Effect.withFiberRuntime((fiber) => {\n            const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n            if (handledSymbol in request) {\n              return Effect.void\n            }\n            return Effect.matchCauseEffect(ServerError.causeResponse(cause), {\n              onFailure: (_cause) => handleResponse(request, ServerResponse.empty({ status: 500 })),\n              onSuccess: ([response]) => handleResponse(request, response)\n            })\n          }),\n        onSuccess: (response): Effect.Effect<void, EH, RH> =>\n          Effect.withFiberRuntime((fiber) => {\n            const request = Context.unsafeGet(fiber.currentContext, ServerRequest.HttpServerRequest)\n            return handledSymbol in request ? Effect.void : handleResponse(request, response)\n          })\n      })\n  )\n\n  return Effect.uninterruptible(Effect.scoped(withMiddleware)) as any\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type PreResponseHandler = (\n  request: ServerRequest.HttpServerRequest,\n  response: ServerResponse.HttpServerResponse\n) => Effect.Effect<ServerResponse.HttpServerResponse, ServerError.ResponseError>\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const currentPreResponseHandlers: FiberRef.FiberRef<Option.Option<PreResponseHandler>> =\n  internal.currentPreResponseHandlers\n\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const appendPreResponseHandler: (handler: PreResponseHandler) => Effect.Effect<void> =\n  internal.appendPreResponseHandler\n/**\n * @since 1.0.0\n * @category fiber refs\n */\nexport const withPreResponseHandler = internal.withPreResponseHandler\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWebHandlerRuntime = <R>(runtime: Runtime.Runtime<R>) => {\n  const run = Runtime.runFork(runtime)\n  return <E>(self: Default<E, R | Scope.Scope>, middleware?: HttpMiddleware | undefined) => {\n    const resolveSymbol = Symbol.for(\"@effect/platform/HttpApp/resolve\")\n    const httpApp = toHandled(self, (request, response) => {\n      ;(request as any)[resolveSymbol](\n        ServerResponse.toWeb(response, { withoutBody: request.method === \"HEAD\", runtime })\n      )\n      return Effect.void\n    }, middleware)\n    return (request: Request, context?: Context.Context<never> | undefined): Promise<Response> =>\n      new Promise((resolve) => {\n        const contextMap = new Map<string, any>(runtime.context.unsafeMap)\n        if (Context.isContext(context)) {\n          for (const [key, value] of context.unsafeMap) {\n            contextMap.set(key, value)\n          }\n        }\n        const httpServerRequest = ServerRequest.fromWeb(request)\n        contextMap.set(ServerRequest.HttpServerRequest.key, httpServerRequest)\n        ;(httpServerRequest as any)[resolveSymbol] = resolve\n        const fiber = run(Effect.locally(httpApp as any, FiberRef.currentContext, Context.unsafeMake(contextMap)))\n        request.signal?.addEventListener(\"abort\", () => {\n          fiber.unsafeInterruptAsFork(ServerError.clientAbortFiberId)\n        }, { once: true })\n      })\n  }\n}\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWebHandler: <E>(\n  self: Default<E, Scope.Scope>,\n  middleware?: HttpMiddleware | undefined\n) => (request: Request, context?: Context.Context<never> | undefined) => Promise<Response> = toWebHandlerRuntime(\n  Runtime.defaultRuntime\n)\n\n/**\n * @since 1.0.0\n * @category conversions\n */\nexport const toWebHandlerLayer = <E, R, RE>(\n  self: Default<E, R | Scope.Scope>,\n  layer: Layer.Layer<R, RE>,\n  middleware?: HttpMiddleware | undefined\n): {\n  readonly close: () => Promise<void>\n  readonly handler: (request: Request, context?: Context.Context<never> | undefined) => Promise<Response>\n} => {\n  const scope = Effect.runSync(Scope.make())\n  const close = () => Effect.runPromise(Scope.close(scope, Exit.void))\n  const build = Effect.map(Layer.toRuntime(layer), (_) => toWebHandlerRuntime(_)(self, middleware))\n  const runner = Effect.runPromise(Scope.extend(build, scope))\n  const handler = (request: Request, context?: Context.Context<never> | undefined): Promise<Response> =>\n    runner.then((handler) => handler(request, context))\n  return { close, handler } as const\n}\n"],"names":["Context","Effect","Exit","FiberRef","Layer","Runtime","Scope","unify","ServerError","ServerRequest","ServerResponse","internal","internalMiddleware","handledSymbol","Symbol","for","toHandled","self","handleResponse","middleware","responded","withFiberRuntime","fiber","flatMap","response","request","unsafeGet","currentContext","HttpServerRequest","handler","getFiberRef","currentPreResponseHandlers","_tag","as","tap","value","withErrorHandling","catchAllCause","cause","causeResponse","zipRight","failCause","withMiddleware","undefined","tracer","matchCauseEffect","onFailure","void","_cause","empty","status","onSuccess","uninterruptible","scoped","appendPreResponseHandler","withPreResponseHandler","toWebHandlerRuntime","runtime","run","runFork","resolveSymbol","httpApp","toWeb","withoutBody","method","context","Promise","resolve","contextMap","Map","unsafeMap","isContext","key","set","httpServerRequest","fromWeb","locally","unsafeMake","signal","addEventListener","unsafeInterruptAsFork","clientAbortFiberId","once","toWebHandler","defaultRuntime","toWebHandlerLayer","layer","scope","runSync","make","close","runPromise","build","map","toRuntime","_","runner","extend","then"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4179, "column": 0}, "map": {"version":3,"file":"httpClientError.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpClientError.ts"],"sourcesContent":["import type * as Error from \"../HttpClientError.js\"\n\n/** @internal */\nexport const TypeId: Error.TypeId = Symbol.for(\n  \"@effect/platform/HttpClientError\"\n) as Error.TypeId\n"],"names":["TypeId","Symbol","for"],"mappings":"AAEA,cAAA;;;AACO,MAAMA,MAAM,GAAA,WAAA,GAAiBC,MAAM,CAACC,GAAG,CAC5C,kCAAkC,CACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4189, "column": 0}, "map": {"version":3,"file":"HttpClientError.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpClientError.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Error from \"@effect/platform/Error\"\nimport { hasProperty } from \"effect/Predicate\"\nimport type * as ClientRequest from \"./HttpClientRequest.js\"\nimport type * as ClientResponse from \"./HttpClientResponse.js\"\nimport * as internal from \"./internal/httpClientError.js\"\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type id\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category guards\n */\nexport const isHttpClientError = (u: unknown): u is HttpClientError => hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport type HttpClientError = RequestError | ResponseError\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class RequestError extends Error.TypeIdError(TypeId, \"RequestError\")<{\n  readonly request: ClientRequest.HttpClientRequest\n  readonly reason: \"Transport\" | \"Encode\" | \"InvalidUrl\"\n  readonly cause?: unknown\n  readonly description?: string\n}> {\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    return this.description ?\n      `${this.reason}: ${this.description} (${this.methodAndUrl})` :\n      `${this.reason} error (${this.methodAndUrl})`\n  }\n}\n\n/**\n * @since 1.0.0\n * @category error\n */\nexport class ResponseError extends Error.TypeIdError(TypeId, \"ResponseError\")<{\n  readonly request: ClientRequest.HttpClientRequest\n  readonly response: ClientResponse.HttpClientResponse\n  readonly reason: \"StatusCode\" | \"Decode\" | \"EmptyBody\"\n  readonly cause?: unknown\n  readonly description?: string\n}> {\n  get methodAndUrl() {\n    return `${this.request.method} ${this.request.url}`\n  }\n\n  get message() {\n    const info = `${this.response.status} ${this.methodAndUrl}`\n    return this.description ?\n      `${this.reason}: ${this.description} (${info})` :\n      `${this.reason} error (${info})`\n  }\n}\n"],"names":["Error","hasProperty","internal","TypeId","isHttpClientError","u","RequestError","TypeIdError","methodAndUrl","request","method","url","message","description","reason","ResponseError","info","response","status"],"mappings":"AAAA;;;;;;;;AAGA,OAAO,KAAKA,KAAK,MAAM,wBAAwB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,KAAKC,QAAQ,MAAM,+BAA+B;;;;AAMlD,MAAMC,MAAM,wLAAkBD,QAAQ,CAACC,AAAM;AAY7C,MAAMC,iBAAiB,IAAIC,CAAU,4JAA2BJ,cAAAA,AAAW,EAACI,CAAC,EAAEF,MAAM,CAAC;AAYvF,MAAOG,YAAa,SAAA,WAAA,GAAQN,KAAK,CAACO,2KAAAA,AAAW,EAACJ,MAAM,EAAE,cAAc,CAKxE;IACA,IAAIK,YAAYA,CAAA,EAAA;QACd,OAAO,GAAG,IAAI,CAACC,OAAO,CAACC,MAAM,CAAA,CAAA,EAAI,IAAI,CAACD,OAAO,CAACE,GAAG,EAAE;IACrD;IAEA,IAAIC,OAAOA,CAAA,EAAA;QACT,OAAO,IAAI,CAACC,WAAW,GACrB,GAAG,IAAI,CAACC,MAAM,CAAA,EAAA,EAAK,IAAI,CAACD,WAAW,CAAA,EAAA,EAAK,IAAI,CAACL,YAAY,CAAA,CAAA,CAAG,GAC5D,GAAG,IAAI,CAACM,MAAM,CAAA,QAAA,EAAW,IAAI,CAACN,YAAY,CAAA,CAAA,CAAG;IACjD;;AAOI,MAAOO,aAAc,SAAA,WAAA,IAAQf,KAAK,CAACO,0KAAAA,AAAW,EAACJ,MAAM,EAAE,eAAe,CAM1E;IACA,IAAIK,YAAYA,CAAA,EAAA;QACd,OAAO,GAAG,IAAI,CAACC,OAAO,CAACC,MAAM,CAAA,CAAA,EAAI,IAAI,CAACD,OAAO,CAACE,GAAG,EAAE;IACrD;IAEA,IAAIC,OAAOA,CAAA,EAAA;QACT,MAAMI,IAAI,GAAG,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAA,CAAA,EAAI,IAAI,CAACV,YAAY,EAAE;QAC3D,OAAO,IAAI,CAACK,WAAW,GACrB,GAAG,IAAI,CAACC,MAAM,CAAA,EAAA,EAAK,IAAI,CAACD,WAAW,CAAA,EAAA,EAAKG,IAAI,CAAA,CAAA,CAAG,GAC/C,GAAG,IAAI,CAACF,MAAM,CAAA,QAAA,EAAWE,IAAI,CAAA,CAAA,CAAG;IACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4228, "column": 0}, "map": {"version":3,"file":"httpClientRequest.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpClientRequest.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport { dual } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport { pipeArguments } from \"effect/Pipeable\"\nimport * as Redacted from \"effect/Redacted\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as PlatformError from \"../Error.js\"\nimport type * as FileSystem from \"../FileSystem.js\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Body from \"../HttpBody.js\"\nimport type * as ClientRequest from \"../HttpClientRequest.js\"\nimport type { HttpMethod } from \"../HttpMethod.js\"\nimport * as UrlParams from \"../UrlParams.js\"\nimport * as internalBody from \"./httpBody.js\"\n\n/** @internal */\nexport const TypeId: ClientRequest.TypeId = Symbol.for(\"@effect/platform/HttpClientRequest\") as ClientRequest.TypeId\n\nconst Proto = {\n  [TypeId]: TypeId,\n  ...Inspectable.BaseProto,\n  toJSON(this: ClientRequest.HttpClientRequest): unknown {\n    return {\n      _id: \"@effect/platform/HttpClientRequest\",\n      method: this.method,\n      url: this.url,\n      urlParams: this.urlParams,\n      hash: this.hash,\n      headers: Inspectable.redact(this.headers),\n      body: this.body.toJSON()\n    }\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n}\n\nfunction makeInternal(\n  method: HttpMethod,\n  url: string,\n  urlParams: UrlParams.UrlParams,\n  hash: Option.Option<string>,\n  headers: Headers.Headers,\n  body: Body.HttpBody\n): ClientRequest.HttpClientRequest {\n  const self = Object.create(Proto)\n  self.method = method\n  self.url = url\n  self.urlParams = urlParams\n  self.hash = hash\n  self.headers = headers\n  self.body = body\n  return self\n}\n\n/** @internal */\nexport const isClientRequest = (u: unknown): u is ClientRequest.HttpClientRequest =>\n  typeof u === \"object\" && u !== null && TypeId in u\n\n/** @internal */\nexport const empty: ClientRequest.HttpClientRequest = makeInternal(\n  \"GET\",\n  \"\",\n  UrlParams.empty,\n  Option.none(),\n  Headers.empty,\n  internalBody.empty\n)\n\n/** @internal */\nexport const make = <M extends HttpMethod>(method: M) =>\n(\n  url: string | URL,\n  options?: M extends \"GET\" | \"HEAD\" ? ClientRequest.Options.NoBody : ClientRequest.Options.NoUrl\n) =>\n  modify(empty, {\n    method,\n    url,\n    ...(options ?? undefined)\n  })\n\n/** @internal */\nexport const get = make(\"GET\")\n\n/** @internal */\nexport const post = make(\"POST\")\n\n/** @internal */\nexport const put = make(\"PUT\")\n\n/** @internal */\nexport const patch = make(\"PATCH\")\n\n/** @internal */\nexport const del = make(\"DELETE\")\n\n/** @internal */\nexport const head = make(\"HEAD\")\n\n/** @internal */\nexport const options = make(\"OPTIONS\")\n\n/** @internal */\nexport const modify = dual<\n  (options: ClientRequest.Options) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, options: ClientRequest.Options) => ClientRequest.HttpClientRequest\n>(2, (self, options) => {\n  let result = self\n\n  if (options.method) {\n    result = setMethod(result, options.method)\n  }\n  if (options.url) {\n    result = setUrl(result, options.url)\n  }\n  if (options.headers) {\n    result = setHeaders(result, options.headers)\n  }\n  if (options.urlParams) {\n    result = setUrlParams(result, options.urlParams)\n  }\n  if (options.hash) {\n    result = setHash(result, options.hash)\n  }\n  if (options.body) {\n    result = setBody(result, options.body)\n  }\n  if (options.accept) {\n    result = accept(result, options.accept)\n  }\n  if (options.acceptJson) {\n    result = acceptJson(result)\n  }\n\n  return result\n})\n\n/** @internal */\nexport const setHeader = dual<\n  (key: string, value: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, key: string, value: string) => ClientRequest.HttpClientRequest\n>(3, (self, key, value) =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    Headers.set(self.headers, key, value),\n    self.body\n  ))\n\n/** @internal */\nexport const setHeaders = dual<\n  (input: Headers.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: Headers.Input) => ClientRequest.HttpClientRequest\n>(2, (self, input) =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    Headers.setAll(self.headers, input),\n    self.body\n  ))\n\nconst stringOrRedacted = (value: string | Redacted.Redacted): string =>\n  typeof value === \"string\" ? value : Redacted.value(value)\n\n/** @internal */\nexport const basicAuth = dual<\n  (\n    username: string | Redacted.Redacted,\n    password: string | Redacted.Redacted\n  ) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (\n    self: ClientRequest.HttpClientRequest,\n    username: string | Redacted.Redacted,\n    password: string | Redacted.Redacted\n  ) => ClientRequest.HttpClientRequest\n>(\n  3,\n  (self, username, password) =>\n    setHeader(self, \"Authorization\", `Basic ${btoa(`${stringOrRedacted(username)}:${stringOrRedacted(password)}`)}`)\n)\n\n/** @internal */\nexport const bearerToken = dual<\n  (token: string | Redacted.Redacted) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, token: string | Redacted.Redacted) => ClientRequest.HttpClientRequest\n>(2, (self, token) => setHeader(self, \"Authorization\", `Bearer ${stringOrRedacted(token)}`))\n\n/** @internal */\nexport const accept = dual<\n  (mediaType: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, mediaType: string) => ClientRequest.HttpClientRequest\n>(2, (self, mediaType) => setHeader(self, \"Accept\", mediaType))\n\n/** @internal */\nexport const acceptJson = accept(\"application/json\")\n\n/** @internal */\nexport const setMethod = dual<\n  (method: HttpMethod) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, method: HttpMethod) => ClientRequest.HttpClientRequest\n>(2, (self, method) =>\n  makeInternal(\n    method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setUrl = dual<\n  (url: string | URL) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, url: string | URL) => ClientRequest.HttpClientRequest\n>(2, (self, url) => {\n  if (typeof url === \"string\") {\n    return makeInternal(\n      self.method,\n      url,\n      self.urlParams,\n      self.hash,\n      self.headers,\n      self.body\n    )\n  }\n  const clone = new URL(url.toString())\n  const urlParams = UrlParams.fromInput(clone.searchParams)\n  const hash = clone.hash ? Option.some(clone.hash.slice(1)) : Option.none()\n  clone.search = \"\"\n  clone.hash = \"\"\n  return makeInternal(\n    self.method,\n    clone.toString(),\n    urlParams,\n    hash,\n    self.headers,\n    self.body\n  )\n})\n\n/** @internal */\nexport const appendUrl = dual<\n  (path: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, path: string) => ClientRequest.HttpClientRequest\n>(2, (self, url) =>\n  makeInternal(\n    self.method,\n    self.url.endsWith(\"/\") && url.startsWith(\"/\") ?\n      self.url + url.slice(1) :\n      self.url + url,\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const prependUrl = dual<\n  (path: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, path: string) => ClientRequest.HttpClientRequest\n>(2, (self, url) =>\n  makeInternal(\n    self.method,\n    url.endsWith(\"/\") && self.url.startsWith(\"/\") ?\n      url + self.url.slice(1) :\n      url + self.url,\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const updateUrl = dual<\n  (f: (url: string) => string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, f: (url: string) => string) => ClientRequest.HttpClientRequest\n>(2, (self, f) =>\n  makeInternal(\n    self.method,\n    f(self.url),\n    self.urlParams,\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const appendUrlParam = dual<\n  (key: string, value: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, key: string, value: string) => ClientRequest.HttpClientRequest\n>(3, (self, key, value) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.append(self.urlParams, key, value),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const appendUrlParams = dual<\n  (input: UrlParams.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: UrlParams.Input) => ClientRequest.HttpClientRequest\n>(2, (self, input) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.appendAll(self.urlParams, input),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setUrlParam = dual<\n  (key: string, value: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, key: string, value: string) => ClientRequest.HttpClientRequest\n>(3, (self, key, value) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.set(self.urlParams, key, value),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setUrlParams = dual<\n  (input: UrlParams.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: UrlParams.Input) => ClientRequest.HttpClientRequest\n>(2, (self, input) =>\n  makeInternal(\n    self.method,\n    self.url,\n    UrlParams.setAll(self.urlParams, input),\n    self.hash,\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const setHash = dual<\n  (hash: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, hash: string) => ClientRequest.HttpClientRequest\n>(2, (self, hash) =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    Option.some(hash),\n    self.headers,\n    self.body\n  ))\n\n/** @internal */\nexport const removeHash = (self: ClientRequest.HttpClientRequest): ClientRequest.HttpClientRequest =>\n  makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    Option.none(),\n    self.headers,\n    self.body\n  )\n\n/** @internal */\nexport const setBody = dual<\n  (body: Body.HttpBody) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: Body.HttpBody) => ClientRequest.HttpClientRequest\n>(2, (self, body) => {\n  let headers = self.headers\n  if (body._tag === \"Empty\") {\n    headers = Headers.remove(Headers.remove(headers, \"Content-Type\"), \"Content-length\")\n  } else {\n    const contentType = body.contentType\n    if (contentType) {\n      headers = Headers.set(headers, \"content-type\", contentType)\n    }\n\n    const contentLength = body.contentLength\n    if (contentLength) {\n      headers = Headers.set(headers, \"content-length\", contentLength.toString())\n    }\n  }\n  return makeInternal(\n    self.method,\n    self.url,\n    self.urlParams,\n    self.hash,\n    headers,\n    body\n  )\n})\n\n/** @internal */\nexport const bodyUint8Array = dual<\n  (\n    body: Uint8Array,\n    contentType?: string\n  ) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: Uint8Array, contentType?: string) => ClientRequest.HttpClientRequest\n>(\n  (args) => isClientRequest(args[0]),\n  (self, body, contentType = \"application/octet-stream\") => setBody(self, internalBody.uint8Array(body, contentType))\n)\n\n/** @internal */\nexport const bodyText = dual<\n  (body: string, contentType?: string) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: string, contentType?: string) => ClientRequest.HttpClientRequest\n>(\n  (args) => isClientRequest(args[0]),\n  (self, body, contentType = \"text/plain\") => setBody(self, internalBody.text(body, contentType))\n)\n\n/** @internal */\nexport const bodyJson = dual<\n  (\n    body: unknown\n  ) => (self: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError>,\n  (\n    self: ClientRequest.HttpClientRequest,\n    body: unknown\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError>\n>(2, (self, body) => Effect.map(internalBody.json(body), (body) => setBody(self, body)))\n\n/** @internal */\nexport const bodyUnsafeJson = dual<\n  (body: unknown) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: unknown) => ClientRequest.HttpClientRequest\n>(2, (self, body) => setBody(self, internalBody.unsafeJson(body)))\n\n/** @internal */\nexport const bodyFile = dual<\n  (\n    path: string,\n    options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ) => (\n    self: ClientRequest.HttpClientRequest\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>,\n  (\n    self: ClientRequest.HttpClientRequest,\n    path: string,\n    options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>\n>(\n  (args) => isClientRequest(args[0]),\n  (self, path, options) => Effect.map(internalBody.file(path, options), (body) => setBody(self, body))\n)\n\n/** @internal */\nexport const bodyFileWeb = dual<\n  (file: Body.HttpBody.FileLike) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, file: Body.HttpBody.FileLike) => ClientRequest.HttpClientRequest\n>(2, (self, file) => setBody(self, internalBody.fileWeb(file)))\n\n/** @internal */\nexport const schemaBodyJson = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined): {\n  (\n    body: A\n  ): (self: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>\n  (\n    self: ClientRequest.HttpClientRequest,\n    body: A\n  ): Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>\n} => {\n  const encode = internalBody.jsonSchema(schema, options)\n  return dual<\n    (\n      body: A\n    ) => (\n      self: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>,\n    (\n      self: ClientRequest.HttpClientRequest,\n      body: A\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, Body.HttpBodyError, R>\n  >(2, (self, body) => Effect.map(encode(body), (body) => setBody(self, body)))\n}\n\n/** @internal */\nexport const bodyUrlParams = dual<\n  (input: UrlParams.Input) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, input: UrlParams.Input) => ClientRequest.HttpClientRequest\n>(2, (self, body) =>\n  setBody(\n    self,\n    internalBody.text(\n      UrlParams.toString(UrlParams.fromInput(body)),\n      \"application/x-www-form-urlencoded\"\n    )\n  ))\n\n/** @internal */\nexport const bodyFormData = dual<\n  (body: FormData) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (self: ClientRequest.HttpClientRequest, body: FormData) => ClientRequest.HttpClientRequest\n>(2, (self, body) => setBody(self, internalBody.formData(body)))\n\n/** @internal */\nexport const bodyStream = dual<\n  (\n    body: Stream.Stream<Uint8Array, unknown>,\n    options?: {\n      readonly contentType?: string | undefined\n      readonly contentLength?: number | undefined\n    }\n  ) => (self: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest,\n  (\n    self: ClientRequest.HttpClientRequest,\n    body: Stream.Stream<Uint8Array, unknown>,\n    options?: {\n      readonly contentType?: string | undefined\n      readonly contentLength?: number | undefined\n    }\n  ) => ClientRequest.HttpClientRequest\n>(\n  (args) => isClientRequest(args[0]),\n  (self, body, { contentLength, contentType = \"application/octet-stream\" } = {}) =>\n    setBody(self, internalBody.stream(body, contentType, contentLength))\n)\n"],"names":["Effect","dual","Inspectable","Option","pipeArguments","Redacted","Headers","UrlParams","internalBody","TypeId","Symbol","for","Proto","BaseProto","toJSON","_id","method","url","urlParams","hash","headers","redact","body","pipe","arguments","makeInternal","self","Object","create","isClientRequest","u","empty","none","make","options","modify","undefined","get","post","put","patch","del","head","result","setMethod","setUrl","setHeaders","setUrlParams","setHash","setBody","accept","acceptJson","setHeader","key","value","set","input","setAll","stringOrRedacted","basicAuth","username","password","btoa","bearerToken","token","mediaType","clone","URL","toString","fromInput","searchParams","some","slice","search","appendUrl","endsWith","startsWith","prependUrl","updateUrl","f","appendUrlParam","append","appendUrlParams","appendAll","setUrlParam","removeHash","_tag","remove","contentType","contentLength","bodyUint8Array","args","uint8Array","bodyText","text","bodyJson","map","json","bodyUnsafeJson","unsafeJson","bodyFile","path","file","bodyFileWeb","fileWeb","schemaBodyJson","schema","encode","jsonSchema","bodyUrlParams","bodyFormData","formData","bodyStream","stream"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,MAAM,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AACjD,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAM3C,OAAO,KAAKC,OAAO,MAAM,eAAe;AAIxC,OAAO,KAAKC,SAAS,MAAM,iBAAiB;AAC5C,OAAO,KAAKC,YAAY,MAAM,eAAe;;;;;;;;;;AAGtC,MAAMC,MAAM,GAAA,WAAA,GAAyBC,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAyB;AAEpH,MAAMC,KAAK,GAAG;IACZ,CAACH,MAAM,CAAA,EAAGA,MAAM;IAChB,0JAAGP,WAAW,CAACW,AAAS;IACxBC,MAAMA,CAAA;QACJ,OAAO;YACLC,GAAG,EAAE,oCAAoC;YACzCC,MAAM,EAAE,IAAI,CAACA,MAAM;YACnBC,GAAG,EAAE,IAAI,CAACA,GAAG;YACbC,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBC,IAAI,EAAE,IAAI,CAACA,IAAI;YACfC,OAAO,EAAElB,WAAW,CAACmB,wJAAAA,AAAM,EAAC,IAAI,CAACD,OAAO,CAAC;YACzCE,IAAI,EAAE,IAAI,CAACA,IAAI,CAACR,MAAM;SACvB;IACH,CAAC;IACDS,IAAIA,CAAA;QACF,+JAAOnB,gBAAAA,AAAa,EAAC,IAAI,EAAEoB,SAAS,CAAC;IACvC;CACD;AAED,SAASC,YAAYA,CACnBT,MAAkB,EAClBC,GAAW,EACXC,SAA8B,EAC9BC,IAA2B,EAC3BC,OAAwB,EACxBE,IAAmB;IAEnB,MAAMI,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAChB,KAAK,CAAC;IACjCc,IAAI,CAACV,MAAM,GAAGA,MAAM;IACpBU,IAAI,CAACT,GAAG,GAAGA,GAAG;IACdS,IAAI,CAACR,SAAS,GAAGA,SAAS;IAC1BQ,IAAI,CAACP,IAAI,GAAGA,IAAI;IAChBO,IAAI,CAACN,OAAO,GAAGA,OAAO;IACtBM,IAAI,CAACJ,IAAI,GAAGA,IAAI;IAChB,OAAOI,IAAI;AACb;AAGO,MAAMG,eAAe,IAAIC,CAAU,GACxC,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,IAAIrB,MAAM,IAAIqB,CAAC;AAG7C,MAAMC,KAAK,GAAA,WAAA,GAAoCN,YAAY,CAChE,KAAK,EACL,EAAE,EACFlB,SAAS,CAACwB,iKAAK,EAAA,WAAA,yJACf5B,MAAM,CAAC6B,AAAI,EAAE,oKACb1B,OAAO,CAACyB,AAAK,gLACbvB,QAAkB,CACnB,GADa,CAACuB;AAIR,MAAME,IAAI,IAA0BjB,MAAS,GACpD,CACEC,GAAiB,EACjBiB,OAA+F,GAE/FC,MAAM,CAACJ,KAAK,EAAE;YACZf,MAAM;YACNC,GAAG;YACH,GAAIiB,OAAO,IAAIE,SAAS;SACzB,CAAC;AAGG,MAAMC,GAAG,GAAA,WAAA,GAAGJ,IAAI,CAAC,KAAK,CAAC;AAGvB,MAAMK,IAAI,GAAA,WAAA,GAAGL,IAAI,CAAC,MAAM,CAAC;AAGzB,MAAMM,GAAG,GAAA,WAAA,GAAGN,IAAI,CAAC,KAAK,CAAC;AAGvB,MAAMO,KAAK,GAAA,WAAA,GAAGP,IAAI,CAAC,OAAO,CAAC;AAG3B,MAAMQ,GAAG,GAAA,WAAA,GAAGR,IAAI,CAAC,QAAQ,CAAC;AAG1B,MAAMS,IAAI,GAAA,WAAA,GAAGT,IAAI,CAAC,MAAM,CAAC;AAGzB,MAAMC,OAAO,GAAA,WAAA,GAAGD,IAAI,CAAC,SAAS,CAAC;AAG/B,MAAME,MAAM,GAAA,WAAA,2JAAGlC,OAAAA,AAAI,EAGxB,CAAC,EAAE,CAACyB,IAAI,EAAEQ,OAAO,KAAI;IACrB,IAAIS,MAAM,GAAGjB,IAAI;IAEjB,IAAIQ,OAAO,CAAClB,MAAM,EAAE;QAClB2B,MAAM,GAAGC,SAAS,CAACD,MAAM,EAAET,OAAO,CAAClB,MAAM,CAAC;IAC5C;IACA,IAAIkB,OAAO,CAACjB,GAAG,EAAE;QACf0B,MAAM,GAAGE,MAAM,CAACF,MAAM,EAAET,OAAO,CAACjB,GAAG,CAAC;IACtC;IACA,IAAIiB,OAAO,CAACd,OAAO,EAAE;QACnBuB,MAAM,GAAGG,UAAU,CAACH,MAAM,EAAET,OAAO,CAACd,OAAO,CAAC;IAC9C;IACA,IAAIc,OAAO,CAAChB,SAAS,EAAE;QACrByB,MAAM,GAAGI,YAAY,CAACJ,MAAM,EAAET,OAAO,CAAChB,SAAS,CAAC;IAClD;IACA,IAAIgB,OAAO,CAACf,IAAI,EAAE;QAChBwB,MAAM,GAAGK,OAAO,CAACL,MAAM,EAAET,OAAO,CAACf,IAAI,CAAC;IACxC;IACA,IAAIe,OAAO,CAACZ,IAAI,EAAE;QAChBqB,MAAM,GAAGM,OAAO,CAACN,MAAM,EAAET,OAAO,CAACZ,IAAI,CAAC;IACxC;IACA,IAAIY,OAAO,CAACgB,MAAM,EAAE;QAClBP,MAAM,GAAGO,MAAM,CAACP,MAAM,EAAET,OAAO,CAACgB,MAAM,CAAC;IACzC;IACA,IAAIhB,OAAO,CAACiB,UAAU,EAAE;QACtBR,MAAM,GAAGQ,UAAU,CAACR,MAAM,CAAC;IAC7B;IAEA,OAAOA,MAAM;AACf,CAAC,CAAC;AAGK,MAAMS,SAAS,GAAA,WAAA,2JAAGnD,OAAAA,AAAI,EAG3B,CAAC,EAAE,CAACyB,IAAI,EAAE2B,GAAG,EAAEC,KAAK,GACpB7B,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,EACRS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,uKACTb,MAAQiD,AAAG,CAAJ,CAACA,AAAI7B,IAAI,CAACN,OAAO,EAAEiC,GAAG,EAAEC,KAAK,CAAC,EACrC5B,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAMwB,UAAU,GAAA,WAAA,2JAAG7C,OAAAA,AAAI,EAG5B,CAAC,EAAE,CAACyB,IAAI,EAAE8B,KAAK,GACf/B,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,EACRS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,EACTb,OAAO,CAACmD,sKAAAA,AAAM,EAAC/B,IAAI,CAACN,OAAO,EAAEoC,KAAK,CAAC,EACnC9B,IAAI,CAACJ,IAAI,CACV,CAAC;AAEJ,MAAMoC,gBAAgB,IAAIJ,KAAiC,GACzD,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGjD,QAAQ,CAACiD,uJAAAA,AAAK,EAACA,KAAK,CAAC;AAGpD,MAAMK,SAAS,GAAA,WAAA,2JAAG1D,OAAAA,AAAI,EAW3B,CAAC,EACD,CAACyB,IAAI,EAAEkC,QAAQ,EAAEC,QAAQ,GACvBT,SAAS,CAAC1B,IAAI,EAAE,eAAe,EAAE,CAAA,MAAA,EAASoC,IAAI,CAAC,GAAGJ,gBAAgB,CAACE,QAAQ,CAAC,CAAA,CAAA,EAAIF,gBAAgB,CAACG,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CACnH;AAGM,MAAME,WAAW,GAAA,WAAA,GAAG9D,+JAAAA,AAAI,EAG7B,CAAC,EAAE,CAACyB,IAAI,EAAEsC,KAAK,GAAKZ,SAAS,CAAC1B,IAAI,EAAE,eAAe,EAAE,CAAA,OAAA,EAAUgC,gBAAgB,CAACM,KAAK,CAAC,EAAE,CAAC,CAAC;AAGrF,MAAMd,MAAM,GAAA,WAAA,GAAGjD,+JAAAA,AAAI,EAGxB,CAAC,EAAE,CAACyB,IAAI,EAAEuC,SAAS,GAAKb,SAAS,CAAC1B,IAAI,EAAE,QAAQ,EAAEuC,SAAS,CAAC,CAAC;AAGxD,MAAMd,UAAU,GAAA,WAAA,GAAGD,MAAM,CAAC,kBAAkB,CAAC;AAG7C,MAAMN,SAAS,GAAA,WAAA,GAAG3C,+JAAAA,AAAI,EAG3B,CAAC,EAAE,CAACyB,IAAI,EAAEV,MAAM,GAChBS,YAAY,CACVT,MAAM,EACNU,IAAI,CAACT,GAAG,EACRS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAMuB,MAAM,GAAA,WAAA,2JAAG5C,OAAAA,AAAI,EAGxB,CAAC,EAAE,CAACyB,IAAI,EAAET,GAAG,KAAI;IACjB,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAOQ,YAAY,CACjBC,IAAI,CAACV,MAAM,EACXC,GAAG,EACHS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV;IACH;IACA,MAAM4C,KAAK,GAAG,IAAIC,GAAG,CAAClD,GAAG,CAACmD,QAAQ,EAAE,CAAC;IACrC,MAAMlD,SAAS,0KAAGX,SAAS,CAAC8D,EAAAA,AAAS,EAACH,KAAK,CAACI,YAAY,CAAC;IACzD,MAAMnD,IAAI,GAAG+C,KAAK,CAAC/C,IAAI,IAAGhB,MAAM,CAACoE,qJAAAA,AAAI,EAACL,KAAK,CAAC/C,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC,CAAC,yJAAGrE,MAAM,CAAC6B,AAAI,EAAE;IAC1EkC,KAAK,CAACO,MAAM,GAAG,EAAE;IACjBP,KAAK,CAAC/C,IAAI,GAAG,EAAE;IACf,OAAOM,YAAY,CACjBC,IAAI,CAACV,MAAM,EACXkD,KAAK,CAACE,QAAQ,EAAE,EAChBlD,SAAS,EACTC,IAAI,EACJO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV;AACH,CAAC,CAAC;AAGK,MAAMoD,SAAS,GAAA,WAAA,2JAAGzE,OAAAA,AAAI,EAG3B,CAAC,EAAE,CAACyB,IAAI,EAAET,GAAG,GACbQ,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,CAAC0D,QAAQ,CAAC,GAAG,CAAC,IAAI1D,GAAG,CAAC2D,UAAU,CAAC,GAAG,CAAC,GAC3ClD,IAAI,CAACT,GAAG,GAAGA,GAAG,CAACuD,KAAK,CAAC,CAAC,CAAC,GACvB9C,IAAI,CAACT,GAAG,GAAGA,GAAG,EAChBS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAMuD,UAAU,GAAA,WAAA,2JAAG5E,OAAAA,AAAI,EAG5B,CAAC,EAAE,CAACyB,IAAI,EAAET,GAAG,GACbQ,YAAY,CACVC,IAAI,CAACV,MAAM,EACXC,GAAG,CAAC0D,QAAQ,CAAC,GAAG,CAAC,IAAIjD,IAAI,CAACT,GAAG,CAAC2D,UAAU,CAAC,GAAG,CAAC,GAC3C3D,GAAG,GAAGS,IAAI,CAACT,GAAG,CAACuD,KAAK,CAAC,CAAC,CAAC,GACvBvD,GAAG,GAAGS,IAAI,CAACT,GAAG,EAChBS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAMwD,SAAS,GAAA,WAAA,GAAG7E,+JAAAA,AAAI,EAG3B,CAAC,EAAE,CAACyB,IAAI,EAAEqD,CAAC,GACXtD,YAAY,CACVC,IAAI,CAACV,MAAM,EACX+D,CAAC,CAACrD,IAAI,CAACT,GAAG,CAAC,EACXS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAM0D,cAAc,GAAA,WAAA,2JAAG/E,OAAAA,AAAI,EAGhC,CAAC,EAAE,CAACyB,IAAI,EAAE2B,GAAG,EAAEC,KAAK,GACpB7B,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,yKACRV,SAAS,AAAC0E,AAAM,CAANA,CAAOvD,IAAI,CAACR,SAAS,EAAEmC,GAAG,EAAEC,KAAK,CAAC,EAC5C5B,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAM4D,eAAe,GAAA,WAAA,2JAAGjF,OAAAA,AAAI,EAGjC,CAAC,EAAE,CAACyB,IAAI,EAAE8B,KAAK,GACf/B,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,yKACRV,SAAS,CAAC4E,EAAAA,AAAS,EAACzD,IAAI,CAACR,SAAS,EAAEsC,KAAK,CAAC,EAC1C9B,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAM8D,WAAW,GAAA,WAAA,2JAAGnF,OAAAA,AAAI,EAG7B,CAAC,EAAE,CAACyB,IAAI,EAAE2B,GAAG,EAAEC,KAAK,GACpB7B,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,yKACRV,MAAUgD,AAAG,EAAC7B,CAAL,CAAC6B,EAAQ,CAACrC,SAAS,EAAEmC,GAAG,EAAEC,KAAK,CAAC,EACzC5B,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAMyB,YAAY,GAAA,WAAA,2JAAG9C,OAAAA,AAAI,EAG9B,CAAC,EAAE,CAACyB,IAAI,EAAE8B,KAAK,GACf/B,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,MACRV,SAAS,CAACkD,kKAAAA,AAAM,EAAC/B,IAAI,CAACR,SAAS,EAAEsC,KAAK,CAAC,EACvC9B,IAAI,CAACP,IAAI,EACTO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAM0B,OAAO,GAAA,WAAA,0JAAG/C,QAAAA,AAAI,EAGzB,CAAC,EAAE,CAACyB,IAAI,EAAEP,IAAI,GACdM,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,EACRS,IAAI,CAACR,SAAS,wJACdf,MAAM,CAACoE,AAAI,EAACpD,IAAI,CAAC,EACjBO,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV,CAAC;AAGG,MAAM+D,UAAU,IAAI3D,IAAqC,GAC9DD,YAAY,CACVC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,EACRS,IAAI,CAACR,SAAS,wJACdf,MAAM,CAAC6B,AAAI,EAAE,GACbN,IAAI,CAACN,OAAO,EACZM,IAAI,CAACJ,IAAI,CACV;AAGI,MAAM2B,OAAO,GAAA,WAAA,IAAGhD,8JAAAA,AAAI,EAGzB,CAAC,EAAE,CAACyB,IAAI,EAAEJ,IAAI,KAAI;IAClB,IAAIF,OAAO,GAAGM,IAAI,CAACN,OAAO;IAC1B,IAAIE,IAAI,CAACgE,IAAI,KAAK,OAAO,EAAE;QACzBlE,OAAO,wKAAGd,OAAO,CAACiF,CAAAA,AAAM,MAACjF,OAAO,CAACiF,kKAAAA,AAAM,EAACnE,OAAO,EAAE,cAAc,CAAC,EAAE,gBAAgB,CAAC;IACrF,CAAC,MAAM;QACL,MAAMoE,WAAW,GAAGlE,IAAI,CAACkE,WAAW;QACpC,IAAIA,WAAW,EAAE;YACfpE,OAAO,OAAGd,OAAO,CAACiD,+JAAAA,AAAG,EAACnC,OAAO,EAAE,cAAc,EAAEoE,WAAW,CAAC;QAC7D;QAEA,MAAMC,aAAa,GAAGnE,IAAI,CAACmE,aAAa;QACxC,IAAIA,aAAa,EAAE;YACjBrE,OAAO,IAAGd,OAAO,CAACiD,kKAAAA,AAAG,EAACnC,OAAO,EAAE,gBAAgB,EAAEqE,aAAa,CAACrB,QAAQ,EAAE,CAAC;QAC5E;IACF;IACA,OAAO3C,YAAY,CACjBC,IAAI,CAACV,MAAM,EACXU,IAAI,CAACT,GAAG,EACRS,IAAI,CAACR,SAAS,EACdQ,IAAI,CAACP,IAAI,EACTC,OAAO,EACPE,IAAI,CACL;AACH,CAAC,CAAC;AAGK,MAAMoE,cAAc,GAAA,WAAA,OAAGzF,2JAAAA,AAAI,GAO/B0F,IAAI,GAAK9D,eAAe,CAAC8D,IAAI,CAAC,CAAC,CAAC,CAAC,EAClC,CAACjE,IAAI,EAAEJ,IAAI,EAAEkE,WAAW,GAAG,0BAA0B,GAAKvC,OAAO,CAACvB,IAAI,GAAElB,YAAY,CAACoF,iLAAAA,AAAU,EAACtE,IAAI,EAAEkE,WAAW,CAAC,CAAC,CACpH;AAGM,MAAMK,QAAQ,GAAA,WAAA,2JAAG5F,OAAAA,AAAI,EAIzB0F,IAAI,IAAK9D,eAAe,CAAC8D,IAAI,CAAC,CAAC,CAAC,CAAC,EAClC,CAACjE,IAAI,EAAEJ,IAAI,EAAEkE,WAAW,GAAG,YAAY,GAAKvC,OAAO,CAACvB,IAAI,oLAAElB,OAAasF,AAAI,EAACxE,GAAN,CAACwE,AAAS,EAAEN,WAAW,CAAC,CAAC,CAChG;AAGM,MAAMO,QAAQ,GAAA,WAAA,2JAAG9F,OAAAA,AAAI,EAQ1B,CAAC,EAAE,CAACyB,IAAI,EAAEJ,IAAI,yJAAKtB,MAAU,AAAJ,AAACgG,CAAAA,KAAIxF,YAAY,CAACyF,wKAAAA,AAAI,EAAC3E,IAAI,CAAC,GAAGA,IAAI,GAAK2B,OAAO,CAACvB,IAAI,EAAEJ,IAAI,CAAC,CAAC,CAAC;AAGjF,MAAM4E,cAAc,GAAA,WAAA,OAAGjG,2JAAI,AAAJA,EAG5B,CAAC,EAAE,CAACyB,IAAI,EAAEJ,IAAI,GAAK2B,OAAO,CAACvB,IAAI,oLAAElB,YAAY,CAAC2F,AAAU,EAAC7E,IAAI,CAAC,CAAC,CAAC;AAG3D,MAAM8E,QAAQ,GAAA,WAAA,GAAGnG,+JAAAA,AAAI,GAazB0F,IAAI,GAAK9D,eAAe,CAAC8D,IAAI,CAAC,CAAC,CAAC,CAAC,EAClC,CAACjE,IAAI,EAAE2E,IAAI,EAAEnE,OAAO,IAAKlC,MAAM,CAACgG,oJAAG,AAAHA,oLAAIxF,OAAa8F,AAAI,EAACD,GAAN,CAACC,AAAS,EAAEpE,OAAO,CAAC,GAAGZ,IAAI,GAAK2B,OAAO,CAACvB,IAAI,EAAEJ,IAAI,CAAC,CAAC,CACrG;AAGM,MAAMiF,WAAW,GAAA,WAAA,2JAAGtG,OAAAA,AAAI,EAG7B,CAAC,EAAE,CAACyB,IAAI,EAAE4E,IAAI,GAAKrD,OAAO,CAACvB,IAAI,GAAElB,YAAY,CAACgG,8KAAAA,AAAO,EAACF,IAAI,CAAC,CAAC,CAAC;AAGxD,MAAMG,cAAc,GAAGA,CAAUC,MAA8B,EAAExE,OAAkC,KAQtG;IACF,MAAMyE,MAAM,qLAAGnG,YAAY,CAACoG,AAAU,EAACF,MAAM,EAAExE,OAAO,CAAC;IACvD,+JAAOjC,OAAAA,AAAI,EAUT,CAAC,EAAE,CAACyB,IAAI,EAAEJ,IAAI,yJAAKtB,MAAU,AAAJ,AAACgG,CAAAA,CAAIW,MAAM,CAACrF,IAAI,CAAC,GAAGA,IAAI,GAAK2B,OAAO,CAACvB,IAAI,EAAEJ,IAAI,CAAC,CAAC,CAAC;AAC/E,CAAC;AAGM,MAAMuF,aAAa,GAAA,WAAA,2JAAG5G,OAAI,AAAJA,EAG3B,CAAC,EAAE,CAACyB,IAAI,EAAEJ,IAAI,GACd2B,OAAO,CACLvB,IAAI,oLACJlB,OAAasF,AAAI,KAAL,CAACA,mKACXvF,SAAS,CAAC6D,CAAQ,AAARA,yKAAS7D,SAAS,CAAC8D,EAAAA,AAAS,EAAC/C,IAAI,CAAC,CAAC,EAC7C,mCAAmC,CACpC,CACF,CAAC;AAGG,MAAMwF,YAAY,GAAA,WAAA,IAAG7G,8JAAI,AAAJA,EAG1B,CAAC,EAAE,CAACyB,IAAI,EAAEJ,IAAI,GAAK2B,OAAO,CAACvB,IAAI,oLAAElB,WAAauG,AAAQ,CAAT,CAACA,AAASzF,IAAI,CAAC,CAAC,CAAC;AAGzD,MAAM0F,UAAU,GAAA,WAAA,2JAAG/G,OAAAA,AAAI,GAiB3B0F,IAAI,GAAK9D,eAAe,CAAC8D,IAAI,CAAC,CAAC,CAAC,CAAC,EAClC,CAACjE,IAAI,EAAEJ,IAAI,EAAE,EAAEmE,aAAa,EAAED,WAAW,GAAG,0BAAA,EAA4B,GAAG,CAAA,CAAE,GAC3EvC,OAAO,CAACvB,IAAI,oLAAElB,SAAayG,AAAM,EAAC3F,CAAR,CAAC2F,EAAW,EAAEzB,WAAW,EAAEC,aAAa,CAAC,CAAC,CACvE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4422, "column": 0}, "map": {"version":3,"file":"httpClientResponse.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpClientResponse.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport { dual } from \"effect/Function\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Stream from \"effect/Stream\"\nimport type { Unify } from \"effect/Unify\"\nimport * as Cookies from \"../Cookies.js\"\nimport * as Headers from \"../Headers.js\"\nimport * as Error from \"../HttpClientError.js\"\nimport type * as ClientRequest from \"../HttpClientRequest.js\"\nimport type * as ClientResponse from \"../HttpClientResponse.js\"\nimport * as IncomingMessage from \"../HttpIncomingMessage.js\"\nimport * as UrlParams from \"../UrlParams.js\"\n\n/** @internal */\nexport const TypeId: ClientResponse.TypeId = Symbol.for(\"@effect/platform/HttpClientResponse\") as ClientResponse.TypeId\n\n/** @internal */\nexport const fromWeb = (\n  request: ClientRequest.HttpClientRequest,\n  source: globalThis.Response\n): ClientResponse.HttpClientResponse => new ClientResponseImpl(request, source)\n\nclass ClientResponseImpl extends Inspectable.Class implements ClientResponse.HttpClientResponse {\n  readonly [IncomingMessage.TypeId]: IncomingMessage.TypeId\n  readonly [TypeId]: ClientResponse.TypeId\n\n  constructor(\n    readonly request: ClientRequest.HttpClientRequest,\n    private readonly source: globalThis.Response\n  ) {\n    super()\n    this[IncomingMessage.TypeId] = IncomingMessage.TypeId\n    this[TypeId] = TypeId\n  }\n\n  toJSON(): unknown {\n    return IncomingMessage.inspect(this, {\n      _id: \"@effect/platform/HttpClientResponse\",\n      request: this.request.toJSON(),\n      status: this.status\n    })\n  }\n\n  get status(): number {\n    return this.source.status\n  }\n\n  get headers(): Headers.Headers {\n    return Headers.fromInput(this.source.headers)\n  }\n\n  cachedCookies?: Cookies.Cookies\n  get cookies(): Cookies.Cookies {\n    if (this.cachedCookies) {\n      return this.cachedCookies\n    }\n    return this.cachedCookies = Cookies.fromSetCookie(this.source.headers.getSetCookie())\n  }\n\n  get remoteAddress(): Option.Option<string> {\n    return Option.none()\n  }\n\n  get stream(): Stream.Stream<Uint8Array, Error.ResponseError> {\n    return this.source.body\n      ? Stream.fromReadableStream(() => this.source.body!, (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        }))\n      : Stream.fail(\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"EmptyBody\",\n          description: \"can not create stream from empty body\"\n        })\n      )\n  }\n\n  get json(): Effect.Effect<unknown, Error.ResponseError> {\n    return Effect.tryMap(this.text, {\n      try: (text) => text === \"\" ? null : JSON.parse(text) as unknown,\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    })\n  }\n\n  private textBody?: Effect.Effect<string, Error.ResponseError>\n  get text(): Effect.Effect<string, Error.ResponseError> {\n    return this.textBody ??= Effect.tryPromise({\n      try: () => this.source.text(),\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    }).pipe(Effect.cached, Effect.runSync)\n  }\n\n  get urlParamsBody(): Effect.Effect<UrlParams.UrlParams, Error.ResponseError> {\n    return Effect.flatMap(this.text, (_) =>\n      Effect.try({\n        try: () => UrlParams.fromInput(new URLSearchParams(_)),\n        catch: (cause) =>\n          new Error.ResponseError({\n            request: this.request,\n            response: this,\n            reason: \"Decode\",\n            cause\n          })\n      }))\n  }\n\n  private formDataBody?: Effect.Effect<FormData, Error.ResponseError>\n  get formData(): Effect.Effect<FormData, Error.ResponseError> {\n    return this.formDataBody ??= Effect.tryPromise({\n      try: () => this.source.formData(),\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    }).pipe(Effect.cached, Effect.runSync)\n  }\n\n  private arrayBufferBody?: Effect.Effect<ArrayBuffer, Error.ResponseError>\n  get arrayBuffer(): Effect.Effect<ArrayBuffer, Error.ResponseError> {\n    return this.arrayBufferBody ??= Effect.tryPromise({\n      try: () => this.source.arrayBuffer(),\n      catch: (cause) =>\n        new Error.ResponseError({\n          request: this.request,\n          response: this,\n          reason: \"Decode\",\n          cause\n        })\n    }).pipe(Effect.cached, Effect.runSync)\n  }\n}\n\n/** @internal */\nexport const schemaJson = <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n    readonly body?: unknown | undefined\n  },\n  A\n>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return (self: ClientResponse.HttpClientResponse): Effect.Effect<A, Error.ResponseError | ParseResult.ParseError, R> =>\n    Effect.flatMap(\n      self.json,\n      (body) =>\n        parse({\n          status: self.status,\n          headers: self.headers,\n          body\n        })\n    )\n}\n\n/** @internal */\nexport const schemaNoBody = <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n  },\n  A\n>(schema: Schema.Schema<A, I, R>, options?: ParseOptions | undefined) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return (self: ClientResponse.HttpClientResponse): Effect.Effect<A, ParseResult.ParseError, R> =>\n    parse({\n      status: self.status,\n      headers: self.headers\n    })\n}\n\n/** @internal */\nexport const stream = <E, R>(effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>) =>\n  Stream.unwrap(Effect.map(effect, (_) => _.stream))\n\n/** @internal */\nexport const matchStatus = dual<\n  <\n    const Cases extends {\n      readonly [status: number]: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"2xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"3xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"4xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"5xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly orElse: (_: ClientResponse.HttpClientResponse) => any\n    }\n  >(\n    cases: Cases\n  ) => (self: ClientResponse.HttpClientResponse) => Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never,\n  <\n    const Cases extends {\n      readonly [status: number]: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"2xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"3xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"4xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly \"5xx\"?: (_: ClientResponse.HttpClientResponse) => any\n      readonly orElse: (_: ClientResponse.HttpClientResponse) => any\n    }\n  >(\n    self: ClientResponse.HttpClientResponse,\n    cases: Cases\n  ) => Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never\n>(2, (self, cases) => {\n  const status = self.status\n  if (cases[status]) {\n    return cases[status](self)\n  } else if (status >= 200 && status < 300 && cases[\"2xx\"]) {\n    return cases[\"2xx\"](self)\n  } else if (status >= 300 && status < 400 && cases[\"3xx\"]) {\n    return cases[\"3xx\"](self)\n  } else if (status >= 400 && status < 500 && cases[\"4xx\"]) {\n    return cases[\"4xx\"](self)\n  } else if (status >= 500 && status < 600 && cases[\"5xx\"]) {\n    return cases[\"5xx\"](self)\n  }\n  return cases.orElse(self)\n})\n\n/** @internal */\nexport const filterStatus = dual<\n  (\n    f: (status: number) => boolean\n  ) => (\n    self: ClientResponse.HttpClientResponse\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.ResponseError>,\n  (\n    self: ClientResponse.HttpClientResponse,\n    f: (status: number) => boolean\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.ResponseError>\n>(\n  2,\n  (self, f) =>\n    Effect.suspend(() =>\n      f(self.status) ? Effect.succeed(self) : Effect.fail(\n        new Error.ResponseError({\n          response: self,\n          request: self.request,\n          reason: \"StatusCode\",\n          description: \"invalid status code\"\n        })\n      )\n    )\n)\n\n/** @internal */\nexport const filterStatusOk = (\n  self: ClientResponse.HttpClientResponse\n): Effect.Effect<ClientResponse.HttpClientResponse, Error.ResponseError> =>\n  self.status >= 200 && self.status < 300 ? Effect.succeed(self) : Effect.fail(\n    new Error.ResponseError({\n      response: self,\n      request: self.request,\n      reason: \"StatusCode\",\n      description: \"non 2xx status code\"\n    })\n  )\n"],"names":["Effect","dual","Inspectable","Option","Schema","Stream","Cookies","Headers","Error","IncomingMessage","UrlParams","TypeId","Symbol","for","fromWeb","request","source","ClientResponseImpl","Class","constructor","toJSON","inspect","_id","status","headers","fromInput","cachedCookies","cookies","fromSetCookie","getSetCookie","remoteAddress","none","stream","body","fromReadableStream","cause","ResponseError","response","reason","fail","description","json","tryMap","text","try","JSON","parse","catch","textBody","tryPromise","pipe","cached","runSync","urlParamsBody","flatMap","_","URLSearchParams","formDataBody","formData","arrayBufferBody","arrayBuffer","schemaJson","schema","options","decodeUnknown","self","schemaNoBody","effect","unwrap","map","matchStatus","cases","orElse","filterStatus","f","suspend","succeed","filterStatusOk"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4612, "column": 0}, "map": {"version":3,"file":"httpClient.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpClient.ts"],"sourcesContent":["import * as Cause from \"effect/Cause\"\nimport * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Exit from \"effect/Exit\"\nimport type * as Fiber from \"effect/Fiber\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { constFalse, dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Layer from \"effect/Layer\"\nimport { pipeArguments } from \"effect/Pipeable\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Ref from \"effect/Ref\"\nimport * as Schedule from \"effect/Schedule\"\nimport * as Stream from \"effect/Stream\"\nimport type { NoExcessProperties, NoInfer } from \"effect/Types\"\nimport * as Cookies from \"../Cookies.js\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Client from \"../HttpClient.js\"\nimport * as Error from \"../HttpClientError.js\"\nimport type * as ClientRequest from \"../HttpClientRequest.js\"\nimport type * as ClientResponse from \"../HttpClientResponse.js\"\nimport * as IncomingMessage from \"../HttpIncomingMessage.js\"\nimport * as TraceContext from \"../HttpTraceContext.js\"\nimport * as UrlParams from \"../UrlParams.js\"\nimport * as internalRequest from \"./httpClientRequest.js\"\nimport * as internalResponse from \"./httpClientResponse.js\"\n\n/** @internal */\nexport const TypeId: Client.TypeId = Symbol.for(\n  \"@effect/platform/HttpClient\"\n) as Client.TypeId\n\n/** @internal */\nexport const tag = Context.GenericTag<Client.HttpClient>(\"@effect/platform/HttpClient\")\n\n/** @internal */\nexport const currentTracerDisabledWhen = globalValue(\n  Symbol.for(\"@effect/platform/HttpClient/tracerDisabledWhen\"),\n  () => FiberRef.unsafeMake<Predicate.Predicate<ClientRequest.HttpClientRequest>>(constFalse)\n)\n\n/** @internal */\nexport const withTracerDisabledWhen = dual<\n  (\n    predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>\n  ) => Client.HttpClient.With<E, R>\n>(2, (self, pred) => transformResponse(self, Effect.locally(currentTracerDisabledWhen, pred)))\n\n/** @internal */\nexport const currentTracerPropagation = globalValue(\n  Symbol.for(\"@effect/platform/HttpClient/currentTracerPropagation\"),\n  () => FiberRef.unsafeMake(true)\n)\n\n/** @internal */\nexport const withTracerPropagation = dual<\n  (\n    enabled: boolean\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    enabled: boolean\n  ) => Client.HttpClient.With<E, R>\n>(2, (self, enabled) => transformResponse(self, Effect.locally(currentTracerPropagation, enabled)))\n\n/** @internal */\nexport const SpanNameGenerator = Context.Reference<Client.SpanNameGenerator>()(\n  \"@effect/platform/HttpClient/SpanNameGenerator\",\n  {\n    defaultValue: () => (request: ClientRequest.HttpClientRequest) => `http.client ${request.method}`\n  }\n)\n\n/** @internal */\nexport const withSpanNameGenerator = dual<\n  (\n    f: (request: ClientRequest.HttpClientRequest) => string\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    f: (request: ClientRequest.HttpClientRequest) => string\n  ) => Client.HttpClient.With<E, R>\n>(2, (self, f) => transformResponse(self, Effect.provideService(SpanNameGenerator, f)))\n\nconst ClientProto = {\n  [TypeId]: TypeId,\n  pipe() {\n    return pipeArguments(this, arguments)\n  },\n  ...Inspectable.BaseProto,\n  toJSON() {\n    return {\n      _id: \"@effect/platform/HttpClient\"\n    }\n  },\n  get(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoBody) {\n    return this.execute(internalRequest.get(url, options))\n  },\n  head(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoBody) {\n    return this.execute(internalRequest.head(url, options))\n  },\n  post(this: Client.HttpClient, url: string | URL, options: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.post(url, options))\n  },\n  put(this: Client.HttpClient, url: string | URL, options: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.put(url, options))\n  },\n  patch(this: Client.HttpClient, url: string | URL, options: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.patch(url, options))\n  },\n  del(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoUrl) {\n    return this.execute(internalRequest.del(url, options))\n  },\n  options(this: Client.HttpClient, url: string | URL, options?: ClientRequest.Options.NoBody) {\n    return this.execute(internalRequest.options(url, options))\n  }\n}\n\nconst isClient = (u: unknown): u is Client.HttpClient.With<unknown, unknown> => Predicate.hasProperty(u, TypeId)\n\ninterface HttpClientImpl<E, R> extends Client.HttpClient.With<E, R> {\n  readonly preprocess: Client.HttpClient.Preprocess<E, R>\n  readonly postprocess: Client.HttpClient.Postprocess<E, R>\n}\n\n/** @internal */\nexport const makeWith = <E2, R2, E, R>(\n  postprocess: (\n    request: Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n  preprocess: Client.HttpClient.Preprocess<E2, R2>\n): Client.HttpClient.With<E, R> => {\n  const self = Object.create(ClientProto)\n  self.preprocess = preprocess\n  self.postprocess = postprocess\n  self.execute = function(request: ClientRequest.HttpClientRequest) {\n    return postprocess(preprocess(request))\n  }\n  return self\n}\n\nconst responseRegistry = globalValue(\n  \"@effect/platform/HttpClient/responseRegistry\",\n  () => {\n    if (\"FinalizationRegistry\" in globalThis && globalThis.FinalizationRegistry) {\n      const registry = new FinalizationRegistry((controller: AbortController) => {\n        controller.abort()\n      })\n      return {\n        register(response: ClientResponse.HttpClientResponse, controller: AbortController) {\n          registry.register(response, controller, response)\n        },\n        unregister(response: ClientResponse.HttpClientResponse) {\n          registry.unregister(response)\n        }\n      }\n    }\n\n    const timers = new Map<ClientResponse.HttpClientResponse, any>()\n    return {\n      register(response: ClientResponse.HttpClientResponse, controller: AbortController) {\n        timers.set(response, setTimeout(() => controller.abort(), 5000))\n      },\n      unregister(response: ClientResponse.HttpClientResponse) {\n        const timer = timers.get(response)\n        if (timer === undefined) return\n        clearTimeout(timer)\n        timers.delete(response)\n      }\n    }\n  }\n)\n\n/** @internal */\nexport const make = (\n  f: (\n    request: ClientRequest.HttpClientRequest,\n    url: URL,\n    signal: AbortSignal,\n    fiber: Fiber.RuntimeFiber<ClientResponse.HttpClientResponse, Error.HttpClientError>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.HttpClientError>\n): Client.HttpClient =>\n  makeWith((effect) =>\n    Effect.flatMap(effect, (request) =>\n      Effect.withFiberRuntime((fiber) => {\n        const controller = new AbortController()\n        const urlResult = UrlParams.makeUrl(request.url, request.urlParams, request.hash)\n        if (urlResult._tag === \"Left\") {\n          return Effect.fail(new Error.RequestError({ request, reason: \"InvalidUrl\", cause: urlResult.left }))\n        }\n        const url = urlResult.right\n        const tracerDisabled = !fiber.getFiberRef(FiberRef.currentTracerEnabled) ||\n          fiber.getFiberRef(currentTracerDisabledWhen)(request)\n        if (tracerDisabled) {\n          return Effect.uninterruptibleMask((restore) =>\n            Effect.matchCauseEffect(restore(f(request, url, controller.signal, fiber)), {\n              onSuccess(response) {\n                responseRegistry.register(response, controller)\n                return Effect.succeed(new InterruptibleResponse(response, controller))\n              },\n              onFailure(cause) {\n                if (Cause.isInterrupted(cause)) {\n                  controller.abort()\n                }\n                return Effect.failCause(cause)\n              }\n            })\n          )\n        }\n        const nameGenerator = Context.get(fiber.currentContext, SpanNameGenerator)\n        return Effect.useSpan(\n          nameGenerator(request),\n          { kind: \"client\", captureStackTrace: false },\n          (span) => {\n            span.attribute(\"http.request.method\", request.method)\n            span.attribute(\"server.address\", url.origin)\n            if (url.port !== \"\") {\n              span.attribute(\"server.port\", +url.port)\n            }\n            span.attribute(\"url.full\", url.toString())\n            span.attribute(\"url.path\", url.pathname)\n            span.attribute(\"url.scheme\", url.protocol.slice(0, -1))\n            const query = url.search.slice(1)\n            if (query !== \"\") {\n              span.attribute(\"url.query\", query)\n            }\n            const redactedHeaderNames = fiber.getFiberRef(Headers.currentRedactedNames)\n            const redactedHeaders = Headers.redact(request.headers, redactedHeaderNames)\n            for (const name in redactedHeaders) {\n              span.attribute(`http.request.header.${name}`, String(redactedHeaders[name]))\n            }\n            request = fiber.getFiberRef(currentTracerPropagation)\n              ? internalRequest.setHeaders(request, TraceContext.toHeaders(span))\n              : request\n            return Effect.uninterruptibleMask((restore) =>\n              restore(f(request, url, controller.signal, fiber)).pipe(\n                Effect.withParentSpan(span),\n                Effect.matchCauseEffect({\n                  onSuccess: (response) => {\n                    span.attribute(\"http.response.status_code\", response.status)\n                    const redactedHeaders = Headers.redact(response.headers, redactedHeaderNames)\n                    for (const name in redactedHeaders) {\n                      span.attribute(`http.response.header.${name}`, String(redactedHeaders[name]))\n                    }\n\n                    responseRegistry.register(response, controller)\n                    return Effect.succeed(new InterruptibleResponse(response, controller))\n                  },\n                  onFailure(cause) {\n                    if (Cause.isInterrupted(cause)) {\n                      controller.abort()\n                    }\n                    return Effect.failCause(cause)\n                  }\n                })\n              )\n            )\n          }\n        )\n      })), Effect.succeed as Client.HttpClient.Preprocess<never, never>)\n\nclass InterruptibleResponse implements ClientResponse.HttpClientResponse {\n  constructor(\n    readonly original: ClientResponse.HttpClientResponse,\n    readonly controller: AbortController\n  ) {}\n\n  readonly [internalResponse.TypeId]: ClientResponse.TypeId = internalResponse.TypeId\n  readonly [IncomingMessage.TypeId]: IncomingMessage.TypeId = IncomingMessage.TypeId\n\n  private applyInterrupt<A, E, R>(effect: Effect.Effect<A, E, R>) {\n    return Effect.suspend(() => {\n      responseRegistry.unregister(this.original)\n      return Effect.onInterrupt(effect, () =>\n        Effect.sync(() => {\n          this.controller.abort()\n        }))\n    })\n  }\n\n  get request() {\n    return this.original.request\n  }\n\n  get status() {\n    return this.original.status\n  }\n\n  get headers() {\n    return this.original.headers\n  }\n\n  get cookies() {\n    return this.original.cookies\n  }\n\n  get remoteAddress() {\n    return this.original.remoteAddress\n  }\n\n  get formData() {\n    return this.applyInterrupt(this.original.formData)\n  }\n\n  get text() {\n    return this.applyInterrupt(this.original.text)\n  }\n\n  get json() {\n    return this.applyInterrupt(this.original.json)\n  }\n\n  get urlParamsBody() {\n    return this.applyInterrupt(this.original.urlParamsBody)\n  }\n\n  get arrayBuffer() {\n    return this.applyInterrupt(this.original.arrayBuffer)\n  }\n\n  get stream() {\n    return Stream.suspend(() => {\n      responseRegistry.unregister(this.original)\n      return Stream.ensuringWith(this.original.stream, (exit) => {\n        if (Exit.isInterrupted(exit)) {\n          this.controller.abort()\n        }\n        return Effect.void\n      })\n    })\n  }\n\n  toJSON() {\n    return this.original.toJSON()\n  }\n\n  [Inspectable.NodeInspectSymbol]() {\n    return this.original[Inspectable.NodeInspectSymbol]()\n  }\n}\n\nexport const {\n  /** @internal */\n  del,\n  /** @internal */\n  execute,\n  /** @internal */\n  get,\n  /** @internal */\n  head,\n  /** @internal */\n  options,\n  /** @internal */\n  patch,\n  /** @internal */\n  post,\n  /** @internal */\n  put\n} = Effect.serviceFunctions(tag)\n\n/** @internal */\nexport const transform = dual<\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => (self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E | E1, R | R1>,\n  <E, R, E1, R1>(\n    self: Client.HttpClient.With<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => Client.HttpClient.With<E | E1, R | R1>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(\n    Effect.flatMap((request) => f(client.postprocess(Effect.succeed(request)), request)),\n    client.preprocess\n  )\n})\n\n/** @internal */\nexport const filterStatus = dual<\n  (\n    f: (status: number) => boolean\n  ) => <E, R>(\n    self: Client.HttpClient.With<E, R>\n  ) => Client.HttpClient.With<E | Error.ResponseError, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    f: (status: number) => boolean\n  ) => Client.HttpClient.With<E | Error.ResponseError, R>\n>(2, (self, f) => transformResponse(self, Effect.flatMap(internalResponse.filterStatus(f))))\n\n/** @internal */\nexport const filterStatusOk = <E, R>(\n  self: Client.HttpClient.With<E, R>\n): Client.HttpClient.With<E | Error.ResponseError, R> =>\n  transformResponse(self, Effect.flatMap(internalResponse.filterStatusOk))\n\n/** @internal */\nexport const transformResponse = dual<\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => (self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E1, R1>,\n  <E, R, E1, R1>(\n    self: Client.HttpClient.With<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ) => Client.HttpClient.With<E1, R1>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith((request) => f(client.postprocess(request)), client.preprocess)\n})\n\n/** @internal */\nexport const catchTag: {\n  <K extends E extends { _tag: string } ? E[\"_tag\"] : never, E, E1, R1>(\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): <R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E1 | Exclude<E, { _tag: K }>, R1 | R>\n  <\n    R,\n    E,\n    K extends E extends { _tag: string } ? E[\"_tag\"] : never,\n    R1,\n    E1\n  >(\n    self: Client.HttpClient.With<E, R>,\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): Client.HttpClient.With<E1 | Exclude<E, { _tag: K }>, R1 | R>\n} = dual(\n  3,\n  <\n    R,\n    E,\n    K extends E extends { _tag: string } ? E[\"_tag\"] : never,\n    R1,\n    E1\n  >(\n    self: Client.HttpClient.With<E, R>,\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): Client.HttpClient.With<E1 | Exclude<E, { _tag: K }>, R1 | R> => transformResponse(self, Effect.catchTag(tag, f))\n)\n\n/** @internal */\nexport const catchTags: {\n  <\n    E,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {}\n        : {\n          [\n            K in Exclude<\n              keyof Cases,\n              Extract<E, { _tag: string }>[\"_tag\"]\n            >\n          ]: never\n        })\n  >(\n    cases: Cases\n  ): <R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, infer E, any> ? E\n        : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, any, infer R> ? R\n        : never\n    }[keyof Cases]\n  >\n  <\n    E extends { _tag: string },\n    R,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {}\n        : {\n          [\n            K in Exclude<\n              keyof Cases,\n              Extract<E, { _tag: string }>[\"_tag\"]\n            >\n          ]: never\n        })\n  >(\n    self: Client.HttpClient.With<E, R>,\n    cases: Cases\n  ): Client.HttpClient.With<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, infer E, any> ? E\n        : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, any, infer R> ? R\n        : never\n    }[keyof Cases]\n  >\n} = dual(\n  2,\n  <\n    E extends { _tag: string },\n    R,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {}\n        : {\n          [\n            K in Exclude<\n              keyof Cases,\n              Extract<E, { _tag: string }>[\"_tag\"]\n            >\n          ]: never\n        })\n  >(\n    self: Client.HttpClient.With<E, R>,\n    cases: Cases\n  ): Client.HttpClient.With<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, infer E, any> ? E\n        : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (\n        ...args: Array<any>\n      ) => Effect.Effect<any, any, infer R> ? R\n        : never\n    }[keyof Cases]\n  > => transformResponse(self, Effect.catchTags(cases) as any)\n)\n\n/** @internal */\nexport const catchAll: {\n  <E, E2, R2>(\n    f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): <R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E2, R | R2>\n  <E, R, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): Client.HttpClient.With<E2, R | R2>\n} = dual(\n  2,\n  <E, R, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): Client.HttpClient.With<E2, R | R2> => transformResponse(self, Effect.catchAll(f))\n)\n\n/** @internal */\nexport const filterOrElse: {\n  <E2, R2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): <E, R>(\n    self: Client.HttpClient.With<E, R>\n  ) => Client.HttpClient.With<E2 | E, R2 | R>\n  <E, R, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): Client.HttpClient.With<E2 | E, R2 | R>\n} = dual(3, (self, f, orElse) => transformResponse(self, Effect.filterOrElse(f, orElse)))\n\n/** @internal */\nexport const filterOrFail: {\n  <E2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E2 | E, R>\n  <E, R, E2>(\n    self: Client.HttpClient.With<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): Client.HttpClient.With<E2 | E, R>\n} = dual(3, (self, f, orFailWith) => transformResponse(self, Effect.filterOrFail(f, orFailWith)))\n\n/** @internal */\nexport const mapRequest = dual<\n  (\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => Client.HttpClient.With<E, R>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess, (request) => Effect.map(client.preprocess(request), f))\n})\n\n/** @internal */\nexport const mapRequestEffect = dual<\n  <E2, R2>(\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => <E, R>(\n    self: Client.HttpClient.With<E, R>\n  ) => Client.HttpClient.With<E | E2, R | R2>,\n  <E, R, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Client.HttpClient.With<E | E2, R | R2>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess as any, (request) => Effect.flatMap(client.preprocess(request), f))\n})\n\n/** @internal */\nexport const mapRequestInput = dual<\n  (\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ) => Client.HttpClient.With<E, R>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess, (request) => client.preprocess(f(request)))\n})\n\n/** @internal */\nexport const mapRequestInputEffect = dual<\n  <E2, R2>(\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => <E, R>(\n    self: Client.HttpClient.With<E, R>\n  ) => Client.HttpClient.With<E | E2, R | R2>,\n  <E, R, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    f: (\n      a: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Client.HttpClient.With<E | E2, R | R2>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess as any, (request) => Effect.flatMap(f(request), client.preprocess))\n})\n\n/** @internal */\nexport const retry: {\n  <E, O extends NoExcessProperties<Effect.Retry.Options<E>, O>>(\n    options: O\n  ): <R>(self: Client.HttpClient.With<E, R>) => Client.Retry.Return<R, E, O>\n  <B, E, R1>(\n    policy: Schedule.Schedule<B, NoInfer<E>, R1>\n  ): <R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R1 | R>\n  <E, R, O extends NoExcessProperties<Effect.Retry.Options<E>, O>>(\n    self: Client.HttpClient.With<E, R>,\n    options: O\n  ): Client.Retry.Return<R, E, O>\n  <E, R, B, R1>(\n    self: Client.HttpClient.With<E, R>,\n    policy: Schedule.Schedule<B, E, R1>\n  ): Client.HttpClient.With<E, R1 | R>\n} = dual(\n  2,\n  <E extends E0, E0, R, R1, B>(\n    self: Client.HttpClient.With<E, R>,\n    policy: Schedule.Schedule<B, E0, R1>\n  ): Client.HttpClient.With<E, R | R1> => transformResponse(self, Effect.retry(policy))\n)\n\n/** @internal */\nexport const retryTransient: {\n  <B, E, R1 = never>(\n    options: {\n      readonly while?: Predicate.Predicate<NoInfer<E>>\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): <R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R1 | R>\n  <E, R, B, R1 = never>(\n    self: Client.HttpClient.With<E, R>,\n    options: {\n      readonly while?: Predicate.Predicate<NoInfer<E>>\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): Client.HttpClient.With<E, R1 | R>\n} = dual(\n  2,\n  <E extends E0, E0, R, B, R1 = never>(\n    self: Client.HttpClient.With<E, R>,\n    options: {\n      readonly while?: Predicate.Predicate<NoInfer<E>>\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): Client.HttpClient.With<E, R | R1> =>\n    transformResponse(\n      self,\n      Effect.retry({\n        while: Schedule.ScheduleTypeId in options || options.while === undefined\n          ? isTransientError\n          : Predicate.or(isTransientError, options.while),\n        schedule: Schedule.ScheduleTypeId in options ? options : options.schedule,\n        times: Schedule.ScheduleTypeId in options ? undefined : options.times\n      })\n    )\n)\n\nconst isTransientError = (error: unknown) =>\n  Predicate.hasProperty(error, Cause.TimeoutExceptionTypeId) || isTransientHttpError(error)\n\nconst isTransientHttpError = (error: unknown) =>\n  Error.isHttpClientError(error) &&\n  ((error._tag === \"RequestError\" && error.reason === \"Transport\") ||\n    (error._tag === \"ResponseError\" && error.response.status >= 429))\n\n/** @internal */\nexport const tap = dual<\n  <_, E2, R2>(\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E | E2, R | R2>,\n  <E, R, _, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ) => Client.HttpClient.With<E | E2, R | R2>\n>(2, (self, f) => transformResponse(self, Effect.tap(f)))\n\n/** @internal */\nexport const tapError = dual<\n  <_, E, E2, R2>(\n    f: (e: NoInfer<E>) => Effect.Effect<_, E2, R2>\n  ) => <R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E | E2, R | R2>,\n  <E, R, _, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    f: (e: NoInfer<E>) => Effect.Effect<_, E2, R2>\n  ) => Client.HttpClient.With<E | E2, R | R2>\n>(2, (self, f) => transformResponse(self, Effect.tapError(f)))\n\n/** @internal */\nexport const tapRequest = dual<\n  <_, E2, R2>(\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>\n  ) => <E, R>(\n    self: Client.HttpClient.With<E, R>\n  ) => Client.HttpClient.With<E | E2, R | R2>,\n  <E, R, _, E2, R2>(\n    self: Client.HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>\n  ) => Client.HttpClient.With<E | E2, R | R2>\n>(2, (self, f) => {\n  const client = self as HttpClientImpl<any, any>\n  return makeWith(client.postprocess as any, (request) => Effect.tap(client.preprocess(request), f))\n})\n\n/** @internal */\nexport const withCookiesRef = dual<\n  (\n    ref: Ref.Ref<Cookies.Cookies>\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    ref: Ref.Ref<Cookies.Cookies>\n  ) => Client.HttpClient.With<E, R>\n>(\n  2,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    ref: Ref.Ref<Cookies.Cookies>\n  ): Client.HttpClient.With<E, R> => {\n    const client = self as HttpClientImpl<E, R>\n    return makeWith(\n      (request: Effect.Effect<ClientRequest.HttpClientRequest, E, R>) =>\n        Effect.tap(\n          client.postprocess(request),\n          (response) => Ref.update(ref, (cookies) => Cookies.merge(cookies, response.cookies))\n        ),\n      (request) =>\n        Effect.flatMap(client.preprocess(request), (request) =>\n          Effect.map(\n            Ref.get(ref),\n            (cookies) =>\n              Cookies.isEmpty(cookies)\n                ? request\n                : internalRequest.setHeader(request, \"cookie\", Cookies.toCookieHeader(cookies))\n          ))\n    )\n  }\n)\n\n/** @internal */\nexport const followRedirects = dual<\n  (\n    maxRedirects?: number | undefined\n  ) => <E, R>(self: Client.HttpClient.With<E, R>) => Client.HttpClient.With<E, R>,\n  <E, R>(\n    self: Client.HttpClient.With<E, R>,\n    maxRedirects?: number | undefined\n  ) => Client.HttpClient.With<E, R>\n>((args) => isClient(args[0]), <E, R>(\n  self: Client.HttpClient.With<E, R>,\n  maxRedirects?: number | undefined\n): Client.HttpClient.With<E, R> => {\n  const client = self as HttpClientImpl<E, R>\n  return makeWith(\n    (request) => {\n      const loop = (\n        request: ClientRequest.HttpClientRequest,\n        redirects: number\n      ): Effect.Effect<ClientResponse.HttpClientResponse, E, R> =>\n        Effect.flatMap(\n          client.postprocess(Effect.succeed(request)),\n          (response) =>\n            response.status >= 300 && response.status < 400 && response.headers.location &&\n              redirects < (maxRedirects ?? 10)\n              ? loop(\n                internalRequest.setUrl(\n                  request,\n                  new URL(response.headers.location, response.request.url)\n                ),\n                redirects + 1\n              )\n              : Effect.succeed(response)\n        )\n      return Effect.flatMap(request, (request) => loop(request, 0))\n    },\n    client.preprocess\n  )\n})\n\n/** @internal */\nexport const layerMergedContext = <E, R>(\n  effect: Effect.Effect<Client.HttpClient, E, R>\n): Layer.Layer<Client.HttpClient, E, R> =>\n  Layer.effect(\n    tag,\n    Effect.flatMap(Effect.context<never>(), (context) =>\n      Effect.map(effect, (client) =>\n        transformResponse(\n          client,\n          Effect.mapInputContext((input: Context.Context<never>) => Context.merge(context, input))\n        )))\n  )\n"],"names":["Cause","Context","Effect","Exit","FiberRef","constFalse","dual","globalValue","Inspectable","Layer","pipeArguments","Predicate","Ref","Schedule","Stream","Cookies","Headers","Error","IncomingMessage","TraceContext","UrlParams","internalRequest","internalResponse","TypeId","Symbol","for","tag","GenericTag","currentTracerDisabledWhen","unsafeMake","withTracerDisabledWhen","self","pred","transformResponse","locally","currentTracerPropagation","withTracerPropagation","enabled","SpanNameGenerator","Reference","defaultValue","request","method","withSpanNameGenerator","f","provideService","ClientProto","pipe","arguments","BaseProto","toJSON","_id","get","url","options","execute","head","post","put","patch","del","isClient","u","hasProperty","makeWith","postprocess","preprocess","Object","create","responseRegistry","globalThis","FinalizationRegistry","registry","controller","abort","register","response","unregister","timers","Map","set","setTimeout","timer","undefined","clearTimeout","delete","make","effect","flatMap","withFiberRuntime","fiber","AbortController","urlResult","makeUrl","urlParams","hash","_tag","fail","RequestError","reason","cause","left","right","tracerDisabled","getFiberRef","currentTracerEnabled","uninterruptibleMask","restore","matchCauseEffect","signal","onSuccess","succeed","InterruptibleResponse","onFailure","isInterrupted","failCause","nameGenerator","currentContext","useSpan","kind","captureStackTrace","span","attribute","origin","port","toString","pathname","protocol","slice","query","search","redactedHeaderNames","currentRedactedNames","redactedHeaders","redact","headers","name","String","setHeaders","toHeaders","withParentSpan","status","original","constructor","applyInterrupt","suspend","onInterrupt","sync","cookies","remoteAddress","formData","text","json","urlParamsBody","arrayBuffer","stream","ensuringWith","exit","void","NodeInspectSymbol","serviceFunctions","transform","client","filterStatus","filterStatusOk","catchTag","catchTags","cases","catchAll","filterOrElse","orElse","filterOrFail","orFailWith","mapRequest","map","mapRequestEffect","mapRequestInput","mapRequestInputEffect","retry","policy","retryTransient","while","ScheduleTypeId","isTransientError","or","schedule","times","error","TimeoutExceptionTypeId","isTransientHttpError","isHttpClientError","tap","tapError","tapRequest","withCookiesRef","ref","update","merge","isEmpty","setHeader","toCookieHeader","followRedirects","args","maxRedirects","loop","redirects","location","setUrl","URL","layerMergedContext","context","mapInputContext","input"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4974, "column": 0}, "map": {"version":3,"file":"HttpClient.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpClient.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type { RuntimeFiber } from \"effect/Fiber\"\nimport type * as FiberRef from \"effect/FiberRef\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type { Layer } from \"effect/Layer\"\nimport type { Pipeable } from \"effect/Pipeable\"\nimport type * as Predicate from \"effect/Predicate\"\nimport type { Ref } from \"effect/Ref\"\nimport type * as Schedule from \"effect/Schedule\"\nimport type { NoExcessProperties, NoInfer } from \"effect/Types\"\nimport type { Cookies } from \"./Cookies.js\"\nimport type * as Error from \"./HttpClientError.js\"\nimport type * as ClientRequest from \"./HttpClientRequest.js\"\nimport type * as ClientResponse from \"./HttpClientResponse.js\"\nimport * as internal from \"./internal/httpClient.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpClient extends HttpClient.With<Error.HttpClientError> {}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace HttpClient {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface With<E, R = never> extends Pipeable, Inspectable {\n    readonly [TypeId]: TypeId\n    readonly execute: (\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n\n    readonly get: (\n      url: string | URL,\n      options?: ClientRequest.Options.NoBody\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    readonly head: (\n      url: string | URL,\n      options?: ClientRequest.Options.NoBody\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    readonly post: (\n      url: string | URL,\n      options?: ClientRequest.Options.NoUrl\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    readonly patch: (\n      url: string | URL,\n      options?: ClientRequest.Options.NoUrl\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    readonly put: (\n      url: string | URL,\n      options?: ClientRequest.Options.NoUrl\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    readonly del: (\n      url: string | URL,\n      options?: ClientRequest.Options.NoUrl\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    readonly options: (\n      url: string | URL,\n      options?: ClientRequest.Options.NoUrl\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n  }\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export type Preprocess<E, R> = (\n    request: ClientRequest.HttpClientRequest\n  ) => Effect.Effect<ClientRequest.HttpClientRequest, E, R>\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export type Postprocess<E = never, R = never> = (\n    request: Effect.Effect<ClientRequest.HttpClientRequest, E, R>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const HttpClient: Context.Tag<HttpClient, HttpClient> = internal.tag\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const execute: (\n  request: ClientRequest.HttpClientRequest\n) => Effect.Effect<ClientResponse.HttpClientResponse, Error.HttpClientError, HttpClient> = internal.execute\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const get: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoBody | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  HttpClient\n> = internal.get\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const head: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoBody | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  HttpClient\n> = internal.head\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const post: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  HttpClient\n> = internal.post\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const patch: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  HttpClient\n> = internal.patch\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const put: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  HttpClient\n> = internal.put\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const del: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  HttpClient\n> = internal.del\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const options: (\n  url: string | URL,\n  options?: ClientRequest.Options.NoUrl | undefined\n) => Effect.Effect<\n  ClientResponse.HttpClientResponse,\n  Error.HttpClientError,\n  HttpClient\n> = internal.options\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport const catchAll: {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, E2, R2>(f: (e: E) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>): <R>(self: HttpClient.With<E, R>) => HttpClient.With<E2, R2 | R>\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, A2, E2, R2>(self: HttpClient.With<E, R>, f: (e: E) => Effect.Effect<A2, E2, R2>): HttpClient.With<E2, R | R2>\n} = internal.catchAll\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport const catchTag: {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <K extends E extends { _tag: string } ? E[\"_tag\"] : never, E, E1, R1>(\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): <R>(self: HttpClient.With<E, R>) => HttpClient.With<E1 | Exclude<E, { _tag: K }>, R1 | R>\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <R, E, K extends E extends { _tag: string } ? E[\"_tag\"] : never, R1, E1>(\n    self: HttpClient.With<E, R>,\n    tag: K,\n    f: (e: Extract<E, { _tag: K }>) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): HttpClient.With<E1 | Exclude<E, { _tag: K }>, R1 | R>\n} = internal.catchTag\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport const catchTags: {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <\n    E,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {} : { [K in Exclude<keyof Cases, Extract<E, { _tag: string }>[\"_tag\"]>]: never })\n  >(cases: Cases): <R>(\n    self: HttpClient.With<E, R>\n  ) => HttpClient.With<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n    }[keyof Cases]\n  >\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  <\n    E extends { _tag: string },\n    R,\n    Cases extends\n      & {\n        [K in Extract<E, { _tag: string }>[\"_tag\"]]+?: (\n          error: Extract<E, { _tag: K }>\n        ) => Effect.Effect<ClientResponse.HttpClientResponse, any, any>\n      }\n      & (unknown extends E ? {} : { [K in Exclude<keyof Cases, Extract<E, { _tag: string }>[\"_tag\"]>]: never })\n  >(self: HttpClient.With<E, R>, cases: Cases): HttpClient.With<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n    }[keyof Cases]\n  >\n} = internal.catchTags\n\n/**\n * Filters the result of a response, or runs an alternative effect if the predicate fails.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterOrElse: {\n  /**\n   * Filters the result of a response, or runs an alternative effect if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E2, R2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E2 | E, R2 | R>\n  /**\n   * Filters the result of a response, or runs an alternative effect if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E, R, E2, R2>(\n    self: HttpClient.With<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orElse: (response: ClientResponse.HttpClientResponse) => Effect.Effect<ClientResponse.HttpClientResponse, E2, R2>\n  ): HttpClient.With<E2 | E, R2 | R>\n} = internal.filterOrElse\n\n/**\n * Filters the result of a response, or throws an error if the predicate fails.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterOrFail: {\n  /**\n   * Filters the result of a response, or throws an error if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E2>(\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E2 | E, R>\n  /**\n   * Filters the result of a response, or throws an error if the predicate fails.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E, R, E2>(\n    self: HttpClient.With<E, R>,\n    predicate: Predicate.Predicate<ClientResponse.HttpClientResponse>,\n    orFailWith: (response: ClientResponse.HttpClientResponse) => E2\n  ): HttpClient.With<E2 | E, R>\n} = internal.filterOrFail\n\n/**\n * Filters responses by HTTP status code.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatus: {\n  /**\n   * Filters responses by HTTP status code.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  (f: (status: number) => boolean): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E | Error.ResponseError, R>\n  /**\n   * Filters responses by HTTP status code.\n   *\n   * @since 1.0.0\n   * @category filters\n   */\n  <E, R>(self: HttpClient.With<E, R>, f: (status: number) => boolean): HttpClient.With<E | Error.ResponseError, R>\n} = internal.filterStatus\n\n/**\n * Filters responses that return a 2xx status code.\n *\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatusOk: <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E | Error.ResponseError, R> =\n  internal.filterStatusOk\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeWith: <E2, R2, E, R>(\n  postprocess: (\n    request: Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n  preprocess: HttpClient.Preprocess<E2, R2>\n) => HttpClient.With<E, R> = internal.makeWith\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const make: (\n  f: (\n    request: ClientRequest.HttpClientRequest,\n    url: URL,\n    signal: AbortSignal,\n    fiber: RuntimeFiber<ClientResponse.HttpClientResponse, Error.HttpClientError>\n  ) => Effect.Effect<ClientResponse.HttpClientResponse, Error.HttpClientError>\n) => HttpClient = internal.make\n\n/**\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const transform: {\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): (self: HttpClient.With<E, R>) => HttpClient.With<E | E1, R | R1>\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    self: HttpClient.With<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>,\n      request: ClientRequest.HttpClientRequest\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): HttpClient.With<E | E1, R | R1>\n} = internal.transform\n\n/**\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const transformResponse: {\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): (self: HttpClient.With<E, R>) => HttpClient.With<E1, R1>\n  /**\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E1, R1>(\n    self: HttpClient.With<E, R>,\n    f: (\n      effect: Effect.Effect<ClientResponse.HttpClientResponse, E, R>\n    ) => Effect.Effect<ClientResponse.HttpClientResponse, E1, R1>\n  ): HttpClient.With<E1, R1>\n} = internal.transformResponse\n\n/**\n * Appends a transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequest: {\n  /**\n   * Appends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  (f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R>\n  /**\n   * Appends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R>(\n    self: HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ): HttpClient.With<E, R>\n} = internal.mapRequest\n\n/**\n * Appends an effectful transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequestEffect: {\n  /**\n   * Appends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E2, R2>(\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E | E2, R | R2>\n  /**\n   * Appends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E2, R2>(\n    self: HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): HttpClient.With<E | E2, R | R2>\n} = internal.mapRequestEffect\n\n/**\n * Prepends a transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequestInput: {\n  /**\n   * Prepends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  (f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R>\n  /**\n   * Prepends a transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R>(\n    self: HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => ClientRequest.HttpClientRequest\n  ): HttpClient.With<E, R>\n} = internal.mapRequestInput\n\n/**\n * Prepends an effectful transformation of the request object before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const mapRequestInputEffect: {\n  /**\n   * Prepends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E2, R2>(\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E | E2, R | R2>\n  /**\n   * Prepends an effectful transformation of the request object before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, E2, R2>(\n    self: HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<ClientRequest.HttpClientRequest, E2, R2>\n  ): HttpClient.With<E | E2, R | R2>\n} = internal.mapRequestInputEffect\n\n/**\n * @since 1.0.0\n * @category error handling\n */\nexport declare namespace Retry {\n  /**\n   * @since 1.0.0\n   * @category error handling\n   */\n  export type Return<R, E, O extends NoExcessProperties<Effect.Retry.Options<E>, O>> = HttpClient.With<\n    | (O extends { schedule: Schedule.Schedule<infer _O, infer _I, infer _R> } ? E\n      : O extends { until: Predicate.Refinement<E, infer E2> } ? E2\n      : E)\n    | (O extends { while: (...args: Array<any>) => Effect.Effect<infer _A, infer E, infer _R> } ? E : never)\n    | (O extends { until: (...args: Array<any>) => Effect.Effect<infer _A, infer E, infer _R> } ? E : never),\n    | R\n    | (O extends { schedule: Schedule.Schedule<infer _O, infer _I, infer R> } ? R : never)\n    | (O extends { while: (...args: Array<any>) => Effect.Effect<infer _A, infer _E, infer R> } ? R : never)\n    | (O extends { until: (...args: Array<any>) => Effect.Effect<infer _A, infer _E, infer R> } ? R : never)\n  > extends infer Z ? Z : never\n}\n\n/**\n * Retries the request based on a provided schedule or policy.\n *\n * @since 1.0.0\n * @category error handling\n */\nexport const retry: {\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, O extends NoExcessProperties<Effect.Retry.Options<E>, O>>(options: O): <R>(self: HttpClient.With<E, R>) => Retry.Return<R, E, O>\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <B, E, R1>(policy: Schedule.Schedule<B, NoInfer<E>, R1>): <R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R1 | R>\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, O extends NoExcessProperties<Effect.Retry.Options<E>, O>>(self: HttpClient.With<E, R>, options: O): Retry.Return<R, E, O>\n  /**\n   * Retries the request based on a provided schedule or policy.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, B, R1>(self: HttpClient.With<E, R>, policy: Schedule.Schedule<B, E, R1>): HttpClient.With<E, R1 | R>\n} = internal.retry\n\n/**\n * Retries common transient errors, such as rate limiting, timeouts or network issues.\n *\n * Specifying a `while` predicate allows you to consider other errors as\n * transient.\n *\n * @since 1.0.0\n * @category error handling\n */\nexport const retryTransient: {\n  /**\n   * Retries common transient errors, such as rate limiting, timeouts or network issues.\n   *\n   * Specifying a `while` predicate allows you to consider other errors as\n   * transient.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <B, E, R1 = never>(\n    options: {\n      readonly while?: Predicate.Predicate<NoInfer<E>>\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): <R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R1 | R>\n  /**\n   * Retries common transient errors, such as rate limiting, timeouts or network issues.\n   *\n   * Specifying a `while` predicate allows you to consider other errors as\n   * transient.\n   *\n   * @since 1.0.0\n   * @category error handling\n   */\n  <E, R, B, R1 = never>(\n    self: HttpClient.With<E, R>,\n    options: {\n      readonly while?: Predicate.Predicate<NoInfer<E>>\n      readonly schedule?: Schedule.Schedule<B, NoInfer<E>, R1>\n      readonly times?: number\n    } | Schedule.Schedule<B, NoInfer<E>, R1>\n  ): HttpClient.With<E, R1 | R>\n} = internal.retryTransient\n\n/**\n * Performs an additional effect after a successful request.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const tap: {\n  /**\n   * Performs an additional effect after a successful request.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <_, E2, R2>(\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E | E2, R | R2>\n  /**\n   * Performs an additional effect after a successful request.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, _, E2, R2>(\n    self: HttpClient.With<E, R>,\n    f: (response: ClientResponse.HttpClientResponse) => Effect.Effect<_, E2, R2>\n  ): HttpClient.With<E | E2, R | R2>\n} = internal.tap\n\n/**\n * Performs an additional effect after an unsuccessful request.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const tapError: {\n  /**\n   * Performs an additional effect after an unsuccessful request.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <_, E, E2, R2>(f: (e: NoInfer<E>) => Effect.Effect<_, E2, R2>): <R>(self: HttpClient.With<E, R>) => HttpClient.With<E | E2, R | R2>\n  /**\n   * Performs an additional effect after an unsuccessful request.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, _, E2, R2>(\n    self: HttpClient.With<E, R>,\n    f: (e: NoInfer<E>) => Effect.Effect<_, E2, R2>\n  ): HttpClient.With<E | E2, R | R2>\n} = internal.tapError\n\n/**\n * Performs an additional effect on the request before sending it.\n *\n * @since 1.0.0\n * @category mapping & sequencing\n */\nexport const tapRequest: {\n  /**\n   * Performs an additional effect on the request before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <_, E2, R2>(f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E | E2, R | R2>\n  /**\n   * Performs an additional effect on the request before sending it.\n   *\n   * @since 1.0.0\n   * @category mapping & sequencing\n   */\n  <E, R, _, E2, R2>(\n    self: HttpClient.With<E, R>,\n    f: (a: ClientRequest.HttpClientRequest) => Effect.Effect<_, E2, R2>\n  ): HttpClient.With<E | E2, R | R2>\n} = internal.tapRequest\n\n/**\n * Associates a `Ref` of cookies with the client for handling cookies across requests.\n *\n * @since 1.0.0\n * @category cookies\n */\nexport const withCookiesRef: {\n  /**\n   * Associates a `Ref` of cookies with the client for handling cookies across requests.\n   *\n   * @since 1.0.0\n   * @category cookies\n   */\n  (ref: Ref<Cookies>): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R>\n  /**\n   * Associates a `Ref` of cookies with the client for handling cookies across requests.\n   *\n   * @since 1.0.0\n   * @category cookies\n   */\n  <E, R>(self: HttpClient.With<E, R>, ref: Ref<Cookies>): HttpClient.With<E, R>\n} = internal.withCookiesRef\n\n/**\n * Follows HTTP redirects up to a specified number of times.\n *\n * @since 1.0.0\n * @category redirects\n */\nexport const followRedirects: {\n  /**\n   * Follows HTTP redirects up to a specified number of times.\n   *\n   * @since 1.0.0\n   * @category redirects\n   */\n  (maxRedirects?: number | undefined): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R>\n  /**\n   * Follows HTTP redirects up to a specified number of times.\n   *\n   * @since 1.0.0\n   * @category redirects\n   */\n  <E, R>(self: HttpClient.With<E, R>, maxRedirects?: number | undefined): HttpClient.With<E, R>\n} = internal.followRedirects\n\n/**\n * @since 1.0.0\n * @category Tracing\n */\nexport const currentTracerDisabledWhen: FiberRef.FiberRef<Predicate.Predicate<ClientRequest.HttpClientRequest>> =\n  internal.currentTracerDisabledWhen\n\n/**\n * Disables tracing for specific requests based on a provided predicate.\n *\n * @since 1.0.0\n * @category Tracing\n */\nexport const withTracerDisabledWhen: {\n  /**\n   * Disables tracing for specific requests based on a provided predicate.\n   *\n   * @since 1.0.0\n   * @category Tracing\n   */\n  (predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R>\n  /**\n   * Disables tracing for specific requests based on a provided predicate.\n   *\n   * @since 1.0.0\n   * @category Tracing\n   */\n  <E, R>(\n    self: HttpClient.With<E, R>,\n    predicate: Predicate.Predicate<ClientRequest.HttpClientRequest>\n  ): HttpClient.With<E, R>\n} = internal.withTracerDisabledWhen\n\n/**\n * @since 1.0.0\n * @category Tracing\n */\nexport const currentTracerPropagation: FiberRef.FiberRef<boolean> = internal.currentTracerPropagation\n\n/**\n * Enables or disables tracing propagation for the request.\n *\n * @since 1.0.0\n * @category Tracing\n */\nexport const withTracerPropagation: {\n  /**\n   * Enables or disables tracing propagation for the request.\n   *\n   * @since 1.0.0\n   * @category Tracing\n   */\n  (enabled: boolean): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R>\n  /**\n   * Enables or disables tracing propagation for the request.\n   *\n   * @since 1.0.0\n   * @category Tracing\n   */\n  <E, R>(self: HttpClient.With<E, R>, enabled: boolean): HttpClient.With<E, R>\n} = internal.withTracerPropagation\n\n/**\n * @since 1.0.0\n */\nexport const layerMergedContext: <E, R>(\n  effect: Effect.Effect<HttpClient, E, R>\n) => Layer<HttpClient, E, R> = internal.layerMergedContext\n\n/**\n * @since 1.0.0\n * @category Tracing\n */\nexport interface SpanNameGenerator {\n  readonly _: unique symbol\n}\n\n/**\n * @since 1.0.0\n * @category Tracing\n */\nexport const SpanNameGenerator: Context.Reference<\n  SpanNameGenerator,\n  (request: ClientRequest.HttpClientRequest) => string\n> = internal.SpanNameGenerator\n\n/**\n * Customizes the span names for tracing.\n *\n * ```ts\n * import { FetchHttpClient, HttpClient } from \"@effect/platform\"\n * import { NodeRuntime } from \"@effect/platform-node\"\n * import { Effect } from \"effect\"\n *\n * Effect.gen(function* () {\n *   const client = (yield* HttpClient.HttpClient).pipe(\n *     // Customize the span names for this HttpClient\n *     HttpClient.withSpanNameGenerator(\n *       (request) => `http.client ${request.method} ${request.url}`\n *     )\n *   )\n *\n *   yield* client.get(\"https://jsonplaceholder.typicode.com/posts/1\")\n * }).pipe(Effect.provide(FetchHttpClient.layer), NodeRuntime.runMain)\n * ```\n *\n * @since 1.0.0\n * @category Tracing\n */\nexport const withSpanNameGenerator: {\n  /**\n   * Customizes the span names for tracing.\n   *\n   * ```ts\n   * import { FetchHttpClient, HttpClient } from \"@effect/platform\"\n   * import { NodeRuntime } from \"@effect/platform-node\"\n   * import { Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const client = (yield* HttpClient.HttpClient).pipe(\n   *     // Customize the span names for this HttpClient\n   *     HttpClient.withSpanNameGenerator(\n   *       (request) => `http.client ${request.method} ${request.url}`\n   *     )\n   *   )\n   *\n   *   yield* client.get(\"https://jsonplaceholder.typicode.com/posts/1\")\n   * }).pipe(Effect.provide(FetchHttpClient.layer), NodeRuntime.runMain)\n   * ```\n   *\n   * @since 1.0.0\n   * @category Tracing\n   */\n  (f: (request: ClientRequest.HttpClientRequest) => string): <E, R>(self: HttpClient.With<E, R>) => HttpClient.With<E, R>\n  /**\n   * Customizes the span names for tracing.\n   *\n   * ```ts\n   * import { FetchHttpClient, HttpClient } from \"@effect/platform\"\n   * import { NodeRuntime } from \"@effect/platform-node\"\n   * import { Effect } from \"effect\"\n   *\n   * Effect.gen(function* () {\n   *   const client = (yield* HttpClient.HttpClient).pipe(\n   *     // Customize the span names for this HttpClient\n   *     HttpClient.withSpanNameGenerator(\n   *       (request) => `http.client ${request.method} ${request.url}`\n   *     )\n   *   )\n   *\n   *   yield* client.get(\"https://jsonplaceholder.typicode.com/posts/1\")\n   * }).pipe(Effect.provide(FetchHttpClient.layer), NodeRuntime.runMain)\n   * ```\n   *\n   * @since 1.0.0\n   * @category Tracing\n   */\n  <E, R>(\n    self: HttpClient.With<E, R>,\n    f: (request: ClientRequest.HttpClientRequest) => string\n  ): HttpClient.With<E, R>\n} = internal.withSpanNameGenerator\n"],"names":["internal","TypeId","HttpClient","tag","execute","get","head","post","patch","put","del","options","catchAll","catchTag","catchTags","filterOrElse","filterOrFail","filterStatus","filterStatusOk","makeWith","make","transform","transformResponse","mapRequest","mapRequestEffect","mapRequestInput","mapRequestInputEffect","retry","retryTransient","tap","tapError","tapRequest","withCookiesRef","followRedirects","currentTracerDisabledWhen","withTracerDisabledWhen","currentTracerPropagation","withTracerPropagation","layerMergedContext","SpanNameGenerator","withSpanNameGenerator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,KAAKA,QAAQ,MAAM,0BAA0B;;AAM7C,MAAMC,MAAM,mLAAkBD,QAAQ,CAACC,AAAM;AA+E7C,MAAMC,UAAU,mLAAwCF,MAAY,EAAJ,CAACG;AAMjE,MAAMC,OAAO,mLAEuEJ,QAAQ,CAACI,CAAO;AAMpG,MAAMC,GAAG,mLAOZL,MAAY,EAAJ,CAACK;AAMN,MAAMC,IAAI,mLAObN,OAAa,CAAL,CAACM;AAMN,MAAMC,IAAI,mLAObP,OAAa,CAAL,CAACO;AAMN,MAAMC,KAAK,mLAOdR,QAAQ,AAAM,CAALQ;AAMN,MAAMC,GAAG,mLAOZT,MAAY,EAAJ,CAACS;AAMN,MAAMC,GAAG,mLAOZV,MAAY,EAAJ,CAACU;AAMN,MAAMC,OAAO,mLAOhBX,QAAQ,CAACW,CAAO;AAMb,MAAMC,QAAQ,mLAWjBZ,QAAQ,CAACY,EAAQ;AAMd,MAAMC,QAAQ,mLAkBjBb,QAAQ,CAACa,EAAQ;AAMd,MAAMC,SAAS,mLAkDlBd,QAAQ,CAACc,GAAS;AAQf,MAAMC,YAAY,mLAsBrBf,QAAQ,CAACe,MAAY;AAQlB,MAAMC,YAAY,mLAsBrBhB,QAAQ,CAACgB,MAAY;AAQlB,MAAMC,YAAY,mLAerBjB,QAAQ,CAACiB,MAAY;AAQlB,MAAMC,cAAc,mLACzBlB,QAAQ,CAACkB,QAAc;AAMlB,MAAMC,QAAQ,mLAKQnB,QAAQ,CAACmB,EAAQ;AAMvC,MAAMC,IAAI,mLAOCpB,OAAa,CAAL,CAACoB;AAMpB,MAAMC,SAAS,mLAsBlBrB,QAAQ,CAACqB,GAAS;AAMf,MAAMC,iBAAiB,mLAoB1BtB,QAAQ,CAACsB,WAAiB;AAQvB,MAAMC,UAAU,mLAkBnBvB,QAAQ,CAACuB,IAAU;AAQhB,MAAMC,gBAAgB,mLAoBzBxB,QAAQ,CAACwB,UAAgB;AAQtB,MAAMC,eAAe,mLAkBxBzB,QAAQ,CAACyB,SAAe;AAQrB,MAAMC,qBAAqB,mLAoB9B1B,QAAQ,CAAC0B,eAAqB;AA8B3B,MAAMC,KAAK,mLA6Bd3B,QAAQ,AAAM,CAAL2B;AAWN,MAAMC,cAAc,mLAkCvB5B,QAAQ,CAAC4B,QAAc;AAQpB,MAAMC,GAAG,mLAoBZ7B,MAAY,EAAJ,CAAC6B;AAQN,MAAMC,QAAQ,mLAkBjB9B,QAAQ,CAAC8B,EAAQ;AAQd,MAAMC,UAAU,mLAkBnB/B,QAAQ,CAAC+B,IAAU;AAQhB,MAAMC,cAAc,mLAevBhC,QAAQ,CAACgC,QAAc;AAQpB,MAAMC,eAAe,mLAexBjC,QAAQ,CAACiC,SAAe;AAMrB,MAAMC,yBAAyB,mLACpClC,QAAQ,CAACkC,mBAAyB;AAQ7B,MAAMC,sBAAsB,mLAkB/BnC,QAAQ,CAACmC,gBAAsB;AAM5B,MAAMC,wBAAwB,mLAA+BpC,QAAQ,CAACoC,kBAAwB;AAQ9F,MAAMC,qBAAqB,mLAe9BrC,QAAQ,CAACqC,eAAqB;AAK3B,MAAMC,kBAAkB,mLAEAtC,QAAQ,CAACsC,YAAkB;AAcnD,MAAMC,iBAAiB,mLAG1BvC,QAAQ,CAACuC,WAAiB;AAyBvB,MAAMC,qBAAqB,mLAoD9BxC,QAAQ,CAACwC,eAAqB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5062, "column": 0}, "map": {"version":3,"file":"HttpClientRequest.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpClientRequest.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Option from \"effect/Option\"\nimport type { Pipeable } from \"effect/Pipeable\"\nimport type { Redacted } from \"effect/Redacted\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport type * as PlatformError from \"./Error.js\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport type * as Headers from \"./Headers.js\"\nimport type * as Body from \"./HttpBody.js\"\nimport type { HttpMethod } from \"./HttpMethod.js\"\nimport * as internal from \"./internal/httpClientRequest.js\"\nimport type * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"@effect/platform/HttpClientRequest\")\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpClientRequest extends Inspectable, Pipeable {\n  readonly [TypeId]: TypeId\n  readonly method: HttpMethod\n  readonly url: string\n  readonly urlParams: UrlParams.UrlParams\n  readonly hash: Option.Option<string>\n  readonly headers: Headers.Headers\n  readonly body: Body.HttpBody\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Options {\n  readonly method?: HttpMethod | undefined\n  readonly url?: string | URL | undefined\n  readonly urlParams?: UrlParams.Input | undefined\n  readonly hash?: string | undefined\n  readonly headers?: Headers.Input | undefined\n  readonly body?: Body.HttpBody | undefined\n  readonly accept?: string | undefined\n  readonly acceptJson?: boolean | undefined\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Options {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface NoBody extends Omit<Options, \"method\" | \"url\" | \"body\"> {}\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface NoUrl extends Omit<Options, \"method\" | \"url\"> {}\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const make: <M extends HttpMethod>(\n  method: M\n) => (\n  url: string | URL,\n  options?: (M extends \"GET\" | \"HEAD\" ? Options.NoBody : Options.NoUrl) | undefined\n) => HttpClientRequest = internal.make\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const get: (url: string | URL, options?: Options.NoBody) => HttpClientRequest = internal.get\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const post: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.post\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const patch: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.patch\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const put: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.put\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const del: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.del\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const head: (url: string | URL, options?: Options.NoBody) => HttpClientRequest = internal.head\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const options: (url: string | URL, options?: Options.NoUrl) => HttpClientRequest = internal.options\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const modify: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (options: Options): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, options: Options): HttpClientRequest\n} = internal.modify\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setMethod: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (method: HttpMethod): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, method: HttpMethod): HttpClientRequest\n} = internal.setMethod\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeader: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, key: string, value: string): HttpClientRequest\n} = internal.setHeader\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHeaders: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: Headers.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: Headers.Input): HttpClientRequest\n} = internal.setHeaders\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const basicAuth: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (username: string | Redacted, password: string | Redacted): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n   self: HttpClientRequest,\n   username: string | Redacted,\n   password: string | Redacted\n  ): HttpClientRequest\n} = internal.basicAuth\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bearerToken: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (token: string | Redacted): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, token: string | Redacted): HttpClientRequest\n} = internal.bearerToken\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const accept: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (mediaType: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, mediaType: string): HttpClientRequest\n} = internal.accept\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const acceptJson: (self: HttpClientRequest) => HttpClientRequest = internal.acceptJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (url: string | URL): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, url: string | URL): HttpClientRequest\n} = internal.setUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const prependUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (path: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, path: string): HttpClientRequest\n} = internal.prependUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (path: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, path: string): HttpClientRequest\n} = internal.appendUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const updateUrl: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (f: (url: string) => string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, f: (url: string) => string): HttpClientRequest\n} = internal.updateUrl\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setUrlParam: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, key: string, value: string): HttpClientRequest\n} = internal.setUrlParam\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setUrlParams: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: UrlParams.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: UrlParams.Input): HttpClientRequest\n} = internal.setUrlParams\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendUrlParam: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (key: string, value: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, key: string, value: string): HttpClientRequest\n} = internal.appendUrlParam\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const appendUrlParams: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: UrlParams.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: UrlParams.Input): HttpClientRequest\n} = internal.appendUrlParams\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setHash: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (hash: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, hash: string): HttpClientRequest\n} = internal.setHash\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const removeHash: (self: HttpClientRequest) => HttpClientRequest = internal.removeHash\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const setBody: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: Body.HttpBody): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: Body.HttpBody): HttpClientRequest\n} = internal.setBody\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyUint8Array: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: Uint8Array, contentType?: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: Uint8Array, contentType?: string): HttpClientRequest\n} = internal.bodyUint8Array\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyText: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: string, contentType?: string): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: string, contentType?: string): HttpClientRequest\n} = internal.bodyText\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyJson: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: unknown): (self: HttpClientRequest) => Effect.Effect<HttpClientRequest, Body.HttpBodyError>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: unknown): Effect.Effect<HttpClientRequest, Body.HttpBodyError>\n} = internal.bodyJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyUnsafeJson: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: unknown): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: unknown): HttpClientRequest\n} = internal.bodyUnsafeJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const schemaBodyJson: <A, I, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  (body: A): (self: HttpClientRequest) => Effect.Effect<HttpClientRequest, Body.HttpBodyError, R>\n  (self: HttpClientRequest, body: A): Effect.Effect<HttpClientRequest, Body.HttpBodyError, R>\n} = internal.schemaBodyJson\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyUrlParams: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (input: UrlParams.Input): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, input: UrlParams.Input): HttpClientRequest\n} = internal.bodyUrlParams\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyFormData: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (body: FormData): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, body: FormData): HttpClientRequest\n} = internal.bodyFormData\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyStream: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n   body: Stream.Stream<Uint8Array, unknown>,\n   options?: { readonly contentType?: string | undefined; readonly contentLength?: number | undefined } | undefined\n  ): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n   self: HttpClientRequest,\n   body: Stream.Stream<Uint8Array, unknown>,\n   options?: { readonly contentType?: string | undefined; readonly contentLength?: number | undefined } | undefined\n  ): HttpClientRequest\n} = internal.bodyStream\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyFile: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n   path: string,\n   options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ): (self: HttpClientRequest) => Effect.Effect<HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (\n   self: HttpClientRequest,\n   path: string,\n   options?: FileSystem.StreamOptions & { readonly contentType?: string }\n  ): Effect.Effect<HttpClientRequest, PlatformError.PlatformError, FileSystem.FileSystem>\n} = internal.bodyFile\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const bodyFileWeb: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (file: Body.HttpBody.FileLike): (self: HttpClientRequest) => HttpClientRequest\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (self: HttpClientRequest, file: Body.HttpBody.FileLike): HttpClientRequest\n} = internal.bodyFileWeb\n"],"names":["internal","TypeId","Symbol","for","make","get","post","patch","put","del","head","options","modify","setMethod","setHeader","setHeaders","basicAuth","bearerToken","accept","acceptJson","setUrl","prependUrl","appendUrl","updateUrl","setUrlParam","setUrlParams","appendUrlParam","appendUrlParams","setHash","removeHash","setBody","bodyUint8Array","bodyText","bodyJson","bodyUnsafeJson","schemaBodyJson","bodyUrlParams","bodyFormData","bodyStream","bodyFile","bodyFileWeb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,QAAQ,MAAM,iCAAiC;;AAOpD,MAAMC,MAAM,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAC;AA0D9E,MAAMC,IAAI,0LAKQJ,OAAa,CAAL,CAACI;AAM3B,MAAMC,GAAG,0LAAuEL,MAAY,EAAJ,CAACK;AAMzF,MAAMC,IAAI,0LAAsEN,OAAa,CAAL,CAACM;AAMzF,MAAMC,KAAK,0LAAsEP,QAAQ,AAAM,CAALO;AAM1F,MAAMC,GAAG,0LAAsER,MAAY,EAAJ,CAACQ;AAMxF,MAAMC,GAAG,0LAAsET,MAAY,EAAJ,CAACS;AAMxF,MAAMC,IAAI,0LAAuEV,OAAa,CAAL,CAACU;AAM1F,MAAMC,OAAO,0LAAsEX,QAAQ,CAACW,CAAO;AAMnG,MAAMC,MAAM,0LAWfZ,QAAQ,CAACY,AAAM;AAMZ,MAAMC,SAAS,0LAWlBb,QAAQ,CAACa,GAAS;AAMf,MAAMC,SAAS,0LAWlBd,QAAQ,CAACc,GAAS;AAMf,MAAMC,UAAU,0LAWnBf,QAAQ,CAACe,IAAU;AAMhB,MAAMC,SAAS,0LAelBhB,QAAQ,CAACgB,GAAS;AAMf,MAAMC,WAAW,0LAWpBjB,QAAQ,CAACiB,KAAW;AAMjB,MAAMC,MAAM,0LAWflB,QAAQ,CAACkB,AAAM;AAMZ,MAAMC,UAAU,0LAAmDnB,QAAQ,CAACmB,IAAU;AAMtF,MAAMC,MAAM,0LAWfpB,QAAQ,CAACoB,AAAM;AAMZ,MAAMC,UAAU,0LAWnBrB,QAAQ,CAACqB,IAAU;AAMhB,MAAMC,SAAS,0LAWlBtB,QAAQ,CAACsB,GAAS;AAMf,MAAMC,SAAS,0LAWlBvB,QAAQ,CAACuB,GAAS;AAMf,MAAMC,WAAW,0LAWpBxB,QAAQ,CAACwB,KAAW;AAMjB,MAAMC,YAAY,0LAWrBzB,QAAQ,CAACyB,MAAY;AAMlB,MAAMC,cAAc,0LAWvB1B,QAAQ,CAAC0B,QAAc;AAMpB,MAAMC,eAAe,0LAWxB3B,QAAQ,CAAC2B,SAAe;AAMrB,MAAMC,OAAO,0LAWhB5B,QAAQ,CAAC4B,CAAO;AAMb,MAAMC,UAAU,0LAAmD7B,QAAQ,CAAC6B,IAAU;AAMtF,MAAMC,OAAO,0LAWhB9B,QAAQ,CAAC8B,CAAO;AAMb,MAAMC,cAAc,0LAWvB/B,QAAQ,CAAC+B,QAAc;AAMpB,MAAMC,QAAQ,0LAWjBhC,QAAQ,CAACgC,EAAQ;AAMd,MAAMC,QAAQ,0LAWjBjC,QAAQ,CAACiC,EAAQ;AAMd,MAAMC,cAAc,0LAWvBlC,QAAQ,CAACkC,QAAc;AAMpB,MAAMC,cAAc,0LAMvBnC,QAAQ,CAACmC,QAAc;AAMpB,MAAMC,aAAa,0LAWtBpC,QAAQ,CAACoC,OAAa;AAMnB,MAAMC,YAAY,0LAWrBrC,QAAQ,CAACqC,MAAY;AAMlB,MAAMC,UAAU,0LAkBnBtC,QAAQ,CAACsC,IAAU;AAMhB,MAAMC,QAAQ,0LAkBjBvC,QAAQ,CAACuC,EAAQ;AAMd,MAAMC,WAAW,0LAWpBxC,QAAQ,CAACwC,KAAW","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5148, "column": 0}, "map": {"version":3,"file":"etag.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/etag.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Layer from \"effect/Layer\"\nimport type * as Etag from \"../Etag.js\"\nimport type * as FileSystem from \"../FileSystem.js\"\nimport type * as Body from \"../HttpBody.js\"\n\n/** @internal */\nexport const GeneratorTypeId: Etag.GeneratorTypeId = Symbol.for(\n  \"@effect/platform/Etag/Generator\"\n) as Etag.GeneratorTypeId\n\n/** @internal */\nexport const tag = Context.GenericTag<Etag.Generator>(\"@effect/platform/Etag/Generator\")\n\n/** @internal */\nexport const toString = (self: Etag.Etag): string => {\n  switch (self._tag) {\n    case \"Weak\":\n      return `W/\"${self.value}\"`\n    case \"Strong\":\n      return `\"${self.value}\"`\n  }\n}\n\nconst fromFileInfo = (info: FileSystem.File.Info) => {\n  const mtime = info.mtime._tag === \"Some\"\n    ? info.mtime.value.getTime().toString(16)\n    : \"0\"\n  return `${info.size.toString(16)}-${mtime}`\n}\n\nconst fromFileWeb = (file: Body.HttpBody.FileLike) => {\n  return `${file.size.toString(16)}-${file.lastModified.toString(16)}`\n}\n\n/** @internal */\nexport const layer = Layer.succeed(\n  tag,\n  tag.of({\n    [GeneratorTypeId]: GeneratorTypeId,\n    fromFileInfo(info) {\n      return Effect.sync(() => ({ _tag: \"Strong\", value: fromFileInfo(info) }))\n    },\n    fromFileWeb(file) {\n      return Effect.sync(() => ({ _tag: \"Strong\", value: fromFileWeb(file) }))\n    }\n  })\n)\n\n/** @internal */\nexport const layerWeak = Layer.succeed(\n  tag,\n  tag.of({\n    [GeneratorTypeId]: GeneratorTypeId,\n    fromFileInfo(info) {\n      return Effect.sync(() => ({ _tag: \"Weak\", value: fromFileInfo(info) }))\n    },\n    fromFileWeb(file) {\n      return Effect.sync(() => ({ _tag: \"Weak\", value: fromFileWeb(file) }))\n    }\n  })\n)\n"],"names":["Context","Effect","Layer","GeneratorTypeId","Symbol","for","tag","GenericTag","toString","self","_tag","value","fromFileInfo","info","mtime","getTime","size","fromFileWeb","file","lastModified","layer","succeed","of","sync","layerWeak"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,KAAK,MAAM,cAAc;;;;AAM9B,MAAMC,eAAe,GAAA,WAAA,GAAyBC,MAAM,CAACC,GAAG,CAC7D,iCAAiC,CACV;AAGlB,MAAMC,GAAG,GAAA,WAAA,0JAAGN,OAAO,CAACO,KAAAA,AAAU,EAAiB,iCAAiC,CAAC;AAGjF,MAAMC,QAAQ,IAAIC,IAAe,IAAY;IAClD,OAAQA,IAAI,CAACC,IAAI;QACf,KAAK,MAAM;YACT,OAAO,CAAA,GAAA,EAAMD,IAAI,CAACE,KAAK,CAAA,CAAA,CAAG;QAC5B,KAAK,QAAQ;YACX,OAAO,CAAA,CAAA,EAAIF,IAAI,CAACE,KAAK,CAAA,CAAA,CAAG;IAC5B;AACF,CAAC;AAED,MAAMC,YAAY,IAAIC,IAA0B,IAAI;IAClD,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACJ,IAAI,KAAK,MAAM,GACpCG,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,OAAO,EAAE,CAACP,QAAQ,CAAC,EAAE,CAAC,GACvC,GAAG;IACP,OAAO,GAAGK,IAAI,CAACG,IAAI,CAACR,QAAQ,CAAC,EAAE,CAAC,CAAA,CAAA,EAAIM,KAAK,EAAE;AAC7C,CAAC;AAED,MAAMG,WAAW,IAAIC,IAA4B,IAAI;IACnD,OAAO,GAAGA,IAAI,CAACF,IAAI,CAACR,QAAQ,CAAC,EAAE,CAAC,CAAA,CAAA,EAAIU,IAAI,CAACC,YAAY,CAACX,QAAQ,CAAC,EAAE,CAAC,EAAE;AACtE,CAAC;AAGM,MAAMY,KAAK,GAAA,WAAA,wJAAGlB,KAAK,CAACmB,IAAAA,AAAO,EAChCf,GAAG,EAAA,WAAA,GACHA,GAAG,CAACgB,EAAE,CAAC;IACL,CAACnB,eAAe,CAAA,EAAGA,eAAe;IAClCS,YAAYA,EAACC,IAAI;QACf,6JAAOZ,MAAM,CAACsB,AAAI,EAAC,IAAA,CAAO;gBAAEb,IAAI,EAAE,QAAQ;gBAAEC,KAAK,EAAEC,YAAY,CAACC,IAAI;YAAC,CAAE,CAAC,CAAC;IAC3E,CAAC;IACDI,WAAWA,EAACC,IAAI;QACd,QAAOjB,MAAM,CAACsB,qJAAAA,AAAI,EAAC,IAAA,CAAO;gBAAEb,IAAI,EAAE,QAAQ;gBAAEC,KAAK,EAAEM,WAAW,CAACC,IAAI;YAAC,CAAE,CAAC,CAAC;IAC1E;CACD,CAAC,CACH;AAGM,MAAMM,SAAS,GAAA,WAAA,wJAAGtB,KAAK,CAACmB,IAAAA,AAAO,EACpCf,GAAG,EAAA,WAAA,GACHA,GAAG,CAACgB,EAAE,CAAC;IACL,CAACnB,eAAe,CAAA,EAAGA,eAAe;IAClCS,YAAYA,EAACC,IAAI;QACf,6JAAOZ,MAAM,CAACsB,AAAI,EAAC,IAAA,CAAO;gBAAEb,IAAI,EAAE,MAAM;gBAAEC,KAAK,EAAEC,YAAY,CAACC,IAAI;YAAC,CAAE,CAAC,CAAC;IACzE,CAAC;IACDI,WAAWA,EAACC,IAAI;QACd,6JAAOjB,MAAM,CAACsB,AAAI,EAAC,IAAA,CAAO;gBAAEb,IAAI,EAAE,MAAM;gBAAEC,KAAK,EAAEM,WAAW,CAACC,IAAI;YAAC,CAAE,CAAC,CAAC;IACxE;CACD,CAAC,CACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5214, "column": 0}, "map": {"version":3,"file":"Etag.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/Etag.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type { Layer } from \"effect/Layer\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport type * as Body from \"./HttpBody.js\"\nimport * as internal from \"./internal/etag.js\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type Etag = Weak | Strong\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Weak {\n  readonly _tag: \"Weak\"\n  readonly value: string\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Strong {\n  readonly _tag: \"Strong\"\n  readonly value: string\n}\n\n/**\n * @since 1.0.0\n * @category convertions\n */\nexport const toString: (self: Etag) => string = internal.toString\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const GeneratorTypeId: unique symbol = internal.GeneratorTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type GeneratorTypeId = typeof GeneratorTypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Generator {\n  readonly [GeneratorTypeId]: GeneratorTypeId\n  readonly fromFileInfo: (info: FileSystem.File.Info) => Effect.Effect<Etag>\n  readonly fromFileWeb: (file: Body.HttpBody.FileLike) => Effect.Effect<Etag>\n}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const Generator: Context.Tag<Generator, Generator> = internal.tag\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layer: Layer<Generator> = internal.layer\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layerWeak: Layer<Generator> = internal.layerWeak\n"],"names":["internal","toString","GeneratorTypeId","Generator","tag","layer","layerWeak"],"mappings":";;;;;;;AAQA,OAAO,KAAKA,QAAQ,MAAM,oBAAoB;;AA8BvC,MAAMC,QAAQ,6KAA2BD,QAAQ,CAACC,EAAQ;AAM1D,MAAMC,eAAe,6KAAkBF,QAAQ,CAACE,SAAe;AAsB/D,MAAMC,SAAS,6KAAsCH,MAAY,EAAJ,CAACI;AAM9D,MAAMC,KAAK,6KAAqBL,QAAQ,AAAM,CAALK;AAMzC,MAAMC,SAAS,6KAAqBN,QAAQ,CAACM,GAAS","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5234, "column": 0}, "map": {"version":3,"file":"httpPlatform.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpPlatform.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport { identity, pipe } from \"effect/Function\"\nimport * as Layer from \"effect/Layer\"\nimport * as Stream from \"effect/Stream\"\nimport * as Etag from \"../Etag.js\"\nimport * as FileSystem from \"../FileSystem.js\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Body from \"../HttpBody.js\"\nimport type * as Platform from \"../HttpPlatform.js\"\nimport type * as ServerResponse from \"../HttpServerResponse.js\"\nimport * as serverResponse from \"./httpServerResponse.js\"\n\n/** @internal */\nexport const TypeId: Platform.TypeId = Symbol.for(\"@effect/platform/HttpPlatform\") as Platform.TypeId\n\n/** @internal */\nexport const tag = Context.GenericTag<Platform.HttpPlatform>(\"@effect/platform/HttpPlatform\")\n\n/** @internal */\nexport const make = (impl: {\n  readonly fileResponse: (\n    path: string,\n    status: number,\n    statusText: string | undefined,\n    headers: Headers.Headers,\n    start: number,\n    end: number | undefined,\n    contentLength: number\n  ) => ServerResponse.HttpServerResponse\n  readonly fileWebResponse: (\n    file: Body.HttpBody.FileLike,\n    status: number,\n    statusText: string | undefined,\n    headers: Headers.Headers,\n    options?: FileSystem.StreamOptions\n  ) => ServerResponse.HttpServerResponse\n}): Effect.Effect<Platform.HttpPlatform, never, FileSystem.FileSystem | Etag.Generator> =>\n  Effect.gen(function*() {\n    const fs = yield* FileSystem.FileSystem\n    const etagGen = yield* Etag.Generator\n\n    return tag.of({\n      [TypeId]: TypeId,\n      fileResponse(path, options) {\n        return pipe(\n          Effect.bindTo(fs.stat(path), \"info\"),\n          Effect.bind(\"etag\", ({ info }) => etagGen.fromFileInfo(info)),\n          Effect.map(({ etag, info }) => {\n            const start = Number(options?.offset ?? 0)\n            const end = options?.bytesToRead !== undefined ? start + Number(options.bytesToRead) : undefined\n            const headers = Headers.set(\n              options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n              \"etag\",\n              Etag.toString(etag)\n            )\n            if (info.mtime._tag === \"Some\") {\n              ;(headers as any)[\"last-modified\"] = info.mtime.value.toUTCString()\n            }\n            const contentLength = end !== undefined ? end - start : Number(info.size) - start\n            return impl.fileResponse(\n              path,\n              options?.status ?? 200,\n              options?.statusText,\n              headers,\n              start,\n              end,\n              contentLength\n            )\n          })\n        )\n      },\n      fileWebResponse(file, options) {\n        return Effect.map(etagGen.fromFileWeb(file), (etag) => {\n          const headers = Headers.merge(\n            options?.headers ? Headers.fromInput(options.headers) : Headers.empty,\n            Headers.unsafeFromRecord({\n              etag: Etag.toString(etag),\n              \"last-modified\": new Date(file.lastModified).toUTCString()\n            })\n          )\n          return impl.fileWebResponse(\n            file,\n            options?.status ?? 200,\n            options?.statusText,\n            headers,\n            options\n          )\n        })\n      }\n    })\n  })\n\n/** @internal */\nexport const layer = Layer.effect(\n  tag,\n  Effect.flatMap(FileSystem.FileSystem, (fs) =>\n    make({\n      fileResponse(path, status, statusText, headers, start, end, contentLength) {\n        return serverResponse.stream(\n          fs.stream(path, {\n            offset: start,\n            bytesToRead: end !== undefined ? end - start : undefined\n          }),\n          { contentLength, headers, status, statusText }\n        )\n      },\n      fileWebResponse(file, status, statusText, headers, _options) {\n        return serverResponse.stream(\n          Stream.fromReadableStream(() => file.stream() as ReadableStream<Uint8Array>, identity),\n          { headers, status, statusText }\n        )\n      }\n    }))\n).pipe(\n  Layer.provide(Etag.layerWeak)\n)\n"],"names":["Context","Effect","identity","pipe","Layer","Stream","Etag","FileSystem","Headers","serverResponse","TypeId","Symbol","for","tag","GenericTag","make","impl","gen","fs","etagGen","Generator","of","fileResponse","path","options","bindTo","stat","bind","info","fromFileInfo","map","etag","start","Number","offset","end","bytesToRead","undefined","headers","set","fromInput","empty","toString","mtime","_tag","value","toUTCString","contentLength","size","status","statusText","fileWebResponse","file","fromFileWeb","merge","unsafeFromRecord","Date","lastModified","layer","effect","flatMap","stream","_options","fromReadableStream","provide","layerWeak"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5315, "column": 0}, "map": {"version":3,"file":"httpServer.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpServer.ts"],"sourcesContent":["import * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport { dual } from \"effect/Function\"\nimport * as Layer from \"effect/Layer\"\nimport type * as Scope from \"effect/Scope\"\nimport type * as App from \"../HttpApp.js\"\nimport * as Client from \"../HttpClient.js\"\nimport * as ClientRequest from \"../HttpClientRequest.js\"\nimport type * as Middleware from \"../HttpMiddleware.js\"\nimport type * as Server from \"../HttpServer.js\"\nimport type * as ServerRequest from \"../HttpServerRequest.js\"\nimport * as internalEtag from \"./etag.js\"\nimport * as internalFileSystem from \"./fileSystem.js\"\nimport * as internalPlatform from \"./httpPlatform.js\"\nimport * as internalPath from \"./path.js\"\n\n/** @internal */\nexport const TypeId: Server.TypeId = Symbol.for(\"@effect/platform/HttpServer\") as Server.TypeId\n\n/** @internal */\nexport const serverTag = Context.GenericTag<Server.HttpServer>(\"@effect/platform/HttpServer\")\n\nconst serverProto = {\n  [TypeId]: TypeId\n}\n\n/** @internal */\nexport const isServer = (u: unknown): u is Server.HttpServer => typeof u === \"object\" && u !== null && TypeId in u\n\n/** @internal */\nexport const make = (\n  options: {\n    readonly serve: (\n      httpApp: App.Default<unknown>,\n      middleware?: Middleware.HttpMiddleware\n    ) => Effect.Effect<void, never, Scope.Scope>\n    readonly address: Server.Address\n  }\n): Server.HttpServer => Object.assign(Object.create(serverProto), options)\n\n/** @internal */\nexport const serve = dual<\n  {\n    (): <E, R>(\n      httpApp: App.Default<E, R>\n    ) => Layer.Layer<never, never, Server.HttpServer | Exclude<R, ServerRequest.HttpServerRequest | Scope.Scope>>\n    <E, R, App extends App.Default<any, any>>(middleware: Middleware.HttpMiddleware.Applied<App, E, R>): (\n      httpApp: App.Default<E, R>\n    ) => Layer.Layer<\n      never,\n      never,\n      Server.HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest | Scope.Scope>\n    >\n  },\n  {\n    <E, R>(\n      httpApp: App.Default<E, R>\n    ): Layer.Layer<never, never, Server.HttpServer | Exclude<R, ServerRequest.HttpServerRequest | Scope.Scope>>\n    <E, R, App extends App.Default<any, any>>(\n      httpApp: App.Default<E, R>,\n      middleware: Middleware.HttpMiddleware.Applied<App, E, R>\n    ): Layer.Layer<\n      never,\n      never,\n      Server.HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest | Scope.Scope>\n    >\n  }\n>(\n  (args) => Effect.isEffect(args[0]),\n  <E, R, App extends App.Default<any, any>>(\n    httpApp: App.Default<E, R>,\n    middleware?: Middleware.HttpMiddleware.Applied<App, E, R>\n  ): Layer.Layer<\n    never,\n    never,\n    Server.HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest | Scope.Scope>\n  > =>\n    Layer.scopedDiscard(\n      Effect.flatMap(\n        serverTag,\n        (server) => server.serve(httpApp, middleware!)\n      )\n    ) as any\n)\n\n/** @internal */\nexport const serveEffect = dual<\n  {\n    (): <E, R>(\n      httpApp: App.Default<E, R>\n    ) => Effect.Effect<\n      void,\n      never,\n      Server.HttpServer | Scope.Scope | Exclude<R, ServerRequest.HttpServerRequest>\n    >\n    <E, R, App extends App.Default<any, any>>(middleware: Middleware.HttpMiddleware.Applied<App, E, R>): (\n      httpApp: App.Default<E, R>\n    ) => Effect.Effect<\n      void,\n      never,\n      Server.HttpServer | Scope.Scope | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest>\n    >\n  },\n  {\n    <E, R>(\n      httpApp: App.Default<E, R>\n    ): Effect.Effect<void, never, Server.HttpServer | Scope.Scope | Exclude<R, ServerRequest.HttpServerRequest>>\n    <E, R, App extends App.Default<any, any>>(\n      httpApp: App.Default<E, R>,\n      middleware: Middleware.HttpMiddleware.Applied<App, E, R>\n    ): Effect.Effect<\n      void,\n      never,\n      Server.HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest> | Scope.Scope\n    >\n  }\n>(\n  (args) => Effect.isEffect(args[0]),\n  (<E, R, App extends App.Default<any, any>>(\n    httpApp: App.Default<E, R>,\n    middleware: Middleware.HttpMiddleware.Applied<App, E, R>\n  ): Effect.Effect<\n    void,\n    never,\n    Server.HttpServer | Exclude<R, ServerRequest.HttpServerRequest> | Scope.Scope\n  > =>\n    Effect.flatMap(\n      serverTag,\n      (server) => server.serve(httpApp, middleware)\n    )) as any\n)\n\n/** @internal */\nexport const formatAddress = (address: Server.Address): string => {\n  switch (address._tag) {\n    case \"UnixAddress\":\n      return `unix://${address.path}`\n    case \"TcpAddress\":\n      return `http://${address.hostname}:${address.port}`\n  }\n}\n\n/** @internal */\nexport const addressWith = <A, E, R>(\n  effect: (address: Server.Address) => Effect.Effect<A, E, R>\n): Effect.Effect<A, E, Server.HttpServer | R> =>\n  Effect.flatMap(\n    serverTag,\n    (server) => effect(server.address)\n  )\n\n/** @internal */\nexport const addressFormattedWith = <A, E, R>(\n  effect: (address: string) => Effect.Effect<A, E, R>\n): Effect.Effect<A, E, Server.HttpServer | R> =>\n  Effect.flatMap(\n    serverTag,\n    (server) => effect(formatAddress(server.address))\n  )\n\n/** @internal */\nexport const logAddress: Effect.Effect<void, never, Server.HttpServer> = addressFormattedWith((_) =>\n  Effect.log(`Listening on ${_}`)\n)\n\n/** @internal */\nexport const withLogAddress = <A, E, R>(\n  layer: Layer.Layer<A, E, R>\n): Layer.Layer<A, E, R | Exclude<Server.HttpServer, A>> =>\n  Layer.effectDiscard(logAddress).pipe(\n    Layer.provideMerge(layer)\n  )\n\n/** @internal */\nexport const makeTestClient = addressWith((address) =>\n  Effect.flatMap(Client.HttpClient, (client) => {\n    if (address._tag === \"UnixAddress\") {\n      return Effect.die(new Error(\"HttpServer.layerTestClient: UnixAddress not supported\"))\n    }\n    const host = address.hostname === \"0.0.0.0\" ? \"127.0.0.1\" : address.hostname\n    const url = `http://${host}:${address.port}`\n    return Effect.succeed(Client.mapRequest(client, ClientRequest.prependUrl(url)))\n  })\n)\n\n/** @internal */\nexport const layerTestClient = Layer.effect(Client.HttpClient, makeTestClient)\n\n/** @internal */\nexport const layerContext = Layer.mergeAll(\n  internalPlatform.layer,\n  internalPath.layer,\n  internalEtag.layerWeak\n).pipe(\n  Layer.provideMerge(internalFileSystem.layerNoop({}))\n)\n"],"names":["Context","Effect","dual","Layer","Client","ClientRequest","internalEtag","internalFileSystem","internalPlatform","internalPath","TypeId","Symbol","for","serverTag","GenericTag","serverProto","isServer","u","make","options","Object","assign","create","serve","args","isEffect","httpApp","middleware","scopedDiscard","flatMap","server","serveEffect","formatAddress","address","_tag","path","hostname","port","addressWith","effect","addressFormattedWith","logAddress","_","log","withLogAddress","layer","effectDiscard","pipe","provideMerge","makeTestClient","HttpClient","client","die","Error","host","url","succeed","mapRequest","prependUrl","layerTestClient","layerContext","mergeAll","layerWeak","layerNoop"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5388, "column": 0}, "map": {"version":3,"file":"HttpServer.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpServer.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type * as Layer from \"effect/Layer\"\nimport type * as Scope from \"effect/Scope\"\nimport type { Generator } from \"./Etag.js\"\nimport type { FileSystem } from \"./FileSystem.js\"\nimport type * as App from \"./HttpApp.js\"\nimport type * as Client from \"./HttpClient.js\"\nimport type * as Middleware from \"./HttpMiddleware.js\"\nimport type { HttpPlatform } from \"./HttpPlatform.js\"\nimport type * as ServerRequest from \"./HttpServerRequest.js\"\nimport * as internal from \"./internal/httpServer.js\"\nimport type { Path } from \"./Path.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpServer {\n  readonly [TypeId]: TypeId\n  readonly serve: {\n    <E, R>(httpApp: App.Default<E, R>): Effect.Effect<\n      void,\n      never,\n      Exclude<R, ServerRequest.HttpServerRequest> | Scope.Scope\n    >\n    <E, R, App extends App.Default<any, any>>(\n      httpApp: App.Default<E, R>,\n      middleware: Middleware.HttpMiddleware.Applied<App, E, R>\n    ): Effect.Effect<\n      void,\n      never,\n      Exclude<R, ServerRequest.HttpServerRequest> | Scope.Scope\n    >\n  }\n  readonly address: Address\n}\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface ServeOptions {\n  readonly respond: boolean\n}\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport type Address = UnixAddress | TcpAddress\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport interface TcpAddress {\n  readonly _tag: \"TcpAddress\"\n  readonly hostname: string\n  readonly port: number\n}\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport interface UnixAddress {\n  readonly _tag: \"UnixAddress\"\n  readonly path: string\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const HttpServer: Context.Tag<HttpServer, HttpServer> = internal.serverTag\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const make: (\n  options: {\n    readonly serve: (\n      httpApp: App.Default<unknown>,\n      middleware?: Middleware.HttpMiddleware\n    ) => Effect.Effect<void, never, Scope.Scope>\n    readonly address: Address\n  }\n) => HttpServer = internal.make\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const serve: {\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  (): <E, R>(\n    httpApp: App.Default<E, R>\n  ) => Layer.Layer<never, never, HttpServer | Exclude<R, ServerRequest.HttpServerRequest | Scope.Scope>>\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  <E, R, App extends App.Default<any, any>>(middleware: Middleware.HttpMiddleware.Applied<App, E, R>): (\n    httpApp: App.Default<E, R>\n  ) => Layer.Layer<\n    never,\n    never,\n    HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest | Scope.Scope>\n  >\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  <E, R>(httpApp: App.Default<E, R>): Layer.Layer<never, never, HttpServer | Exclude<R, ServerRequest.HttpServerRequest | Scope.Scope>>\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  <E, R, App extends App.Default<any, any>>(\n    httpApp: App.Default<E, R>,\n    middleware: Middleware.HttpMiddleware.Applied<App, E, R>\n  ): Layer.Layer<\n    never,\n    never,\n    HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest | Scope.Scope>\n  >\n} = internal.serve\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const serveEffect: {\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  (): <E, R>(\n    httpApp: App.Default<E, R>\n  ) => Effect.Effect<void, never, Scope.Scope | HttpServer | Exclude<R, ServerRequest.HttpServerRequest>>\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  <E, R, App extends App.Default<any, any>>(middleware: Middleware.HttpMiddleware.Applied<App, E, R>): (\n    httpApp: App.Default<E, R>\n  ) => Effect.Effect<\n    void,\n    never,\n    Scope.Scope | HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest>\n  >\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  <E, R>(httpApp: App.Default<E, R>): Effect.Effect<void, never, Scope.Scope | HttpServer | Exclude<R, ServerRequest.HttpServerRequest>>\n  /**\n   * @since 1.0.0\n   * @category accessors\n   */\n  <E, R, App extends App.Default<any, any>>(\n    httpApp: App.Default<E, R>,\n    middleware: Middleware.HttpMiddleware.Applied<App, E, R>\n  ): Effect.Effect<\n    void,\n    never,\n    Scope.Scope | HttpServer | Exclude<Effect.Effect.Context<App>, ServerRequest.HttpServerRequest>\n  >\n} = internal.serveEffect\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport const formatAddress: (address: Address) => string = internal.formatAddress\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport const addressWith: <A, E, R>(\n  effect: (address: Address) => Effect.Effect<A, E, R>\n) => Effect.Effect<A, E, HttpServer | R> = internal.addressWith\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport const addressFormattedWith: <A, E, R>(\n  effect: (address: string) => Effect.Effect<A, E, R>\n) => Effect.Effect<A, E, HttpServer | R> = internal.addressFormattedWith\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport const logAddress: Effect.Effect<void, never, HttpServer> = internal.logAddress\n\n/**\n * @since 1.0.0\n * @category address\n */\nexport const withLogAddress: <A, E, R>(layer: Layer.Layer<A, E, R>) => Layer.Layer<A, E, R | Exclude<HttpServer, A>> =\n  internal.withLogAddress\n\n/**\n * Layer producing an `HttpClient` with prepended url of the running http server.\n *\n * @since 1.0.0\n * @category layers\n */\nexport const layerTestClient: Layer.Layer<Client.HttpClient, never, Client.HttpClient | HttpServer> =\n  internal.layerTestClient\n\n/**\n * A Layer providing the `HttpPlatform`, `FileSystem`, `Etag.Generator`, and `Path`\n * services.\n *\n * The `FileSystem` service is a no-op implementation, so this layer is only\n * useful for platforms that have no file system.\n *\n * @since 1.0.0\n * @category layers\n */\nexport const layerContext: Layer.Layer<\n  | HttpPlatform\n  | FileSystem\n  | Generator\n  | Path\n> = internal.layerContext\n"],"names":["internal","TypeId","HttpServer","serverTag","make","serve","serveEffect","formatAddress","addressWith","addressFormattedWith","logAddress","withLogAddress","layerTestClient","layerContext"],"mappings":";;;;;;;;;;;;;;AAcA,OAAO,KAAKA,QAAQ,MAAM,0BAA0B;;AAO7C,MAAMC,MAAM,mLAAkBD,QAAQ,CAACC,AAAM;AAqE7C,MAAMC,UAAU,mLAAwCF,QAAQ,CAACG,GAAS;AAM1E,MAAMC,IAAI,mLAQCJ,OAAa,CAAL,CAACI;AAMpB,MAAMC,KAAK,mLAoCdL,QAAQ,AAAM,CAALK;AAMN,MAAMC,WAAW,mLAoCpBN,QAAQ,CAACM,KAAW;AAMjB,MAAMC,aAAa,mLAAiCP,QAAQ,CAACO,OAAa;AAM1E,MAAMC,WAAW,mLAEmBR,QAAQ,CAACQ,KAAW;AAMxD,MAAMC,oBAAoB,mLAEUT,QAAQ,CAACS,cAAoB;AAMjE,MAAMC,UAAU,mLAA2CV,QAAQ,CAACU,IAAU;AAM9E,MAAMC,cAAc,mLACzBX,QAAQ,CAACW,QAAc;AAQlB,MAAMC,eAAe,mLAC1BZ,QAAQ,CAACY,SAAe;AAYnB,MAAMC,YAAY,mLAKrBb,QAAQ,CAACa,MAAY","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5422, "column": 0}, "map": {"version":3,"file":"httpRouter.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/httpRouter.ts"],"sourcesContent":["import type * as Cause from \"effect/Cause\"\nimport * as Chunk from \"effect/Chunk\"\nimport * as Context from \"effect/Context\"\nimport * as Effect from \"effect/Effect\"\nimport * as Effectable from \"effect/Effectable\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport { dual } from \"effect/Function\"\nimport { globalValue } from \"effect/GlobalValue\"\nimport * as Inspectable from \"effect/Inspectable\"\nimport * as Layer from \"effect/Layer\"\nimport * as Option from \"effect/Option\"\nimport * as Predicate from \"effect/Predicate\"\nimport * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport * as Tracer from \"effect/Tracer\"\nimport type { Mutable } from \"effect/Types\"\nimport * as FindMyWay from \"find-my-way-ts\"\nimport type * as App from \"../HttpApp.js\"\nimport type * as Method from \"../HttpMethod.js\"\nimport type * as Router from \"../HttpRouter.js\"\nimport * as HttpServer from \"../HttpServer.js\"\nimport * as Error from \"../HttpServerError.js\"\nimport * as ServerRequest from \"../HttpServerRequest.js\"\nimport * as Respondable from \"../HttpServerRespondable.js\"\nimport type * as ServerResponse from \"../HttpServerResponse.js\"\n\n/** @internal */\nexport const TypeId: Router.TypeId = Symbol.for(\"@effect/platform/HttpRouter\") as Router.TypeId\n\n/** @internal */\nexport const RouteTypeId: Router.RouteTypeId = Symbol.for(\"@effect/platform/HttpRouter/Route\") as Router.RouteTypeId\n\n/** @internal */\nexport const RouteContextTypeId: Router.RouteContextTypeId = Symbol.for(\n  \"@effect/platform/HttpRouter/RouteContext\"\n) as Router.RouteContextTypeId\n\n/** @internal */\nexport const RouteContext = Context.GenericTag<Router.RouteContext>(\"@effect/platform/HttpRouter/RouteContext\")\n\nconst isRouter = (u: unknown): u is Router.HttpRouter<unknown, unknown> => Predicate.hasProperty(u, TypeId)\n\n/** @internal */\nexport const params = Effect.map(RouteContext, (_) => _.params)\n\n/** @internal */\nexport const schemaJson = <\n  R,\n  I extends Partial<{\n    readonly method: Method.HttpMethod\n    readonly url: string\n    readonly cookies: Readonly<Record<string, string | undefined>>\n    readonly headers: Readonly<Record<string, string | undefined>>\n    readonly pathParams: Readonly<Record<string, string | undefined>>\n    readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n    readonly body: any\n  }>,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(\n    Effect.context<ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams | Router.RouteContext>(),\n    (context) => {\n      const request = Context.get(context, ServerRequest.HttpServerRequest)\n      const searchParams = Context.get(context, ServerRequest.ParsedSearchParams)\n      const routeContext = Context.get(context, RouteContext)\n      return Effect.flatMap(request.json, (body) =>\n        parse({\n          method: request.method,\n          url: request.url,\n          headers: request.headers,\n          cookies: request.cookies,\n          pathParams: routeContext.params,\n          searchParams,\n          body\n        }))\n    }\n  )\n}\n\n/** @internal */\nexport const schemaNoBody = <\n  R,\n  I extends Partial<{\n    readonly method: Method.HttpMethod\n    readonly url: string\n    readonly cookies: Readonly<Record<string, string | undefined>>\n    readonly headers: Readonly<Record<string, string | undefined>>\n    readonly pathParams: Readonly<Record<string, string | undefined>>\n    readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n  }>,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(\n    Effect.context<ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams | Router.RouteContext>(),\n    (context) => {\n      const request = Context.get(context, ServerRequest.HttpServerRequest)\n      const searchParams = Context.get(context, ServerRequest.ParsedSearchParams)\n      const routeContext = Context.get(context, RouteContext)\n      return parse({\n        method: request.method,\n        url: request.url,\n        headers: request.headers,\n        cookies: request.cookies,\n        pathParams: routeContext.params,\n        searchParams\n      })\n    }\n  )\n}\n\n/** @internal */\nexport const schemaParams = <A, I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(\n    Effect.context<ServerRequest.ParsedSearchParams | Router.RouteContext>(),\n    (context) => {\n      const searchParams = Context.get(context, ServerRequest.ParsedSearchParams)\n      const routeContext = Context.get(context, RouteContext)\n      return parse({ ...searchParams, ...routeContext.params })\n    }\n  )\n}\n\n/** @internal */\nexport const schemaPathParams = <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => {\n  const parse = Schema.decodeUnknown(schema, options)\n  return Effect.flatMap(RouteContext, (_) => parse(_.params))\n}\n\n/** @internal */\nexport const currentRouterConfig = globalValue(\n  \"@effect/platform/HttpRouter/currentRouterConfig\",\n  () => FiberRef.unsafeMake<Partial<FindMyWay.RouterConfig>>({})\n)\n\n/** @internal */\nexport const withRouterConfig: {\n  (config: Partial<FindMyWay.RouterConfig>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  <A, E, R>(effect: Effect.Effect<A, E, R>, config: Partial<FindMyWay.RouterConfig>): Effect.Effect<A, E, R>\n} = dual(\n  2,\n  <A, E, R>(effect: Effect.Effect<A, E, R>, config: Partial<FindMyWay.RouterConfig>): Effect.Effect<A, E, R> =>\n    Effect.locally(effect, currentRouterConfig, config)\n)\n\n/** @internal */\nexport const setRouterConfig = (config: Partial<FindMyWay.RouterConfig>) =>\n  Layer.locallyScoped(currentRouterConfig, config)\n\nclass RouterImpl<E = never, R = never> extends Effectable.StructuralClass<\n  ServerResponse.HttpServerResponse,\n  E | Error.RouteNotFound,\n  Exclude<R, Router.RouteContext>\n> implements Router.HttpRouter<E, R> {\n  readonly [TypeId]: Router.TypeId\n  constructor(\n    readonly routes: Chunk.Chunk<Router.Route<E, R>>,\n    readonly mounts: Chunk.Chunk<\n      readonly [\n        prefix: string,\n        httpApp: App.Default<E, R>,\n        options?: { readonly includePrefix?: boolean | undefined } | undefined\n      ]\n    >\n  ) {\n    super()\n    this[TypeId] = TypeId\n    this.httpApp = FiberRef.get(currentRouterConfig).pipe(\n      Effect.flatMap((config) => this.httpApp = toHttpApp(this, config) as any)\n    ) as any\n  }\n  private httpApp: Effect.Effect<\n    ServerResponse.HttpServerResponse,\n    E | Error.RouteNotFound,\n    Exclude<R, Router.RouteContext>\n  >\n  commit() {\n    return this.httpApp\n  }\n  toJSON() {\n    return {\n      _id: \"Router\",\n      routes: this.routes.toJSON(),\n      mounts: this.mounts.toJSON()\n    }\n  }\n  toString() {\n    return Inspectable.format(this)\n  }\n  [Inspectable.NodeInspectSymbol]() {\n    return this.toJSON()\n  }\n}\n\nconst toHttpApp = <E, R>(\n  self: Router.HttpRouter<E, R>,\n  config: Partial<FindMyWay.RouterConfig>\n): App.Default<E | Error.RouteNotFound, R> => {\n  const router = FindMyWay.make<Router.Route<E, R>>(config)\n  const mounts = Chunk.toReadonlyArray(self.mounts).map(([path, app, options]) =>\n    [\n      path,\n      new RouteContextImpl(\n        new RouteImpl(\n          \"*\",\n          options?.includePrefix ? `${path}/*` as Router.PathInput : \"/*\",\n          app,\n          options?.includePrefix ? Option.none() : Option.some(path),\n          false\n        ),\n        {}\n      ),\n      options\n    ] as const\n  )\n  const mountsLen = mounts.length\n  Chunk.forEach(self.routes, (route) => {\n    if (route.method === \"*\") {\n      router.all(route.path, route)\n    } else {\n      router.on(route.method, route.path, route)\n    }\n  })\n  return Effect.withFiberRuntime<\n    ServerResponse.HttpServerResponse,\n    E | Error.RouteNotFound,\n    R | ServerRequest.HttpServerRequest\n  >((fiber) => {\n    const context = Context.unsafeMake(new Map(fiber.getFiberRef(FiberRef.currentContext).unsafeMap))\n    const request = Context.unsafeGet(context, ServerRequest.HttpServerRequest)\n    if (mountsLen > 0) {\n      for (let i = 0; i < mountsLen; i++) {\n        const [path, routeContext, options] = mounts[i]\n        if (request.url.startsWith(path)) {\n          context.unsafeMap.set(RouteContext.key, routeContext)\n          if (options?.includePrefix !== true) {\n            context.unsafeMap.set(ServerRequest.HttpServerRequest.key, sliceRequestUrl(request, path))\n          }\n          return Effect.locally(\n            Effect.flatMap(routeContext.route.handler, Respondable.toResponse) as App.Default<E, R>,\n            FiberRef.currentContext,\n            context\n          )\n        }\n      }\n    }\n\n    let result = router.find(request.method, request.url)\n    if (result === undefined && request.method === \"HEAD\") {\n      result = router.find(\"GET\", request.url)\n    }\n    if (result === undefined) {\n      return Effect.fail(new Error.RouteNotFound({ request }))\n    }\n    const route = result.handler\n    if (route.prefix._tag === \"Some\") {\n      context.unsafeMap.set(ServerRequest.HttpServerRequest.key, sliceRequestUrl(request, route.prefix.value))\n    }\n    context.unsafeMap.set(ServerRequest.ParsedSearchParams.key, result.searchParams)\n    context.unsafeMap.set(RouteContext.key, new RouteContextImpl(route, result.params))\n\n    const span = Context.getOption(context, Tracer.ParentSpan)\n    if (span._tag === \"Some\" && span.value._tag === \"Span\") {\n      span.value.attribute(\"http.route\", route.path)\n    }\n\n    const handlerResponse = Effect.flatMap(route.handler, Respondable.toResponse)\n    return Effect.locally(\n      (route.uninterruptible ?\n        handlerResponse :\n        Effect.interruptible(handlerResponse)) as Effect.Effect<\n          ServerResponse.HttpServerResponse,\n          E,\n          Router.HttpRouter.ExcludeProvided<R>\n        >,\n      FiberRef.currentContext,\n      context\n    )\n  })\n}\n\nfunction sliceRequestUrl(request: ServerRequest.HttpServerRequest, prefix: string) {\n  const prefexLen = prefix.length\n  return request.modify({ url: request.url.length <= prefexLen ? \"/\" : request.url.slice(prefexLen) })\n}\n\nclass RouteImpl<E = never, R = never> extends Inspectable.Class implements Router.Route<E, R> {\n  readonly [RouteTypeId]: Router.RouteTypeId\n  constructor(\n    readonly method: Method.HttpMethod | \"*\",\n    readonly path: Router.PathInput,\n    readonly handler: Router.Route.Handler<E, R>,\n    readonly prefix = Option.none<string>(),\n    readonly uninterruptible = false\n  ) {\n    super()\n    this[RouteTypeId] = RouteTypeId\n  }\n  toJSON(): unknown {\n    return {\n      _id: \"@effect/platform/HttpRouter/Route\",\n      method: this.method,\n      path: this.path,\n      prefix: this.prefix.toJSON()\n    }\n  }\n}\n\nclass RouteContextImpl implements Router.RouteContext {\n  readonly [RouteContextTypeId]: Router.RouteContextTypeId\n  constructor(\n    readonly route: Router.Route<unknown, unknown>,\n    readonly params: Readonly<Record<string, string | undefined>>\n  ) {\n    this[RouteContextTypeId] = RouteContextTypeId\n  }\n}\n\n/** @internal */\nexport const empty: Router.HttpRouter<never> = new RouterImpl(Chunk.empty(), Chunk.empty())\n\n/** @internal */\nexport const fromIterable = <R extends Router.Route<any, any>>(\n  routes: Iterable<R>\n): Router.HttpRouter<\n  R extends Router.Route<infer E, infer _> ? E : never,\n  R extends Router.Route<infer _, infer Env> ? Env : never\n> => new RouterImpl(Chunk.fromIterable(routes), Chunk.empty()) as any\n\n/** @internal */\nexport const makeRoute = <E, R>(\n  method: Method.HttpMethod | \"*\",\n  path: Router.PathInput,\n  handler: Router.Route.Handler<E, R>,\n  options?: {\n    readonly prefix?: string | undefined\n    readonly uninterruptible?: boolean | undefined\n  } | undefined\n): Router.Route<E, Router.HttpRouter.ExcludeProvided<R>> =>\n  new RouteImpl(\n    method,\n    path,\n    handler,\n    options?.prefix ? Option.some(options.prefix) : Option.none(),\n    options?.uninterruptible ?? false\n  ) as any\n\n/** @internal */\nexport const append = dual<\n  <R1, E1>(\n    route: Router.Route<E1, R1>\n  ) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    route: Router.Route<E1, R1>\n  ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n>(2, (self, route) => new RouterImpl(Chunk.append(self.routes, route) as any, self.mounts))\n\n/** @internal */\nexport const concat = dual<\n  <R1, E1>(\n    that: Router.HttpRouter<E1, R1>\n  ) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E | E1, R | R1>,\n  <E, R, E1, R1>(self: Router.HttpRouter<E, R>, that: Router.HttpRouter<E1, R1>) => Router.HttpRouter<E | E1, R | R1>\n>(2, (self, that) => concatAll(self, that))\n\n/** @internal */\nexport const concatAll = <Routers extends ReadonlyArray<Router.HttpRouter<E, R>>, E, R>(\n  ...routers: Routers\n) =>\n  new RouterImpl(\n    routers.reduce((cur, acc) => Chunk.appendAll(cur, acc.routes), Chunk.empty<Router.Route<E, R>>()),\n    routers.reduce(\n      (cur, acc) => Chunk.appendAll(cur, acc.mounts),\n      Chunk.empty<\n        readonly [\n          prefix: string,\n          httpApp: App.Default<E, R>,\n          options?: { readonly includePrefix?: boolean | undefined } | undefined\n        ]\n      >()\n    )\n  ) as any\n\nconst removeTrailingSlash = (\n  path: Router.PathInput\n): Router.PathInput => (path.endsWith(\"/\") ? path.slice(0, -1) : path) as any\n\n/** @internal */\nexport const prefixPath: {\n  (prefix: string): (self: string) => string\n  (self: string, prefix: string): string\n} = dual(2, (self, prefix) => {\n  prefix = removeTrailingSlash(prefix)\n  return self === \"/\" ? prefix : prefix + self\n})\n\n/** @internal */\nexport const prefixAll = dual<\n  (prefix: Router.PathInput) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E, R>,\n  <E, R>(self: Router.HttpRouter<E, R>, prefix: Router.PathInput) => Router.HttpRouter<E, R>\n>(\n  2,\n  (self, prefix) => {\n    prefix = removeTrailingSlash(prefix)\n    return new RouterImpl(\n      Chunk.map(self.routes, (route) =>\n        new RouteImpl(\n          route.method,\n          route.path === \"/\" ? prefix : prefix + route.path as Router.PathInput,\n          route.handler,\n          Option.orElse(\n            Option.map(route.prefix, (_) => prefix + _),\n            () => Option.some(prefix)\n          ),\n          route.uninterruptible\n        )),\n      Chunk.map(self.mounts, ([path, app]) => [path === \"/\" ? prefix : prefix + path, app])\n    )\n  }\n)\n\n/** @internal */\nexport const mount = dual<\n  <R1, E1>(\n    path: `/${string}`,\n    that: Router.HttpRouter<E1, R1>\n  ) => <E, R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E | E1, R | R1>,\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: `/${string}`,\n    that: Router.HttpRouter<E1, R1>\n  ) => Router.HttpRouter<E | E1, R | R1>\n>(\n  3,\n  (self, path, that) => concat(self, prefixAll(that, path))\n)\n\n/** @internal */\nexport const mountApp = dual<\n  <R1, E1>(\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: {\n      readonly includePrefix?: boolean | undefined\n    } | undefined\n  ) => <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: {\n      readonly includePrefix?: boolean | undefined\n    } | undefined\n  ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n>(\n  (args) => Predicate.hasProperty(args[0], TypeId),\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: {\n      readonly includePrefix?: boolean | undefined\n    } | undefined\n  ): Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>> =>\n    new RouterImpl<any, any>(self.routes, Chunk.append(self.mounts, [removeTrailingSlash(path), that, options])) as any\n)\n\n/** @internal */\nexport const route = (method: Method.HttpMethod | \"*\"): {\n  <R1, E1>(\n    path: Router.PathInput,\n    handler: Router.Route.Handler<E1, R1>,\n    options?: {\n      readonly uninterruptible?: boolean | undefined\n    } | undefined\n  ): <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<E1 | E, R | Router.HttpRouter.ExcludeProvided<R1>>\n  <E, R, E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    path: Router.PathInput,\n    handler: Router.Route.Handler<E1, R1>,\n    options?: {\n      readonly uninterruptible?: boolean | undefined\n    } | undefined\n  ): Router.HttpRouter<E1 | E, R | Router.HttpRouter.ExcludeProvided<R1>>\n} =>\n  dual<\n    <R1, E1>(\n      path: Router.PathInput,\n      handler: Router.Route.Handler<R1, E1>\n    ) => <E, R>(\n      self: Router.HttpRouter<E, R>\n    ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n    <E, R, E1, R1>(\n      self: Router.HttpRouter<E, R>,\n      path: Router.PathInput,\n      handler: Router.Route.Handler<E1, R1>,\n      options?: {\n        readonly uninterruptible?: boolean | undefined\n      } | undefined\n    ) => Router.HttpRouter<E | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n  >((args) => isRouter(args[0]), (self, path, handler, options) =>\n    new RouterImpl<any, any>(\n      Chunk.append(\n        self.routes,\n        new RouteImpl(\n          method,\n          path,\n          handler,\n          Option.none(),\n          options?.uninterruptible ?? false\n        )\n      ),\n      self.mounts\n    ))\n\n/** @internal */\nexport const all = route(\"*\")\n\n/** @internal */\nexport const get = route(\"GET\")\n\n/** @internal */\nexport const post = route(\"POST\")\n\n/** @internal */\nexport const put = route(\"PUT\")\n\n/** @internal */\nexport const patch = route(\"PATCH\")\n\n/** @internal */\nexport const del = route(\"DELETE\")\n\n/** @internal */\nexport const head = route(\"HEAD\")\n\n/** @internal */\nexport const options = route(\"OPTIONS\")\n\n/** @internal */\nexport const use = dual<\n  <E, R, R1, E1>(\n    f: (self: Router.Route.Middleware<E, R>) => App.Default<E1, R1>\n  ) => (self: Router.HttpRouter<E, R>) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, R1, E1>(\n    self: Router.HttpRouter<E, R>,\n    f: (self: Router.Route.Middleware<E, R>) => App.Default<E1, R1>\n  ) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>\n>(2, (self, f) =>\n  new RouterImpl<any, any>(\n    Chunk.map(\n      self.routes,\n      (route) =>\n        new RouteImpl(\n          route.method,\n          route.path,\n          f(Effect.flatMap(route.handler, Respondable.toResponse)) as any,\n          route.prefix,\n          route.uninterruptible\n        )\n    ),\n    Chunk.map(\n      self.mounts,\n      ([path, app]) => [path, f(app as any)]\n    )\n  ))\n\n/** @internal */\nexport const transform = dual<\n  <E, R, R1, E1>(\n    f: (self: Router.Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ) => (self: Router.HttpRouter<E, R>) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, R1, E1>(\n    self: Router.HttpRouter<E, R>,\n    f: (self: Router.Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ) => Router.HttpRouter<E1, Router.HttpRouter.ExcludeProvided<R1>>\n>(2, (self, f) =>\n  new RouterImpl<any, any>(\n    Chunk.map(\n      self.routes,\n      (route) =>\n        new RouteImpl(\n          route.method,\n          route.path,\n          f(route.handler) as any,\n          route.prefix,\n          route.uninterruptible\n        )\n    ),\n    Chunk.map(\n      self.mounts,\n      ([path, app]) => [path, Effect.flatMap(f(app as any), Respondable.toResponse)]\n    )\n  ))\n\n/** @internal */\nexport const catchAll = dual<\n  <E, E2, R2>(\n    f: (e: E) => Router.Route.Handler<E2, R2>\n  ) => <R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>,\n  <E, R, E2, R2>(\n    self: Router.HttpRouter<E, R>,\n    f: (e: E) => Router.Route.Handler<E2, R2>\n  ) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>\n>(2, (self, f) => transform(self, Effect.catchAll(f)))\n\n/** @internal */\nexport const catchAllCause = dual<\n  <E, E2, R2>(\n    f: (e: Cause.Cause<E>) => Router.Route.Handler<E2, R2>\n  ) => <R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>,\n  <E, R, E2, R2>(\n    self: Router.HttpRouter<E, R>,\n    f: (e: Cause.Cause<E>) => Router.Route.Handler<E2, R2>\n  ) => Router.HttpRouter<E2, R | Router.HttpRouter.ExcludeProvided<R2>>\n>(2, (self, f) => transform(self, Effect.catchAllCause(f)))\n\n/** @internal */\nexport const catchTag = dual<\n  <K extends (E extends { _tag: string } ? E[\"_tag\"] : never), E, E1, R1>(\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Router.Route.Handler<E1, R1>\n  ) => <R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<Exclude<E, { _tag: K }> | E1, R | Router.HttpRouter.ExcludeProvided<R1>>,\n  <E, R, K extends (E extends { _tag: string } ? E[\"_tag\"] : never), E1, R1>(\n    self: Router.HttpRouter<E, R>,\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Router.Route.Handler<E1, R1>\n  ) => Router.HttpRouter<Exclude<E, { _tag: K }> | E1, R | Router.HttpRouter.ExcludeProvided<R1>>\n>(3, (self, k, f) => transform(self, Effect.catchTag(k, f)))\n\n/** @internal */\nexport const catchTags: {\n  <\n    E,\n    Cases extends (E extends { _tag: string } ? {\n        [K in E[\"_tag\"]]+?: (error: Extract<E, { _tag: K }>) => Router.Route.Handler<any, any>\n      } :\n      {})\n  >(\n    cases: Cases\n  ): <R>(self: Router.HttpRouter<E, R>) => Router.HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, infer E, any>) ? E : never\n    }[keyof Cases],\n    | R\n    | Router.HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, any, infer R>) ? R : never\n      }[keyof Cases]\n    >\n  >\n  <\n    R,\n    E,\n    Cases extends (E extends { _tag: string } ? {\n        [K in E[\"_tag\"]]+?: (error: Extract<E, { _tag: K }>) => Router.Route.Handler<any, any>\n      } :\n      {})\n  >(\n    self: Router.HttpRouter<E, R>,\n    cases: Cases\n  ): Router.HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, infer E, any>) ? E : never\n    }[keyof Cases],\n    | R\n    | Router.HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends ((...args: Array<any>) => Effect.Effect<any, any, infer R>) ? R : never\n      }[keyof Cases]\n    >\n  >\n} = dual(2, (self: Router.HttpRouter<any, any>, cases: {}) => use(self, Effect.catchTags(cases)))\n\nexport const provideService = dual<\n  <T extends Context.Tag<any, any>>(\n    tag: T,\n    service: Context.Tag.Service<T>\n  ) => <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>,\n  <E, R, T extends Context.Tag<any, any>>(\n    self: Router.HttpRouter<E, R>,\n    tag: T,\n    service: Context.Tag.Service<T>\n  ) => Router.HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>\n>(3, <E, R, T extends Context.Tag<any, any>>(\n  self: Router.HttpRouter<E, R>,\n  tag: T,\n  service: Context.Tag.Service<T>\n): Router.HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>> => use(self, Effect.provideService(tag, service)))\n\n/* @internal */\nexport const provideServiceEffect = dual<\n  <T extends Context.Tag<any, any>, R1, E1>(\n    tag: T,\n    effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n  ) => <E, R>(\n    self: Router.HttpRouter<E, R>\n  ) => Router.HttpRouter<\n    E | E1,\n    Exclude<\n      R | Router.HttpRouter.ExcludeProvided<R1>,\n      Context.Tag.Identifier<T>\n    >\n  >,\n  <E, R, T extends Context.Tag<any, any>, R1, E1>(\n    self: Router.HttpRouter<E, R>,\n    tag: T,\n    effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n  ) => Router.HttpRouter<\n    E | E1,\n    Exclude<\n      R | Router.HttpRouter.ExcludeProvided<R1>,\n      Context.Tag.Identifier<T>\n    >\n  >\n>(3, <E, R, T extends Context.Tag<any, any>, R1, E1>(\n  self: Router.HttpRouter<E, R>,\n  tag: T,\n  effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n): Router.HttpRouter<\n  E | E1,\n  Exclude<\n    R | Router.HttpRouter.ExcludeProvided<R1>,\n    Context.Tag.Identifier<T>\n  >\n> => use(self, Effect.provideServiceEffect(tag, effect)) as any)\n\nconst makeService = <E, R>(): Router.HttpRouter.Service<E, R> => {\n  let router = empty as Router.HttpRouter<E, R>\n  return {\n    addRoute(route) {\n      return Effect.sync(() => {\n        router = append(router, route)\n      })\n    },\n    all(path, handler, options) {\n      return Effect.sync(() => {\n        router = all(router, path, handler, options)\n      })\n    },\n    get(path, handler, options) {\n      return Effect.sync(() => {\n        router = get(router, path, handler, options)\n      })\n    },\n    post(path, handler, options) {\n      return Effect.sync(() => {\n        router = post(router, path, handler, options)\n      })\n    },\n    put(path, handler, options) {\n      return Effect.sync(() => {\n        router = put(router, path, handler, options)\n      })\n    },\n    patch(path, handler, options) {\n      return Effect.sync(() => {\n        router = patch(router, path, handler, options)\n      })\n    },\n    del(path, handler, options) {\n      return Effect.sync(() => {\n        router = del(router, path, handler, options)\n      })\n    },\n    head(path, handler, options) {\n      return Effect.sync(() => {\n        router = head(router, path, handler, options)\n      })\n    },\n    options(path, handler, opts) {\n      return Effect.sync(() => {\n        router = options(router, path, handler, opts)\n      })\n    },\n    router: Effect.sync(() => router),\n    mount(path, that) {\n      return Effect.sync(() => {\n        router = mount(router, path, that)\n      })\n    },\n    mountApp(path, app, options) {\n      return Effect.sync(() => {\n        router = mountApp(router, path, app, options)\n      })\n    },\n    concat(that) {\n      return Effect.sync(() => {\n        router = concat(router, that)\n      })\n    }\n  }\n}\n\n/* @internal */\nexport const Tag =\n  <const Name extends string>(id: Name) =>\n  <Self, R = never, E = unknown>(): Router.HttpRouter.TagClass<\n    Self,\n    Name,\n    E,\n    R | Router.HttpRouter.DefaultServices\n  > => {\n    const Err = globalThis.Error as any\n    const limit = Err.stackTraceLimit\n    Err.stackTraceLimit = 2\n    const creationError = new Err()\n    Err.stackTraceLimit = limit\n\n    function TagClass() {}\n    const TagClass_ = TagClass as any as Mutable<Router.HttpRouter.TagClass<Self, Name, E, R>>\n    Object.setPrototypeOf(TagClass, Object.getPrototypeOf(Context.GenericTag<Self, any>(id)))\n    TagClass.key = id\n    Object.defineProperty(TagClass, \"stack\", {\n      get() {\n        return creationError.stack\n      }\n    })\n    TagClass_.Live = Layer.sync(TagClass_, makeService)\n    TagClass_.router = Effect.flatMap(TagClass_, (_) => _.router)\n    TagClass_.use = (f) =>\n      TagClass_.pipe(\n        Effect.flatMap(f),\n        Layer.scopedDiscard,\n        Layer.provide(TagClass_.Live)\n      )\n    TagClass_.unwrap = (f) =>\n      TagClass_.pipe(\n        Effect.flatMap((_) => _.router),\n        Effect.map(f),\n        Layer.unwrapEffect,\n        Layer.provide(TagClass_.Live)\n      )\n    TagClass_.serve = (middleware) => TagClass_.unwrap(HttpServer.serve(middleware as any))\n    return TagClass as any\n  }\n"],"names":["Chunk","Context","Effect","Effectable","FiberRef","dual","globalValue","Inspectable","Layer","Option","Predicate","Schema","Tracer","FindMyWay","HttpServer","Error","ServerRequest","Respondable","TypeId","Symbol","for","RouteTypeId","RouteContextTypeId","RouteContext","GenericTag","isRouter","u","hasProperty","params","map","_","schemaJson","schema","options","parse","decodeUnknown","flatMap","context","request","get","HttpServerRequest","searchParams","ParsedSearchParams","routeContext","json","body","method","url","headers","cookies","pathParams","schemaNoBody","schemaParams","schemaPathParams","currentRouterConfig","unsafeMake","withRouterConfig","effect","config","locally","setRouterConfig","locallyScoped","RouterImpl","StructuralClass","routes","mounts","constructor","httpApp","pipe","toHttpApp","commit","toJSON","_id","toString","format","NodeInspectSymbol","self","router","make","toReadonlyArray","path","app","RouteContextImpl","RouteImpl","includePrefix","none","some","mountsLen","length","forEach","route","all","on","withFiberRuntime","fiber","Map","getFiberRef","currentContext","unsafeMap","unsafeGet","i","startsWith","set","key","sliceRequestUrl","handler","toResponse","result","find","undefined","fail","RouteNotFound","prefix","_tag","value","span","getOption","ParentSpan","attribute","handlerResponse","uninterruptible","interruptible","prefexLen","modify","slice","Class","empty","fromIterable","makeRoute","append","concat","that","concatAll","routers","reduce","cur","acc","appendAll","removeTrailingSlash","endsWith","prefixPath","prefixAll","orElse","mount","mountApp","args","post","put","patch","del","head","use","f","transform","catchAll","catchAllCause","catchTag","k","catchTags","cases","provideService","tag","service","provideServiceEffect","makeService","addRoute","sync","opts","Tag","id","Err","globalThis","limit","stackTraceLimit","creationError","TagClass","TagClass_","Object","setPrototypeOf","getPrototypeOf","defineProperty","stack","Live","scopedDiscard","provide","unwrap","unwrapEffect","serve","middleware"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,UAAU,MAAM,mBAAmB;AAC/C,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AACjD,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAC7C,OAAO,KAAKC,MAAM,MAAM,eAAe;AAEvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAEvC,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAI3C,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AAC9C,OAAO,KAAKC,aAAa,MAAM,yBAAyB;AACxD,OAAO,KAAKC,WAAW,MAAM,6BAA6B;;;;;;;;;;;;;;;;;;;AAInD,MAAMC,MAAM,GAAA,WAAA,GAAkBC,MAAM,CAACC,GAAG,CAAC,6BAA6B,CAAkB;AAGxF,MAAMC,WAAW,GAAA,WAAA,GAAuBF,MAAM,CAACC,GAAG,CAAC,mCAAmC,CAAuB;AAG7G,MAAME,kBAAkB,GAAA,WAAA,GAA8BH,MAAM,CAACC,GAAG,CACrE,0CAA0C,CACd;AAGvB,MAAMG,YAAY,GAAA,WAAA,0JAAGtB,OAAO,CAACuB,KAAAA,AAAU,EAAsB,0CAA0C,CAAC;AAE/G,MAAMC,QAAQ,IAAIC,CAAU,OAA+ChB,SAAS,CAACiB,yJAAAA,AAAW,EAACD,CAAC,EAAER,MAAM,CAAC;AAGpG,MAAMU,MAAM,GAAA,WAAA,yJAAG1B,MAAM,AAAC2B,AAAG,CAAHA,CAAIN,YAAY,GAAGO,CAAC,GAAKA,CAAC,CAACF,MAAM,CAAC;AAGxD,MAAMG,UAAU,GAAGA,CAaxBC,MAA8B,EAC9BC,OAAkC,KAChC;IACF,MAAMC,KAAK,yKAAGvB,MAAM,CAACwB,SAAAA,AAAa,EAACH,MAAM,EAAEC,OAAO,CAAC;IACnD,6JAAO/B,MAAM,CAACkC,GAAAA,AAAO,wJACnBlC,MAAM,CAACmC,GAAAA,AAAO,EAA4F,IACzGA,OAAO,IAAI;QACV,MAAMC,OAAO,IAAGrC,OAAO,CAACsC,oJAAAA,AAAG,EAACF,OAAO,6LAAErB,aAAa,CAACwB,MAAiB,CAAC;QACrE,MAAMC,YAAY,0JAAGxC,MAAW,AAAHsC,CAAD,CAAKF,AAAJE,OAAW,6LAAEvB,aAAa,CAAC0B,OAAkB,CAAC;QAC3E,MAAMC,YAAY,0JAAG1C,MAAQsC,AAAG,CAAJ,CAAKF,AAAJE,OAAW,EAAEhB,YAAY,CAAC;QACvD,6JAAOrB,MAAM,CAACkC,GAAAA,AAAO,EAACE,OAAO,CAACM,IAAI,GAAGC,IAAI,GACvCX,KAAK,CAAC;gBACJY,MAAM,EAAER,OAAO,CAACQ,MAAM;gBACtBC,GAAG,EAAET,OAAO,CAACS,GAAG;gBAChBC,OAAO,EAAEV,OAAO,CAACU,OAAO;gBACxBC,OAAO,EAAEX,OAAO,CAACW,OAAO;gBACxBC,UAAU,EAAEP,YAAY,CAACf,MAAM;gBAC/Ba,YAAY;gBACZI;aACD,CAAC,CAAC;IACP,CAAC,CACF;AACH,CAAC;AAGM,MAAMM,YAAY,GAAGA,CAY1BnB,MAA8B,EAC9BC,OAAkC,KAChC;IACF,MAAMC,KAAK,yKAAGvB,MAAM,CAACwB,SAAAA,AAAa,EAACH,MAAM,EAAEC,OAAO,CAAC;IACnD,6JAAO/B,MAAM,CAACkC,GAAAA,AAAO,wJACnBlC,MAAM,CAACmC,GAAAA,AAAO,EAA4F,IACzGA,OAAO,IAAI;QACV,MAAMC,OAAO,0JAAGrC,MAAQsC,AAAG,CAAJ,CAAKF,AAAJE,OAAW,6LAAEvB,aAAa,CAACwB,MAAiB,CAAC;QACrE,MAAMC,YAAY,0JAAGxC,MAAQsC,AAAG,CAAJ,CAACA,AAAIF,OAAO,EAAErB,aAAa,CAAC0B,kMAAkB,CAAC;QAC3E,MAAMC,YAAY,0JAAG1C,MAAQsC,AAAG,CAAJ,CAACA,AAAIF,OAAO,EAAEd,YAAY,CAAC;QACvD,OAAOW,KAAK,CAAC;YACXY,MAAM,EAAER,OAAO,CAACQ,MAAM;YACtBC,GAAG,EAAET,OAAO,CAACS,GAAG;YAChBC,OAAO,EAAEV,OAAO,CAACU,OAAO;YACxBC,OAAO,EAAEX,OAAO,CAACW,OAAO;YACxBC,UAAU,EAAEP,YAAY,CAACf,MAAM;YAC/Ba;SACD,CAAC;IACJ,CAAC,CACF;AACH,CAAC;AAGM,MAAMW,YAAY,GAAGA,CAC1BpB,MAA8B,EAC9BC,OAAkC,KAChC;IACF,MAAMC,KAAK,yKAAGvB,MAAM,CAACwB,SAAAA,AAAa,EAACH,MAAM,EAAEC,OAAO,CAAC;IACnD,6JAAO/B,MAAM,CAACkC,GAAAA,AAAO,MACnBlC,MAAM,CAACmC,qJAAO,AAAPA,EAAiE,IACvEA,OAAO,IAAI;QACV,MAAMI,YAAY,0JAAGxC,MAAQsC,AAAG,CAAJ,CAACA,AAAIF,OAAO,6LAAErB,aAAa,CAAC0B,OAAkB,CAAC;QAC3E,MAAMC,YAAY,0JAAG1C,MAAQsC,AAAG,CAAJ,CAACA,AAAIF,OAAO,EAAEd,YAAY,CAAC;QACvD,OAAOW,KAAK,CAAC;YAAE,GAAGO,YAAY;YAAE,GAAGE,YAAY,CAACf,MAAAA;QAAM,CAAE,CAAC;IAC3D,CAAC,CACF;AACH,CAAC;AAGM,MAAMyB,gBAAgB,GAAGA,CAC9BrB,MAA8B,EAC9BC,OAAkC,KAChC;IACF,MAAMC,KAAK,GAAGvB,MAAM,CAACwB,+KAAAA,AAAa,EAACH,MAAM,EAAEC,OAAO,CAAC;IACnD,6JAAO/B,MAAM,CAACkC,GAAAA,AAAO,EAACb,YAAY,GAAGO,CAAC,GAAKI,KAAK,CAACJ,CAAC,CAACF,MAAM,CAAC,CAAC;AAC7D,CAAC;AAGM,MAAM0B,mBAAmB,GAAA,WAAA,8JAAGhD,cAAAA,AAAW,EAC5C,iDAAiD,EACjD,4JAAMF,QAAQ,CAACmD,IAAAA,AAAU,EAAkC,CAAA,CAAE,CAAC,CAC/D;AAGM,MAAMC,gBAAgB,GAAA,WAAA,2JAGzBnD,OAAI,AAAJA,EACF,CAAC,EACD,CAAUoD,MAA8B,EAAEC,MAAuC,wJAC/ExD,MAAM,CAACyD,IAAAA,AAAO,EAACF,MAAM,EAAEH,mBAAmB,EAAEI,MAAM,CAAC,CACtD;AAGM,MAAME,eAAe,IAAIF,MAAuC,wJACrElD,KAAK,CAACqD,UAAa,AAAbA,EAAcP,mBAAmB,EAAEI,MAAM,CAAC;AAElD,MAAMI,UAAiC,SAAQ3D,UAAU,CAAC4D,6JAIzD;IAGYC,MAAA,CAAA;IACAC,MAAA,CAAA;IAHF,CAAC/C,MAAM,CAAA,CAAA;IAChBgD,YACWF,MAAuC,EACvCC,MAMR,CAAA;QAED,KAAK,EAAE;QATE,IAAA,CAAAD,MAAM,GAANA,MAAM;QACN,IAAA,CAAAC,MAAM,GAANA,MAAM;QASf,IAAI,CAAC/C,MAAM,CAAC,GAAGA,MAAM;QACrB,IAAI,CAACiD,OAAO,2JAAG/D,MAASmC,AAAG,EAAJ,AAAKe,CAAJf,kBAAuB,CAAC,CAAC6B,IAAI,uJACnDlE,MAAM,CAACkC,GAAAA,AAAO,GAAEsB,MAAM,GAAK,IAAI,CAACS,OAAO,GAAGE,SAAS,CAAC,IAAI,EAAEX,MAAM,CAAQ,CAAC,CACnE;IACV;IACQS,OAAO,CAAA;IAKfG,MAAMA,CAAA,EAAA;QACJ,OAAO,IAAI,CAACH,OAAO;IACrB;IACAI,MAAMA,CAAA,EAAA;QACJ,OAAO;YACLC,GAAG,EAAE,QAAQ;YACbR,MAAM,EAAE,IAAI,CAACA,MAAM,CAACO,MAAM,EAAE;YAC5BN,MAAM,EAAE,IAAI,CAACA,MAAM,CAACM,MAAM;SAC3B;IACH;IACAE,QAAQA,CAAA,EAAA;QACN,OAAOlE,WAAW,CAACmE,wJAAAA,AAAM,EAAC,IAAI,CAAC;IACjC;IACA,wJAACnE,WAAW,CAACoE,QAAiB,CAAA,GAAC;QAC7B,OAAO,IAAI,CAACJ,MAAM,EAAE;IACtB;;AAGF,MAAMF,SAAS,GAAGA,CAChBO,IAA6B,EAC7BlB,MAAuC,KACI;IAC3C,MAAMmB,MAAM,yKAAGhE,OAAUiE,AAAI,EAAqBpB,AAA1B,CAACoB,KAA+B,CAAC;IACzD,MAAMb,MAAM,uJAAGjE,KAAK,CAAC+E,aAAAA,AAAe,EAACH,IAAI,CAACX,MAAM,CAAC,CAACpC,GAAG,CAAC,CAAC,CAACmD,IAAI,EAAEC,GAAG,EAAEhD,OAAO,CAAC,GACzE;YACE+C,IAAI;YACJ,IAAIE,gBAAgB,CAClB,IAAIC,SAAS,CACX,GAAG,EACHlD,OAAO,EAAEmD,aAAa,GAAG,GAAGJ,IAAI,CAAA,EAAA,CAAwB,GAAG,IAAI,EAC/DC,GAAG,EACHhD,OAAO,EAAEmD,aAAa,yJAAG3E,MAAM,CAAC4E,AAAI,EAAE,QAAG5E,MAAM,CAAC6E,kJAAAA,AAAI,EAACN,IAAI,CAAC,EAC1D,KAAK,CACN,EACD,CAAA,CAAE,CACH;YACD/C,OAAO;SACC,CACX;IACD,MAAMsD,SAAS,GAAGtB,MAAM,CAACuB,MAAM;yJAC/BxF,KAAK,CAACyF,IAAAA,AAAO,EAACb,IAAI,CAACZ,MAAM,GAAG0B,KAAK,IAAI;QACnC,IAAIA,KAAK,CAAC5C,MAAM,KAAK,GAAG,EAAE;YACxB+B,MAAM,CAACc,GAAG,CAACD,KAAK,CAACV,IAAI,EAAEU,KAAK,CAAC;QAC/B,CAAC,MAAM;YACLb,MAAM,CAACe,EAAE,CAACF,KAAK,CAAC5C,MAAM,EAAE4C,KAAK,CAACV,IAAI,EAAEU,KAAK,CAAC;QAC5C;IACF,CAAC,CAAC;IACF,6JAAOxF,MAAM,CAAC2F,YAAAA,AAAgB,GAI3BC,KAAK,IAAI;QACV,MAAMzD,OAAO,OAAGpC,OAAO,CAACsD,wJAAU,AAAVA,EAAW,IAAIwC,GAAG,CAACD,KAAK,CAACE,WAAW,qJAAC5F,QAAQ,CAAC6F,QAAc,CAAC,CAACC,SAAS,CAAC,CAAC;QACjG,MAAM5D,OAAO,GAAGrC,OAAO,CAACkG,2JAAAA,AAAS,EAAC9D,OAAO,6LAAErB,aAAa,CAACwB,MAAiB,CAAC;QAC3E,IAAI+C,SAAS,GAAG,CAAC,EAAE;YACjB,IAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,SAAS,EAAEa,CAAC,EAAE,CAAE;gBAClC,MAAM,CAACpB,IAAI,EAAErC,YAAY,EAAEV,OAAO,CAAC,GAAGgC,MAAM,CAACmC,CAAC,CAAC;gBAC/C,IAAI9D,OAAO,CAACS,GAAG,CAACsD,UAAU,CAACrB,IAAI,CAAC,EAAE;oBAChC3C,OAAO,CAAC6D,SAAS,CAACI,GAAG,CAAC/E,YAAY,CAACgF,GAAG,EAAE5D,YAAY,CAAC;oBACrD,IAAIV,OAAO,EAAEmD,aAAa,KAAK,IAAI,EAAE;wBACnC/C,OAAO,CAAC6D,SAAS,CAACI,GAAG,4LAACtF,aAAa,CAACwB,MAAiB,CAAC+D,GAAG,EAAEC,eAAe,CAAClE,OAAO,EAAE0C,IAAI,CAAC,CAAC;oBAC5F;oBACA,6JAAO9E,MAAM,CAACyD,GAAAA,AAAO,EACnBzD,MAAM,CAACkC,yJAAAA,AAAO,EAACO,YAAY,CAAC+C,KAAK,CAACe,OAAO,iLAAExF,WAAW,CAACyF,CAAU,CAAsB,sJACvFtG,QAAQ,CAAC6F,QAAc,EACvB5D,OAAO,CACR;gBACH;YACF;QACF;QAEA,IAAIsE,MAAM,GAAG9B,MAAM,CAAC+B,IAAI,CAACtE,OAAO,CAACQ,MAAM,EAAER,OAAO,CAACS,GAAG,CAAC;QACrD,IAAI4D,MAAM,KAAKE,SAAS,IAAIvE,OAAO,CAACQ,MAAM,KAAK,MAAM,EAAE;YACrD6D,MAAM,GAAG9B,MAAM,CAAC+B,IAAI,CAAC,KAAK,EAAEtE,OAAO,CAACS,GAAG,CAAC;QAC1C;QACA,IAAI4D,MAAM,KAAKE,SAAS,EAAE;YACxB,6JAAO3G,MAAM,CAAC4G,AAAI,EAAC,6KAAI/F,KAAK,CAACgG,UAAa,CAAC;gBAAEzE;YAAO,CAAE,CAAC,CAAC;QAC1D;QACA,MAAMoD,KAAK,GAAGiB,MAAM,CAACF,OAAO;QAC5B,IAAIf,KAAK,CAACsB,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;YAChC5E,OAAO,CAAC6D,SAAS,CAACI,GAAG,4LAACtF,aAAa,CAACwB,MAAiB,CAAC+D,GAAG,EAAEC,eAAe,CAAClE,OAAO,EAAEoD,KAAK,CAACsB,MAAM,CAACE,KAAK,CAAC,CAAC;QAC1G;QACA7E,OAAO,CAAC6D,SAAS,CAACI,GAAG,4LAACtF,aAAa,CAAC0B,OAAkB,CAAC6D,GAAG,EAAEI,MAAM,CAAClE,YAAY,CAAC;QAChFJ,OAAO,CAAC6D,SAAS,CAACI,GAAG,CAAC/E,YAAY,CAACgF,GAAG,EAAE,IAAIrB,gBAAgB,CAACQ,KAAK,EAAEiB,MAAM,CAAC/E,MAAM,CAAC,CAAC;QAEnF,MAAMuF,IAAI,yJAAGlH,OAAO,CAACmH,KAAAA,AAAS,EAAC/E,OAAO,oJAAEzB,MAAM,CAACyG,MAAU,CAAC;QAC1D,IAAIF,IAAI,CAACF,IAAI,KAAK,MAAM,IAAIE,IAAI,CAACD,KAAK,CAACD,IAAI,KAAK,MAAM,EAAE;YACtDE,IAAI,CAACD,KAAK,CAACI,SAAS,CAAC,YAAY,EAAE5B,KAAK,CAACV,IAAI,CAAC;QAChD;QAEA,MAAMuC,eAAe,yJAAGrH,MAAM,CAACkC,GAAAA,AAAO,EAACsD,KAAK,CAACe,OAAO,EAAExF,WAAW,CAACyF,gLAAU,CAAC;QAC7E,6JAAOxG,MAAM,CAACyD,GAAAA,AAAO,EAClB+B,KAAK,CAAC8B,eAAe,GACpBD,eAAe,yJACfrH,MAAM,CAACuH,SAAa,AAAbA,EAAcF,eAAe,CAAC,qJAKvCnH,QAAQ,CAAC6F,SAAc,EACvB5D,OAAO,CACR;IACH,CAAC,CAAC;AACJ,CAAC;AAED,SAASmE,eAAeA,CAAClE,OAAwC,EAAE0E,MAAc;IAC/E,MAAMU,SAAS,GAAGV,MAAM,CAACxB,MAAM;IAC/B,OAAOlD,OAAO,CAACqF,MAAM,CAAC;QAAE5E,GAAG,EAAET,OAAO,CAACS,GAAG,CAACyC,MAAM,IAAIkC,SAAS,GAAG,GAAG,GAAGpF,OAAO,CAACS,GAAG,CAAC6E,KAAK,CAACF,SAAS;IAAC,CAAE,CAAC;AACtG;AAEA,MAAMvC,SAAgC,gKAAQ5E,QAAiB,GAAN,CAACsH;IAG7C/E,MAAA,CAAA;IACAkC,IAAA,CAAA;IACAyB,OAAA,CAAA;IACAO,MAAA,CAAA;IACAQ,eAAA,CAAA;IANF,CAACnG,WAAW,CAAA,CAAA;IACrB6C,YACWpB,MAA+B,EAC/BkC,IAAsB,EACtByB,OAAmC,EACnCO,MAAA,yJAASvG,MAAM,CAAC4E,AAAI,GAAU,EAC9BmC,eAAA,GAAkB,KAAK,CAAA;QAEhC,KAAK,EAAE;QANE,IAAA,CAAA1E,MAAM,GAANA,MAAM;QACN,IAAA,CAAAkC,IAAI,GAAJA,IAAI;QACJ,IAAA,CAAAyB,OAAO,GAAPA,OAAO;QACP,IAAA,CAAAO,MAAM,GAANA,MAAM;QACN,IAAA,CAAAQ,eAAe,GAAfA,eAAe;QAGxB,IAAI,CAACnG,WAAW,CAAC,GAAGA,WAAW;IACjC;IACAkD,MAAMA,CAAA,EAAA;QACJ,OAAO;YACLC,GAAG,EAAE,mCAAmC;YACxC1B,MAAM,EAAE,IAAI,CAACA,MAAM;YACnBkC,IAAI,EAAE,IAAI,CAACA,IAAI;YACfgC,MAAM,EAAE,IAAI,CAACA,MAAM,CAACzC,MAAM;SAC3B;IACH;;AAGF,MAAMW,gBAAgB;IAGTQ,KAAA,CAAA;IACA9D,MAAA,CAAA;IAHF,CAACN,kBAAkB,CAAA,CAAA;IAC5B4C,YACWwB,KAAqC,EACrC9D,MAAoD,CAAA;QADpD,IAAA,CAAA8D,KAAK,GAALA,KAAK;QACL,IAAA,CAAA9D,MAAM,GAANA,MAAM;QAEf,IAAI,CAACN,kBAAkB,CAAC,GAAGA,kBAAkB;IAC/C;;AAIK,MAAMwG,KAAK,GAAA,WAAA,GAA6B,IAAIhE,UAAU,CAAA,WAAA,wJAAC9D,KAAK,CAAC8H,EAAAA,AAAK,EAAE,GAAA,WAAA,uJAAE9H,KAAK,CAAC8H,GAAAA,AAAK,EAAE,CAAC;AAGpF,MAAMC,YAAY,IACvB/D,MAAmB,GAIhB,IAAIF,UAAU,sJAAC9D,KAAK,CAAC+H,SAAAA,AAAY,EAAC/D,MAAM,CAAC,EAAEhE,KAAK,CAAC8H,uJAAAA,AAAK,EAAE,CAAQ;AAG9D,MAAME,SAAS,GAAGA,CACvBlF,MAA+B,EAC/BkC,IAAsB,EACtByB,OAAmC,EACnCxE,OAGa,GAEb,IAAIkD,SAAS,CACXrC,MAAM,EACNkC,IAAI,EACJyB,OAAO,EACPxE,OAAO,EAAE+E,MAAM,yJAAGvG,MAAM,CAAC6E,AAAI,AAAJA,EAAKrD,OAAO,CAAC+E,MAAM,CAAC,yJAAGvG,MAAM,CAAC4E,AAAI,EAAE,GAC7DpD,OAAO,EAAEuF,eAAe,IAAI,KAAK,CAC3B;AAGH,MAAMS,MAAM,GAAA,WAAA,2JAAG5H,OAAAA,AAAI,EAQxB,CAAC,EAAE,CAACuE,IAAI,EAAEc,KAAK,GAAK,IAAI5B,UAAU,sJAAC9D,KAAK,CAACiI,GAAAA,AAAM,EAACrD,IAAI,CAACZ,MAAM,EAAE0B,KAAK,CAAQ,EAAEd,IAAI,CAACX,MAAM,CAAC,CAAC;AAGpF,MAAMiE,MAAM,GAAA,WAAA,2JAAG7H,OAAAA,AAAI,EAKxB,CAAC,EAAE,CAACuE,IAAI,EAAEuD,IAAI,GAAKC,SAAS,CAACxD,IAAI,EAAEuD,IAAI,CAAC,CAAC;AAGpC,MAAMC,SAAS,GAAGA,CACvB,GAAGC,OAAgB,GAEnB,IAAIvE,UAAU,CACZuE,OAAO,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,wJAAKxI,KAAK,CAACyI,MAAS,AAATA,EAAUF,GAAG,EAAEC,GAAG,CAACxE,MAAM,CAAC,uJAAEhE,KAAK,CAAC8H,EAAAA,AAAK,EAAsB,CAAC,GACjGO,OAAO,CAACC,MAAM,CACZ,CAACC,GAAG,EAAEC,GAAG,IAAKxI,KAAK,CAACyI,0JAAAA,AAAS,EAACF,GAAG,EAAEC,GAAG,CAACvE,MAAM,CAAC,uJAC9CjE,KAAK,CAAC8H,EAAAA,AAAK,EAMR,CACJ,CACK;AAEV,MAAMY,mBAAmB,IACvB1D,IAAsB,GACAA,IAAI,CAAC2D,QAAQ,CAAC,GAAG,CAAC,GAAG3D,IAAI,CAAC4C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG5C,IAAY;AAGtE,MAAM4D,UAAU,GAAA,WAAA,2JAGnBvI,OAAI,AAAJA,EAAK,CAAC,EAAE,CAACuE,IAAI,EAAEoC,MAAM,KAAI;IAC3BA,MAAM,GAAG0B,mBAAmB,CAAC1B,MAAM,CAAC;IACpC,OAAOpC,IAAI,KAAK,GAAG,GAAGoC,MAAM,GAAGA,MAAM,GAAGpC,IAAI;AAC9C,CAAC,CAAC;AAGK,MAAMiE,SAAS,GAAA,WAAA,2JAAGxI,OAAI,AAAJA,EAIvB,CAAC,EACD,CAACuE,IAAI,EAAEoC,MAAM,KAAI;IACfA,MAAM,GAAG0B,mBAAmB,CAAC1B,MAAM,CAAC;IACpC,OAAO,IAAIlD,UAAU,CACnB9D,KAAK,CAAC6B,qJAAAA,AAAG,EAAC+C,IAAI,CAACZ,MAAM,GAAG0B,KAAK,GAC3B,IAAIP,SAAS,CACXO,KAAK,CAAC5C,MAAM,EACZ4C,KAAK,CAACV,IAAI,KAAK,GAAG,GAAGgC,MAAM,GAAGA,MAAM,GAAGtB,KAAK,CAACV,IAAwB,EACrEU,KAAK,CAACe,OAAO,wJACbhG,MAAM,CAACqI,EAAAA,AAAM,wJACXrI,MAAM,AAACoB,AAAG,CAAHA,CAAI6D,KAAK,CAACsB,MAAM,GAAGlF,CAAC,GAAKkF,MAAM,GAAGlF,CAAC,CAAC,EAC3C,0JAAMrB,MAAM,CAAC6E,AAAI,EAAC0B,MAAM,CAAC,CAC1B,EACDtB,KAAK,CAAC8B,eAAe,CACtB,CAAC,EACJxH,KAAK,CAAC6B,qJAAAA,AAAG,EAAC+C,IAAI,CAACX,MAAM,EAAE,CAAC,CAACe,IAAI,EAAEC,GAAG,CAAC,GAAK;YAACD,IAAI,KAAK,GAAG,GAAGgC,MAAM,GAAGA,MAAM,GAAGhC,IAAI;YAAEC,GAAG;SAAC,CAAC,CACtF;AACH,CAAC,CACF;AAGM,MAAM8D,KAAK,GAAA,WAAA,2JAAG1I,OAAAA,AAAI,EAWvB,CAAC,EACD,CAACuE,IAAI,EAAEI,IAAI,EAAEmD,IAAI,GAAKD,MAAM,CAACtD,IAAI,EAAEiE,SAAS,CAACV,IAAI,EAAEnD,IAAI,CAAC,CAAC,CAC1D;AAGM,MAAMgE,QAAQ,GAAA,WAAA,2JAAG3I,OAAAA,AAAI,GAmBzB4I,IAAI,4JAAKvI,SAAS,CAACiB,IAAAA,AAAW,EAACsH,IAAI,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAAC,EAChD,CACE0D,IAA6B,EAC7BI,IAAkB,EAClBmD,IAAyB,EACzBlG,OAEa,GAEb,IAAI6B,UAAU,CAAWc,IAAI,CAACZ,MAAM,EAAEhE,KAAK,CAACiI,wJAAAA,AAAM,EAACrD,IAAI,CAACX,MAAM,EAAE;QAACyE,mBAAmB,CAAC1D,IAAI,CAAC;QAAEmD,IAAI;QAAElG,OAAO;KAAC,CAAC,CAAQ,CACtH;AAGM,MAAMyD,KAAK,IAAI5C,MAA+B,OAmBnDzC,2JAAAA,AAAI,GAeD4I,IAAI,GAAKxH,QAAQ,CAACwH,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAACrE,IAAI,EAAEI,IAAI,EAAEyB,OAAO,EAAExE,OAAO,GAC1D,IAAI6B,UAAU,CACZ9D,KAAK,CAACiI,wJAAAA,AAAM,EACVrD,IAAI,CAACZ,MAAM,EACX,IAAImB,SAAS,CACXrC,MAAM,EACNkC,IAAI,EACJyB,OAAO,wJACPhG,MAAM,CAAK,AAAJ4E,EAAM,GACbpD,OAAO,EAAEuF,eAAe,IAAI,KAAK,CAClC,CACF,EACD5C,IAAI,CAACX,MAAM,CACZ,CAAC;AAGC,MAAM0B,GAAG,GAAA,WAAA,GAAGD,KAAK,CAAC,GAAG,CAAC;AAGtB,MAAMnD,GAAG,GAAA,WAAA,GAAGmD,KAAK,CAAC,KAAK,CAAC;AAGxB,MAAMwD,IAAI,GAAA,WAAA,GAAGxD,KAAK,CAAC,MAAM,CAAC;AAG1B,MAAMyD,GAAG,GAAA,WAAA,GAAGzD,KAAK,CAAC,KAAK,CAAC;AAGxB,MAAM0D,KAAK,GAAA,WAAA,GAAG1D,KAAK,CAAC,OAAO,CAAC;AAG5B,MAAM2D,GAAG,GAAA,WAAA,GAAG3D,KAAK,CAAC,QAAQ,CAAC;AAG3B,MAAM4D,IAAI,GAAA,WAAA,GAAG5D,KAAK,CAAC,MAAM,CAAC;AAG1B,MAAMzD,OAAO,GAAA,WAAA,GAAGyD,KAAK,CAAC,SAAS,CAAC;AAGhC,MAAM6D,GAAG,GAAA,WAAA,2JAAGlJ,OAAAA,AAAI,EAQrB,CAAC,EAAE,CAACuE,IAAI,EAAE4E,CAAC,GACX,IAAI1F,UAAU,sJACZ9D,KAAK,CAAC6B,AAAG,EACP+C,IAAI,CAACZ,MAAM,GACV0B,KAAK,GACJ,IAAIP,SAAS,CACXO,KAAK,CAAC5C,MAAM,EACZ4C,KAAK,CAACV,IAAI,EACVwE,CAAC,uJAACtJ,MAAM,CAACkC,GAAAA,AAAO,EAACsD,KAAK,CAACe,OAAO,iLAAExF,WAAW,CAACyF,CAAU,CAAC,CAAQ,EAC/DhB,KAAK,CAACsB,MAAM,EACZtB,KAAK,CAAC8B,eAAe,CACtB,CACJ,GACDxH,KAAK,CAAC6B,oJAAAA,AAAG,EACP+C,IAAI,CAACX,MAAM,EACX,CAAC,CAACe,IAAI,EAAEC,GAAG,CAAC,GAAK;YAACD,IAAI;YAAEwE,CAAC,CAACvE,GAAU,CAAC;SAAC,CACvC,CACF,CAAC;AAGG,MAAMwE,SAAS,GAAA,WAAA,2JAAGpJ,OAAAA,AAAI,EAQ3B,CAAC,EAAE,CAACuE,IAAI,EAAE4E,CAAC,GACX,IAAI1F,UAAU,sJACZ9D,KAAK,CAAC6B,AAAG,EACP+C,IAAI,CAACZ,MAAM,EACV0B,KAAK,IACJ,IAAIP,SAAS,CACXO,KAAK,CAAC5C,MAAM,EACZ4C,KAAK,CAACV,IAAI,EACVwE,CAAC,CAAC9D,KAAK,CAACe,OAAO,CAAQ,EACvBf,KAAK,CAACsB,MAAM,EACZtB,KAAK,CAAC8B,eAAe,CACtB,CACJ,sJACDxH,KAAK,CAAC6B,CAAAA,AAAG,EACP+C,IAAI,CAACX,MAAM,EACX,CAAC,CAACe,IAAI,EAAEC,GAAG,CAAC,GAAK;YAACD,IAAI;aAAE9E,MAAM,CAACkC,wJAAAA,AAAO,EAACoH,CAAC,CAACvE,GAAU,CAAC,iLAAEhE,WAAW,CAACyF,CAAU,CAAC;SAAC,CAC/E,CACF,CAAC;AAGG,MAAMgD,QAAQ,GAAA,WAAA,0JAAGrJ,QAAI,AAAJA,EAQtB,CAAC,EAAE,CAACuE,IAAI,EAAE4E,CAAC,GAAKC,SAAS,CAAC7E,IAAI,wJAAE1E,MAAM,CAACwJ,IAAAA,AAAQ,EAACF,CAAC,CAAC,CAAC,CAAC;AAG/C,MAAMG,aAAa,GAAA,WAAA,2JAAGtJ,OAAAA,AAAI,EAQ/B,CAAC,EAAE,CAACuE,IAAI,EAAE4E,CAAC,GAAKC,SAAS,CAAC7E,IAAI,wJAAE1E,MAAM,CAACyJ,SAAa,AAAbA,EAAcH,CAAC,CAAC,CAAC,CAAC;AAGpD,MAAMI,QAAQ,GAAA,WAAA,GAAGvJ,+JAAAA,AAAI,EAY1B,CAAC,EAAE,CAACuE,IAAI,EAAEiF,CAAC,EAAEL,CAAC,GAAKC,SAAS,CAAC7E,IAAI,wJAAE1E,MAAM,CAAC0J,IAAAA,AAAQ,EAACC,CAAC,EAAEL,CAAC,CAAC,CAAC,CAAC;AAGrD,MAAMM,SAAS,GAAA,WAAA,GA2ClBzJ,+JAAI,AAAJA,EAAK,CAAC,EAAE,CAACuE,IAAiC,EAAEmF,KAAS,GAAKR,GAAG,CAAC3E,IAAI,wJAAE1E,MAAM,CAAC4J,KAAAA,AAAS,EAACC,KAAK,CAAC,CAAC,CAAC;AAE1F,MAAMC,cAAc,GAAA,WAAA,2JAAG3J,OAAAA,AAAI,EAYhC,CAAC,EAAE,CACHuE,IAA6B,EAC7BqF,GAAM,EACNC,OAA+B,GACiCX,GAAG,CAAC3E,IAAI,wJAAE1E,MAAM,CAAC8J,UAAAA,AAAc,EAACC,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC;AAG1G,MAAMC,oBAAoB,GAAA,WAAA,2JAAG9J,OAAI,AAAJA,EAwBlC,CAAC,EAAE,CACHuE,IAA6B,EAC7BqF,GAAM,EACNxG,MAAqD,GAOlD8F,GAAG,CAAC3E,IAAI,wJAAE1E,MAAM,CAACiK,gBAAoB,AAApBA,EAAqBF,GAAG,EAAExG,MAAM,CAAC,CAAQ,CAAC;AAEhE,MAAM2G,WAAW,GAAGA,CAAA,KAA4C;IAC9D,IAAIvF,MAAM,GAAGiD,KAAgC;IAC7C,OAAO;QACLuC,QAAQA,EAAC3E,KAAK;YACZ,QAAOxF,MAAM,CAACoK,qJAAAA,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGoD,MAAM,CAACpD,MAAM,EAAEa,KAAK,CAAC;YAChC,CAAC,CAAC;QACJ,CAAC;QACDC,GAAGA,EAACX,IAAI,EAAEyB,OAAO,EAAExE,OAAO;YACxB,6JAAO/B,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGc,GAAG,CAACd,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAExE,OAAO,CAAC;YAC9C,CAAC,CAAC;QACJ,CAAC;QACDM,GAAGA,EAACyC,IAAI,EAAEyB,OAAO,EAAExE,OAAO;YACxB,QAAO/B,MAAM,CAACoK,qJAAAA,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGtC,GAAG,CAACsC,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAExE,OAAO,CAAC;YAC9C,CAAC,CAAC;QACJ,CAAC;QACDiH,IAAIA,EAAClE,IAAI,EAAEyB,OAAO,EAAExE,OAAO;YACzB,6JAAO/B,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGqE,IAAI,CAACrE,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAExE,OAAO,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;QACDkH,GAAGA,EAACnE,IAAI,EAAEyB,OAAO,EAAExE,OAAO;YACxB,6JAAO/B,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGsE,GAAG,CAACtE,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAExE,OAAO,CAAC;YAC9C,CAAC,CAAC;QACJ,CAAC;QACDmH,KAAKA,EAACpE,IAAI,EAAEyB,OAAO,EAAExE,OAAO;YAC1B,6JAAO/B,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGuE,KAAK,CAACvE,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAExE,OAAO,CAAC;YAChD,CAAC,CAAC;QACJ,CAAC;QACDoH,GAAGA,EAACrE,IAAI,EAAEyB,OAAO,EAAExE,OAAO;YACxB,QAAO/B,MAAM,CAACoK,qJAAAA,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGwE,GAAG,CAACxE,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAExE,OAAO,CAAC;YAC9C,CAAC,CAAC;QACJ,CAAC;QACDqH,IAAIA,EAACtE,IAAI,EAAEyB,OAAO,EAAExE,OAAO;YACzB,6JAAO/B,MAAM,CAACoK,AAAI,AAAJA,EAAK,MAAK;gBACtBzF,MAAM,GAAGyE,IAAI,CAACzE,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAExE,OAAO,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;QACDA,OAAOA,EAAC+C,IAAI,EAAEyB,OAAO,EAAE8D,IAAI;YACzB,6JAAOrK,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAG5C,OAAO,CAAC4C,MAAM,EAAEG,IAAI,EAAEyB,OAAO,EAAE8D,IAAI,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;QACD1F,MAAM,wJAAE3E,MAAM,CAACoK,AAAI,EAAC,IAAMzF,MAAM,CAAC;QACjCkE,KAAKA,EAAC/D,IAAI,EAAEmD,IAAI;YACd,6JAAOjI,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGkE,KAAK,CAAClE,MAAM,EAAEG,IAAI,EAAEmD,IAAI,CAAC;YACpC,CAAC,CAAC;QACJ,CAAC;QACDa,QAAQA,EAAChE,IAAI,EAAEC,GAAG,EAAEhD,OAAO;YACzB,6JAAO/B,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGmE,QAAQ,CAACnE,MAAM,EAAEG,IAAI,EAAEC,GAAG,EAAEhD,OAAO,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;QACDiG,MAAMA,EAACC,IAAI;YACT,6JAAOjI,MAAM,CAACoK,AAAI,EAAC,MAAK;gBACtBzF,MAAM,GAAGqD,MAAM,CAACrD,MAAM,EAAEsD,IAAI,CAAC;YAC/B,CAAC,CAAC;QACJ;KACD;AACH,CAAC;AAGM,MAAMqC,GAAG,IACcC,EAAQ,GACpC,MAKI;QACF,MAAMC,GAAG,GAAGC,UAAU,CAAC5J,KAAY;QACnC,MAAM6J,KAAK,GAAGF,GAAG,CAACG,eAAe;QACjCH,GAAG,CAACG,eAAe,GAAG,CAAC;QACvB,MAAMC,aAAa,GAAG,IAAIJ,GAAG,EAAE;QAC/BA,GAAG,CAACG,eAAe,GAAGD,KAAK;QAE3B,SAASG,QAAQA,CAAA,GAAI;QACrB,MAAMC,SAAS,GAAGD,QAAwE;QAC1FE,MAAM,CAACC,cAAc,CAACH,QAAQ,EAAEE,MAAM,CAACE,cAAc,EAAClL,OAAO,CAACuB,2JAAAA,AAAU,EAAYiJ,EAAE,CAAC,CAAC,CAAC;QACzFM,QAAQ,CAACxE,GAAG,GAAGkE,EAAE;QACjBQ,MAAM,CAACG,cAAc,CAACL,QAAQ,EAAE,OAAO,EAAE;YACvCxI,GAAGA,CAAA;gBACD,OAAOuI,aAAa,CAACO,KAAK;YAC5B;SACD,CAAC;QACFL,SAAS,CAACM,IAAI,wJAAG9K,KAAK,CAAC8J,CAAAA,AAAI,EAACU,SAAS,EAAEZ,WAAW,CAAC;QACnDY,SAAS,CAACnG,MAAM,yJAAG3E,MAAM,CAACkC,GAAAA,AAAO,EAAC4I,SAAS,GAAGlJ,CAAC,GAAKA,CAAC,CAAC+C,MAAM,CAAC;QAC7DmG,SAAS,CAACzB,GAAG,IAAIC,CAAC,GAChBwB,SAAS,CAAC5G,IAAI,uJACZlE,MAAM,CAACkC,GAAAA,AAAO,EAACoH,CAAC,CAAC,mJACjBhJ,KAAK,CAAC+K,UAAa,uJACnB/K,KAAK,CAACgL,IAAAA,AAAO,EAACR,SAAS,CAACM,IAAI,CAAC,CAC9B;QACHN,SAAS,CAACS,MAAM,IAAIjC,CAAC,GACnBwB,SAAS,CAAC5G,IAAI,uJACZlE,MAAM,CAACkC,GAAAA,AAAO,GAAEN,CAAC,GAAKA,CAAC,CAAC+C,MAAM,CAAC,EAC/B3E,MAAM,CAAC2B,qJAAAA,AAAG,EAAC2H,CAAC,CAAC,mJACbhJ,KAAK,CAACkL,SAAY,uJAClBlL,KAAK,CAACgL,IAAO,AAAPA,EAAQR,SAAS,CAACM,IAAI,CAAC,CAC9B;QACHN,SAAS,CAACW,KAAK,IAAIC,UAAU,GAAKZ,SAAS,CAACS,MAAM,yKAAC3K,QAAW6K,AAAK,EAAN,AAAOC,CAAND,SAAuB,CAAC,CAAC;QACvF,OAAOZ,QAAe;IACxB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5821, "column": 0}, "map": {"version":3,"file":"HttpRouter.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpRouter.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Cause from \"effect/Cause\"\nimport type * as Chunk from \"effect/Chunk\"\nimport type * as Context from \"effect/Context\"\nimport type * as Effect from \"effect/Effect\"\nimport type { FiberRef } from \"effect/FiberRef\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as Layer from \"effect/Layer\"\nimport type * as Option from \"effect/Option\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Scope from \"effect/Scope\"\nimport type { RouterConfig } from \"find-my-way-ts\"\nimport type * as Etag from \"./Etag.js\"\nimport type { FileSystem } from \"./FileSystem.js\"\nimport type * as App from \"./HttpApp.js\"\nimport type * as Method from \"./HttpMethod.js\"\nimport type * as Middleware from \"./HttpMiddleware.js\"\nimport type * as Platform from \"./HttpPlatform.js\"\nimport type * as HttpServer from \"./HttpServer.js\"\nimport type * as Error from \"./HttpServerError.js\"\nimport type * as ServerRequest from \"./HttpServerRequest.js\"\nimport type * as Respondable from \"./HttpServerRespondable.js\"\nimport type * as ServerResponse from \"./HttpServerResponse.js\"\nimport * as internal from \"./internal/httpRouter.js\"\nimport type { Path } from \"./Path.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpRouter<E = never, R = never>\n  extends App.Default<E | Error.RouteNotFound, Exclude<R, RouteContext>>, Inspectable\n{\n  readonly [TypeId]: TypeId\n  readonly routes: Chunk.Chunk<Route<E, R>>\n  readonly mounts: Chunk.Chunk<\n    readonly [\n      prefix: string,\n      httpApp: App.Default<E, R>,\n      options?: { readonly includePrefix?: boolean | undefined } | undefined\n    ]\n  >\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace HttpRouter {\n  /**\n   * @since 1.0.0\n   */\n  export type Provided = RouteContext | ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams | Scope.Scope\n\n  /**\n   * @since 1.0.0\n   */\n  export type ExcludeProvided<A> = Exclude<A, Provided>\n\n  /**\n   * @since 1.0.0\n   */\n  export interface Service<E, R> {\n    readonly router: Effect.Effect<HttpRouter<E, R>>\n    readonly addRoute: (route: Route<E, R>) => Effect.Effect<void>\n    readonly all: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly get: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly post: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly put: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly patch: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly del: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly head: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly options: (\n      path: PathInput,\n      handler: Route.Handler<E, R | Provided>,\n      options?: { readonly uninterruptible?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly mount: (\n      path: `/${string}`,\n      router: HttpRouter<E, R>\n    ) => Effect.Effect<void>\n    readonly mountApp: (\n      path: `/${string}`,\n      router: App.Default<E, R>,\n      options?: { readonly includePrefix?: boolean | undefined } | undefined\n    ) => Effect.Effect<void>\n    readonly concat: (router: HttpRouter<E, R>) => Effect.Effect<void>\n  }\n\n  /**\n   * @since 1.0.0\n   */\n  export type DefaultServices = Platform.HttpPlatform | Etag.Generator | FileSystem | Path\n\n  /**\n   * @since 1.0.0\n   */\n  export interface TagClass<Self, Name extends string, E, R> extends Context.Tag<Self, Service<E, R>> {\n    new(_: never): Context.TagClassShape<Name, Service<E, R>>\n    readonly Live: Layer.Layer<Self>\n    readonly router: Effect.Effect<HttpRouter<E, R>, never, Self>\n    readonly use: <XA, XE, XR>(\n      f: (router: Service<E, R>) => Effect.Effect<XA, XE, XR>\n    ) => Layer.Layer<never, XE, Exclude<XR, Scope.Scope>>\n    readonly unwrap: <XA, XE, XR>(f: (router: HttpRouter<E, R>) => Layer.Layer<XA, XE, XR>) => Layer.Layer<XA, XE, XR>\n    readonly serve: <E = never, R = never>(\n      middleware?: Middleware.HttpMiddleware.Applied<App.Default, E, R>\n    ) => Layer.Layer<\n      never,\n      never,\n      HttpServer.HttpServer | Exclude<R, ServerRequest.HttpServerRequest | Scope.Scope>\n    >\n  }\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const RouteTypeId: unique symbol = internal.RouteTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type RouteTypeId = typeof RouteTypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type PathInput = `/${string}` | \"*\"\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Route<E = never, R = never> extends Inspectable {\n  readonly [RouteTypeId]: RouteTypeId\n  readonly method: Method.HttpMethod | \"*\"\n  readonly path: PathInput\n  readonly handler: Route.Handler<E, R>\n  readonly prefix: Option.Option<string>\n  readonly uninterruptible: boolean\n}\n\n/**\n * @since 1.0.0\n */\nexport declare namespace Route {\n  /**\n   * @since 1.0.0\n   */\n  export type Handler<E, R> = App.HttpApp<\n    Respondable.Respondable,\n    E,\n    R | RouteContext | ServerRequest.ParsedSearchParams\n  >\n\n  /**\n   * @since 1.0.0\n   */\n  export type Middleware<E, R> = App.HttpApp<\n    ServerResponse.HttpServerResponse,\n    E,\n    R | RouteContext | ServerRequest.ParsedSearchParams\n  >\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const RouteContextTypeId: unique symbol = internal.RouteContextTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type RouteContextTypeId = typeof RouteContextTypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface RouteContext {\n  readonly [RouteContextTypeId]: RouteContextTypeId\n  readonly params: Readonly<Record<string, string | undefined>>\n  readonly route: Route<unknown, unknown>\n}\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const RouteContext: Context.Tag<RouteContext, RouteContext> = internal.RouteContext\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const params: Effect.Effect<\n  Readonly<Record<string, string | undefined>>,\n  never,\n  RouteContext\n> = internal.params\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaJson: <\n  R,\n  I extends Partial<{\n    readonly method: Method.HttpMethod\n    readonly url: string\n    readonly cookies: Readonly<Record<string, string | undefined>>\n    readonly headers: Readonly<Record<string, string | undefined>>\n    readonly pathParams: Readonly<Record<string, string | undefined>>\n    readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n    readonly body: any\n  }>,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  Error.RequestError | ParseResult.ParseError,\n  RouteContext | R | ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams\n> = internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaNoBody: <\n  R,\n  I extends Partial<\n    {\n      readonly method: Method.HttpMethod\n      readonly url: string\n      readonly cookies: Readonly<Record<string, string | undefined>>\n      readonly headers: Readonly<Record<string, string | undefined>>\n      readonly pathParams: Readonly<Record<string, string | undefined>>\n      readonly searchParams: Readonly<Record<string, string | ReadonlyArray<string> | undefined>>\n    }\n  >,\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<\n  A,\n  ParseResult.ParseError,\n  R | RouteContext | ServerRequest.HttpServerRequest | ServerRequest.ParsedSearchParams\n> = internal.schemaNoBody\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaParams: <A, I extends Readonly<Record<string, string | ReadonlyArray<string> | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, R | RouteContext | ServerRequest.ParsedSearchParams> =\n  internal.schemaParams\n\n/**\n * @since 1.0.0\n * @category route context\n */\nexport const schemaPathParams: <A, I extends Readonly<Record<string, string | undefined>>, R>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => Effect.Effect<A, ParseResult.ParseError, R | RouteContext> = internal.schemaPathParams\n\n/**\n * @since 1.0.0\n * @category router config\n */\nexport const currentRouterConfig: FiberRef<Partial<RouterConfig>> = internal.currentRouterConfig\n\n/**\n * @since 1.0.0\n * @category router config\n */\nexport const withRouterConfig: {\n  /**\n   * @since 1.0.0\n   * @category router config\n   */\n  (config: Partial<RouterConfig>): <A, E, R>(effect: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>\n  /**\n   * @since 1.0.0\n   * @category router config\n   */\n  <A, E, R>(effect: Effect.Effect<A, E, R>, config: Partial<RouterConfig>): Effect.Effect<A, E, R>\n} = internal.withRouterConfig\n\n/**\n * @since 1.0.0\n * @category router config\n */\nexport const setRouterConfig: (config: Partial<RouterConfig>) => Layer.Layer<never> = internal.setRouterConfig\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: HttpRouter = internal.empty\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromIterable: <R extends Route<any, any>>(\n  routes: Iterable<R>\n) => HttpRouter<R extends Route<infer E, infer _> ? E : never, R extends Route<infer _, infer Env> ? Env : never> =\n  internal.fromIterable\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const makeRoute: <E, R>(\n  method: Method.HttpMethod | \"*\",\n  path: PathInput,\n  handler: Route.Handler<E, R>,\n  options?: { readonly prefix?: string | undefined; readonly uninterruptible?: boolean | undefined } | undefined\n) => Route<E, HttpRouter.ExcludeProvided<R>> = internal.makeRoute\n\n/**\n * @since 1.0.0\n * @category utils\n */\nexport const prefixPath: {\n  /**\n   * @since 1.0.0\n   * @category utils\n   */\n  (prefix: string): (self: string) => string\n  /**\n   * @since 1.0.0\n   * @category utils\n   */\n  (self: string, prefix: string): string\n} = internal.prefixPath\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const prefixAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  (prefix: PathInput): <E, R>(self: HttpRouter<E, R>) => HttpRouter<E, R>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R>(self: HttpRouter<E, R>, prefix: PathInput): HttpRouter<E, R>\n} = internal.prefixAll\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const append: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <R1, E1>(route: Route<E1, R1>): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, E1, R1>(self: HttpRouter<E, R>, route: Route<E1, R1>): HttpRouter<\n    E | E1,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n} = internal.append\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const concat: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <R1, E1>(that: HttpRouter<E1, R1>): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R1 | R>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(self: HttpRouter<E, R>, that: HttpRouter<E1, R1>): HttpRouter<\n    E | E1,\n    R | R1\n  >\n} = internal.concat\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const concatAll: <Routers extends ReadonlyArray<HttpRouter<unknown, unknown>>>(\n  ...routers: Routers\n) => [Routers[number]] extends [HttpRouter<infer E, infer R>] ? HttpRouter<E, R> : never = internal.concatAll\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const mount: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(path: `/${string}`, that: HttpRouter<E1, R1>): <E, R>(self: HttpRouter<E, R>) => HttpRouter<E1 | E, R1 | R>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(self: HttpRouter<E, R>, path: `/${string}`, that: HttpRouter<E1, R1>): HttpRouter<E | E1, R | R1>\n} = internal.mount\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const mountApp: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: { readonly includePrefix?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    | HttpRouter.ExcludeProvided<R1>\n    | HttpRouter.ExcludeProvided<R>\n  >\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: `/${string}`,\n    that: App.Default<E1, R1>,\n    options?: { readonly includePrefix?: boolean | undefined } | undefined\n  ): HttpRouter<\n    E | E1,\n    | HttpRouter.ExcludeProvided<R>\n    | HttpRouter.ExcludeProvided<R1>\n  >\n} = internal.mountApp\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const route: (\n  method: Method.HttpMethod | \"*\"\n) => {\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | Exclude<R1, ServerRequest.HttpServerRequest | RouteContext | Scope.Scope>>\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | Exclude<R1, ServerRequest.HttpServerRequest | RouteContext | Scope.Scope>>\n} = internal.route\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const all: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<\n    E | E1,\n    R | HttpRouter.ExcludeProvided<R1>\n  >\n} = internal.all\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const get: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.get\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const post: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.post\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const patch: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.patch\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const put: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.put\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const del: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.del\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const head: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.head\n\n/**\n * @since 1.0.0\n * @category routing\n */\nexport const options: {\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <R1, E1>(\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | E, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category routing\n   */\n  <E, R, E1, R1>(\n    self: HttpRouter<E, R>,\n    path: PathInput,\n    handler: Route.Handler<E1, R1>,\n    options?: { readonly uninterruptible?: boolean | undefined } | undefined\n  ): HttpRouter<E | E1, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.options\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const use: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(f: (self: Route.Middleware<E, R>) => App.Default<E1, R1>): (self: HttpRouter<E, R>) => HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(\n    self: HttpRouter<E, R>,\n    f: (self: Route.Middleware<E, R>) => App.Default<E1, R1>\n  ): HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n} = internal.use\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const transform: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(\n    f: (self: Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ): (self: HttpRouter<E, R>) => HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, R1, E1>(\n    self: HttpRouter<E, R>,\n    f: (self: Route.Handler<E, R>) => App.HttpApp<Respondable.Respondable, E1, R1>\n  ): HttpRouter<E1, HttpRouter.ExcludeProvided<R1>>\n} = internal.transform\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchAll: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, E2, R2>(f: (e: E) => Route.Handler<E2, R2>): <R>(self: HttpRouter<E, R>) => HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, E2, R2>(self: HttpRouter<E, R>, f: (e: E) => Route.Handler<E2, R2>): HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n} = internal.catchAll\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchAllCause: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, E2, R2>(f: (e: Cause.Cause<E>) => Route.Handler<E2, R2>): <R>(self: HttpRouter<E, R>) => HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, E2, R2>(self: HttpRouter<E, R>, f: (e: Cause.Cause<E>) => Route.Handler<E2, R2>): HttpRouter<E2, R | HttpRouter.ExcludeProvided<R2>>\n} = internal.catchAllCause\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchTag: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <K extends E extends { _tag: string } ? E[\"_tag\"] : never, E, E1, R1>(k: K, f: (e: Extract<E, { _tag: K }>) => Route.Handler<E1, R1>): <R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<E1 | Exclude<E, { _tag: K }>, R | HttpRouter.ExcludeProvided<R1>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, K extends E extends { _tag: string } ? E[\"_tag\"] : never, E1, R1>(\n    self: HttpRouter<E, R>,\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Route.Handler<E1, R1>\n  ): HttpRouter<E1 | Exclude<E, { _tag: K }>, R | HttpRouter.ExcludeProvided<R1>>\n} = internal.catchTag\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const catchTags: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <\n    E,\n    Cases extends E extends { _tag: string }\n      ? { [K in E[\"_tag\"]]+?: ((error: Extract<E, { _tag: K }>) => Route.Handler<any, any>) | undefined }\n      : {}\n  >(cases: Cases): <R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n      }[keyof Cases]\n    >\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <\n    R,\n    E,\n    Cases extends E extends { _tag: string }\n      ? { [K in E[\"_tag\"]]+?: ((error: Extract<E, { _tag: K }>) => Route.Handler<any, any>) | undefined } :\n      {}\n  >(self: HttpRouter<E, R>, cases: Cases): HttpRouter<\n    | Exclude<E, { _tag: keyof Cases }>\n    | {\n      [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, infer E, any> ? E : never\n    }[keyof Cases],\n    | R\n    | HttpRouter.ExcludeProvided<\n      {\n        [K in keyof Cases]: Cases[K] extends (...args: Array<any>) => Effect.Effect<any, any, infer R> ? R : never\n      }[keyof Cases]\n    >\n  >\n} = internal.catchTags\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const provideService: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <T extends Context.Tag<any, any>>(tag: T, service: Context.Tag.Service<T>): <E, R>(self: HttpRouter<E, R>) => HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, T extends Context.Tag<any, any>>(self: HttpRouter<E, R>, tag: T, service: Context.Tag.Service<T>): HttpRouter<E, Exclude<R, Context.Tag.Identifier<T>>>\n} = internal.provideService\n\n/**\n * @since 1.0.0\n * @category combinators\n */\nexport const provideServiceEffect: {\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <T extends Context.Tag<any, any>, R1, E1>(tag: T, effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>): <E, R>(\n    self: HttpRouter<E, R>\n  ) => HttpRouter<\n    E1 | E,\n    | Exclude<R, Context.Tag.Identifier<T>>\n    | Exclude<HttpRouter.ExcludeProvided<R1>, Context.Tag.Identifier<T>>\n  >\n  /**\n   * @since 1.0.0\n   * @category combinators\n   */\n  <E, R, T extends Context.Tag<any, any>, R1, E1>(\n    self: HttpRouter<E, R>,\n    tag: T,\n    effect: Effect.Effect<Context.Tag.Service<T>, E1, R1>\n  ): HttpRouter<\n    E | E1,\n    | Exclude<R, Context.Tag.Identifier<T>>\n    | Exclude<HttpRouter.ExcludeProvided<R1>, Context.Tag.Identifier<T>>\n  >\n} = internal.provideServiceEffect\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport const Tag: <const Name extends string>(\n  id: Name\n) => <Self, R = never, E = unknown>() => HttpRouter.TagClass<Self, Name, E, R | HttpRouter.DefaultServices> =\n  internal.Tag\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport class Default extends Tag(\"@effect/platform/HttpRouter/Default\")<Default>() {}\n"],"names":["internal","TypeId","RouteTypeId","RouteContextTypeId","RouteContext","params","schemaJson","schemaNoBody","schemaParams","schemaPathParams","currentRouterConfig","withRouterConfig","setRouterConfig","empty","fromIterable","makeRoute","prefixPath","prefixAll","append","concat","concatAll","mount","mountApp","route","all","get","post","patch","put","del","head","options","use","transform","catchAll","catchAllCause","catchTag","catchTags","provideService","provideServiceEffect","Tag","Default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAO,KAAKA,QAAQ,MAAM,0BAA0B;;AAO7C,MAAMC,MAAM,mLAAkBD,QAAQ,CAACC,AAAM;AAgI7C,MAAMC,WAAW,mLAAkBF,QAAQ,CAACE,KAAW;AAsDvD,MAAMC,kBAAkB,mLAAkBH,QAAQ,CAACG,YAAkB;AAsBrE,MAAMC,YAAY,mLAA4CJ,QAAQ,CAACI,MAAY;AAMnF,MAAMC,MAAM,mLAIfL,QAAQ,CAACK,AAAM;AAMZ,MAAMC,UAAU,mLAmBnBN,QAAQ,CAACM,IAAU;AAMhB,MAAMC,YAAY,mLAoBrBP,QAAQ,CAACO,MAAY;AAMlB,MAAMC,YAAY,mLAIvBR,QAAQ,CAACQ,MAAY;AAMhB,MAAMC,gBAAgB,mLAGqCT,QAAQ,CAACS,UAAgB;AAMpF,MAAMC,mBAAmB,mLAAoCV,QAAQ,CAACU,aAAmB;AAMzF,MAAMC,gBAAgB,mLAWzBX,QAAQ,CAACW,UAAgB;AAMtB,MAAMC,eAAe,mLAA0DZ,QAAQ,CAACY,SAAe;AAMvG,MAAMC,KAAK,mLAAeb,QAAQ,AAAM,CAALa;AAMnC,MAAMC,YAAY,mLAGvBd,QAAQ,CAACc,MAAY;AAMhB,MAAMC,SAAS,mLAKyBf,QAAQ,CAACe,GAAS;AAM1D,MAAMC,UAAU,mLAWnBhB,QAAQ,CAACgB,IAAU;AAMhB,MAAMC,SAAS,mLAWlBjB,QAAQ,CAACiB,GAAS;AAMf,MAAMC,MAAM,mLAmBflB,QAAQ,CAAO,AAANkB;AAMN,MAAMC,MAAM,mLAgBfnB,QAAQ,CAACmB,AAAM;AAMZ,MAAMC,SAAS,mLAEqEpB,QAAQ,CAACoB,GAAS;AAMtG,MAAMC,KAAK,mLAWdrB,QAAQ,AAAM,CAALqB;AAMN,MAAMC,QAAQ,mLA8BjBtB,QAAQ,CAACsB,EAAQ;AAMd,MAAMC,KAAK,mLAgBdvB,QAAQ,AAAM,CAALuB;AAMN,MAAMC,GAAG,mLA4BZxB,MAAY,EAAJ,CAACwB;AAMN,MAAMC,GAAG,mLAsBZzB,MAAY,EAAJ,CAACyB;AAMN,MAAMC,IAAI,mLAsBb1B,OAAa,CAAL,CAAC0B;AAMN,MAAMC,KAAK,mLAsBd3B,QAAQ,AAAM,CAAL2B;AAMN,MAAMC,GAAG,mLAsBZ5B,MAAY,EAAJ,CAAC4B;AAMN,MAAMC,GAAG,mLAsBZ7B,MAAY,EAAJ,CAAC6B;AAMN,MAAMC,IAAI,mLAsBb9B,OAAa,CAAL,CAAC8B;AAMN,MAAMC,OAAO,mLAsBhB/B,QAAQ,CAAC+B,CAAO;AAMb,MAAMC,GAAG,mLAcZhC,MAAY,EAAJ,CAACgC;AAMN,MAAMC,SAAS,mLAgBlBjC,QAAQ,CAACiC,GAAS;AAMf,MAAMC,QAAQ,mLAWjBlC,QAAQ,CAACkC,EAAQ;AAMd,MAAMC,aAAa,mLAWtBnC,QAAQ,CAACmC,OAAa;AAMnB,MAAMC,QAAQ,mLAiBjBpC,QAAQ,CAACoC,EAAQ;AAMd,MAAMC,SAAS,mLA8ClBrC,QAAQ,CAACqC,GAAS;AAMf,MAAMC,cAAc,mLAWvBtC,QAAQ,CAACsC,QAAc;AAMpB,MAAMC,oBAAoB,mLAyB7BvC,QAAQ,CAACuC,cAAoB;AAM1B,MAAMC,GAAG,mLAGdxC,MAAY,EAAJ,CAACwC;AAML,MAAOC,OAAQ,SAAA,WAAA,GAAQD,GAAG,CAAC,qCAAqC,CAAC,EAAW;AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5944, "column": 0}, "map": {"version":3,"file":"HttpClientResponse.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpClientResponse.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport type * as Schema from \"effect/Schema\"\nimport type { ParseOptions } from \"effect/SchemaAST\"\nimport type * as Stream from \"effect/Stream\"\nimport type { Unify } from \"effect/Unify\"\nimport type * as Cookies from \"./Cookies.js\"\nimport type * as Error from \"./HttpClientError.js\"\nimport type * as ClientRequest from \"./HttpClientRequest.js\"\nimport type * as IncomingMessage from \"./HttpIncomingMessage.js\"\nimport * as internal from \"./internal/httpClientResponse.js\"\n\nexport {\n  /**\n   * @since 1.0.0\n   * @category schema\n   */\n  schemaBodyJson,\n  /**\n   * @since 1.0.0\n   * @category schema\n   */\n  schemaBodyUrlParams,\n  /**\n   * @since 1.0.0\n   * @category schema\n   */\n  schemaHeaders\n} from \"./HttpIncomingMessage.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface HttpClientResponse extends IncomingMessage.HttpIncomingMessage<Error.ResponseError> {\n  readonly [TypeId]: TypeId\n  readonly request: ClientRequest.HttpClientRequest\n  readonly status: number\n  readonly cookies: Cookies.Cookies\n  readonly formData: Effect.Effect<FormData, Error.ResponseError>\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fromWeb: (request: ClientRequest.HttpClientRequest, source: Response) => HttpClientResponse =\n  internal.fromWeb\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaJson: <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n    readonly body?: unknown\n  },\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (self: HttpClientResponse) => Effect.Effect<A, Error.ResponseError | ParseResult.ParseError, R> =\n  internal.schemaJson\n\n/**\n * @since 1.0.0\n * @category schema\n */\nexport const schemaNoBody: <\n  R,\n  I extends {\n    readonly status?: number | undefined\n    readonly headers?: Readonly<Record<string, string>> | undefined\n  },\n  A\n>(\n  schema: Schema.Schema<A, I, R>,\n  options?: ParseOptions | undefined\n) => (self: HttpClientResponse) => Effect.Effect<A, ParseResult.ParseError, R> = internal.schemaNoBody\n\n/**\n * @since 1.0.0\n * @category accessors\n */\nexport const stream: <E, R>(\n  effect: Effect.Effect<HttpClientResponse, E, R>\n) => Stream.Stream<Uint8Array, Error.ResponseError | E, R> = internal.stream\n\n/**\n * @since 1.0.0\n * @category pattern matching\n */\nexport const matchStatus: {\n  /**\n   * @since 1.0.0\n   * @category pattern matching\n   */\n  <\n    const Cases extends {\n      readonly [status: number]: (_: HttpClientResponse) => any\n      readonly \"2xx\"?: (_: HttpClientResponse) => any\n      readonly \"3xx\"?: (_: HttpClientResponse) => any\n      readonly \"4xx\"?: (_: HttpClientResponse) => any\n      readonly \"5xx\"?: (_: HttpClientResponse) => any\n      readonly orElse: (_: HttpClientResponse) => any\n    }\n  >(cases: Cases): (self: HttpClientResponse) => Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never\n  /**\n   * @since 1.0.0\n   * @category pattern matching\n   */\n  <\n    const Cases extends {\n      readonly [status: number]: (_: HttpClientResponse) => any\n      readonly \"2xx\"?: (_: HttpClientResponse) => any\n      readonly \"3xx\"?: (_: HttpClientResponse) => any\n      readonly \"4xx\"?: (_: HttpClientResponse) => any\n      readonly \"5xx\"?: (_: HttpClientResponse) => any\n      readonly orElse: (_: HttpClientResponse) => any\n    }\n  >(self: HttpClientResponse, cases: Cases): Cases[keyof Cases] extends (_: any) => infer R ? Unify<R> : never\n} = internal.matchStatus\n\n/**\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatus: {\n  /**\n   * @since 1.0.0\n   * @category filters\n   */\n  (f: (status: number) => boolean): (self: HttpClientResponse) => Effect.Effect<HttpClientResponse, Error.ResponseError>\n  /**\n   * @since 1.0.0\n   * @category filters\n   */\n  (self: HttpClientResponse, f: (status: number) => boolean): Effect.Effect<HttpClientResponse, Error.ResponseError>\n} = internal.filterStatus\n\n/**\n * @since 1.0.0\n * @category filters\n */\nexport const filterStatusOk: (self: HttpClientResponse) => Effect.Effect<HttpClientResponse, Error.ResponseError> =\n  internal.filterStatusOk\n"],"names":["internal","schemaBodyJson","schemaBodyUrlParams","schemaHeaders","TypeId","fromWeb","schemaJson","schemaNoBody","stream","matchStatus","filterStatus","filterStatusOk"],"mappings":";;;;;;;;;;AAaA,OAAO,KAAKA,QAAQ,MAAM,kCAAkC;;;AAwBrD,MAAMI,MAAM,2LAAkBJ,QAAQ,CAACI,AAAM;AAwB7C,MAAMC,OAAO,2LAClBL,QAAQ,CAACK,CAAO;AAMX,MAAMC,UAAU,2LAYrBN,QAAQ,CAACM,IAAU;AAMd,MAAMC,YAAY,2LAUwDP,QAAQ,CAACO,MAAY;AAM/F,MAAMC,MAAM,2LAE0CR,QAAQ,CAACQ,AAAM;AAMrE,MAAMC,WAAW,2LA6BpBT,QAAQ,CAACS,KAAW;AAMjB,MAAMC,YAAY,2LAWrBV,QAAQ,CAACU,MAAY;AAMlB,MAAMC,cAAc,2LACzBX,QAAQ,CAACW,QAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6031, "column": 0}, "map": {"version":3,"file":"HttpBody.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/HttpBody.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport type * as Effect from \"effect/Effect\"\nimport type { Inspectable } from \"effect/Inspectable\"\nimport type * as ParseResult from \"effect/ParseResult\"\nimport * as Predicate from \"effect/Predicate\"\nimport type * as Schema from \"effect/Schema\"\nimport type * as Stream_ from \"effect/Stream\"\nimport type * as PlatformError from \"./Error.js\"\nimport type * as FileSystem from \"./FileSystem.js\"\nimport * as internal from \"./internal/httpBody.js\"\nimport type * as UrlParams from \"./UrlParams.js\"\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const TypeId: unique symbol = internal.TypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 1.0.0\n * @category refinements\n */\nexport const isHttpBody = (u: unknown): u is HttpBody => Predicate.hasProperty(u, TypeId)\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport type HttpBody = Empty | Raw | Uint8Array | FormData | Stream\n\n/**\n * @since 1.0.0\n */\nexport declare namespace HttpBody {\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface Proto extends Inspectable {\n    readonly [TypeId]: TypeId\n    readonly _tag: string\n    readonly contentType?: string | undefined\n    readonly contentLength?: number | undefined\n  }\n\n  /**\n   * @since 1.0.0\n   * @category models\n   */\n  export interface FileLike {\n    readonly name: string\n    readonly lastModified: number\n    readonly size: number\n    readonly stream: () => unknown\n    readonly type: string\n  }\n}\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport const ErrorTypeId: unique symbol = internal.ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category type ids\n */\nexport type ErrorTypeId = typeof ErrorTypeId\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport interface HttpBodyError {\n  readonly [ErrorTypeId]: ErrorTypeId\n  readonly _tag: \"HttpBodyError\"\n  readonly reason: ErrorReason\n}\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport const HttpBodyError: (reason: ErrorReason) => HttpBodyError = internal.HttpBodyError\n\n/**\n * @since 1.0.0\n * @category errors\n */\nexport type ErrorReason = {\n  readonly _tag: \"JsonError\"\n  readonly error: unknown\n} | {\n  readonly _tag: \"SchemaError\"\n  readonly error: ParseResult.ParseError\n}\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Empty extends HttpBody.Proto {\n  readonly _tag: \"Empty\"\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const empty: Empty = internal.empty\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Raw extends HttpBody.Proto {\n  readonly _tag: \"Raw\"\n  readonly body: unknown\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const raw: (\n  body: unknown,\n  options?: {\n    readonly contentType?: string | undefined\n    readonly contentLength?: number | undefined\n  } | undefined\n) => Raw = internal.raw\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Uint8Array extends HttpBody.Proto {\n  readonly _tag: \"Uint8Array\"\n  readonly body: globalThis.Uint8Array\n  readonly contentType: string\n  readonly contentLength: number\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const uint8Array: (body: globalThis.Uint8Array, contentType?: string) => Uint8Array = internal.uint8Array\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const text: (body: string, contentType?: string) => Uint8Array = internal.text\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const unsafeJson: (body: unknown) => Uint8Array = internal.unsafeJson\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const json: (body: unknown) => Effect.Effect<Uint8Array, HttpBodyError> = internal.json\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const jsonSchema: <A, I, R>(\n  schema: Schema.Schema<A, I, R>\n) => (body: A) => Effect.Effect<Uint8Array, HttpBodyError, R> = internal.jsonSchema\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const urlParams: (urlParams: UrlParams.UrlParams) => Uint8Array = internal.urlParams\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface FormData extends HttpBody.Proto {\n  readonly _tag: \"FormData\"\n  readonly formData: globalThis.FormData\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const formData: (body: globalThis.FormData) => FormData = internal.formData\n\n/**\n * @since 1.0.0\n * @category models\n */\nexport interface Stream extends HttpBody.Proto {\n  readonly _tag: \"Stream\"\n  readonly stream: Stream_.Stream<globalThis.Uint8Array, unknown>\n  readonly contentType: string\n  readonly contentLength?: number | undefined\n}\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const stream: (\n  body: Stream_.Stream<globalThis.Uint8Array, unknown>,\n  contentType?: string,\n  contentLength?: number,\n  etag?: string\n) => Stream = internal.stream\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const file: (\n  path: string,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n) => Effect.Effect<Stream, PlatformError.PlatformError, FileSystem.FileSystem> = internal.file\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fileInfo: (\n  path: string,\n  info: FileSystem.File.Info,\n  options?: FileSystem.StreamOptions & { readonly contentType?: string }\n) => Effect.Effect<Stream, PlatformError.PlatformError, FileSystem.FileSystem> = internal.fileInfo\n\n/**\n * @since 1.0.0\n * @category constructors\n */\nexport const fileWeb: (file: HttpBody.FileLike) => Stream = internal.fileWeb\n"],"names":["Predicate","internal","TypeId","isHttpBody","u","hasProperty","ErrorTypeId","HttpBodyError","empty","raw","uint8Array","text","unsafeJson","json","jsonSchema","urlParams","formData","stream","file","fileInfo","fileWeb"],"mappings":";;;;;;;;;;;;;;;;;;;AAMA,OAAO,KAAKA,SAAS,MAAM,kBAAkB;AAK7C,OAAO,KAAKC,QAAQ,MAAM,wBAAwB;;;AAO3C,MAAMC,MAAM,iLAAkBD,QAAQ,CAACC,AAAM;AAY7C,MAAMC,UAAU,IAAIC,CAAU,4JAAoBJ,SAAS,CAACK,IAAAA,AAAW,EAACD,CAAC,EAAEF,MAAM,CAAC;AAwClF,MAAMI,WAAW,iLAAkBL,QAAQ,CAACK,KAAW;AAsBvD,MAAMC,aAAa,gLAA2CN,QAAQ,CAACM,QAAa;AAyBpF,MAAMC,KAAK,iLAAUP,QAAQ,AAAM,CAALO;AAe9B,MAAMC,GAAG,iLAMLR,MAAY,EAAJ,CAACQ;AAiBb,MAAMC,UAAU,iLAAsET,QAAQ,CAACS,IAAU;AAMzG,MAAMC,IAAI,iLAAuDV,OAAa,CAAL,CAACU;AAM1E,MAAMC,UAAU,GAAkCX,QAAQ,CAACW,kLAAU;AAMrE,MAAMC,IAAI,iLAAgEZ,OAAa,CAAL,CAACY;AAMnF,MAAMC,UAAU,iLAEyCb,QAAQ,CAACa,IAAU;AAM5E,MAAMC,SAAS,iLAAmDd,QAAQ,CAACc,GAAS;AAepF,MAAMC,QAAQ,iLAA4Cf,QAAQ,CAACe,EAAQ;AAiB3E,MAAMC,MAAM,iLAKLhB,QAAQ,CAACgB,AAAM;AAMtB,MAAMC,IAAI,iLAGgEjB,OAAa,CAAL,CAACiB;AAMnF,MAAMC,QAAQ,iLAI4DlB,QAAQ,CAACkB,EAAQ;AAM3F,MAAMC,OAAO,iLAAwCnB,QAAQ,CAACmB,CAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6087, "column": 0}, "map": {"version":3,"file":"fetchHttpClient.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/internal/fetchHttpClient.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\"\nimport * as FiberRef from \"effect/FiberRef\"\nimport * as Stream from \"effect/Stream\"\nimport * as Headers from \"../Headers.js\"\nimport type * as Client from \"../HttpClient.js\"\nimport * as Error from \"../HttpClientError.js\"\nimport * as client from \"./httpClient.js\"\nimport * as internalResponse from \"./httpClientResponse.js\"\n\n/** @internal */\nexport const fetchTagKey = \"@effect/platform/FetchHttpClient/Fetch\"\n/** @internal */\nexport const requestInitTagKey = \"@effect/platform/FetchHttpClient/FetchOptions\"\n\nconst fetch: Client.HttpClient = client.make((request, url, signal, fiber) => {\n  const context = fiber.getFiberRef(FiberRef.currentContext)\n  const fetch: typeof globalThis.fetch = context.unsafeMap.get(fetchTagKey) ?? globalThis.fetch\n  const options: RequestInit = context.unsafeMap.get(requestInitTagKey) ?? {}\n  const headers = options.headers ? Headers.merge(Headers.fromInput(options.headers), request.headers) : request.headers\n  const send = (body: BodyInit | undefined) =>\n    Effect.map(\n      Effect.tryPromise({\n        try: () =>\n          fetch(url, {\n            ...options,\n            method: request.method,\n            headers,\n            body,\n            duplex: request.body._tag === \"Stream\" ? \"half\" : undefined,\n            signal\n          } as any),\n        catch: (cause) =>\n          new Error.RequestError({\n            request,\n            reason: \"Transport\",\n            cause\n          })\n      }),\n      (response) => internalResponse.fromWeb(request, response)\n    )\n  switch (request.body._tag) {\n    case \"Raw\":\n    case \"Uint8Array\":\n      return send(request.body.body as any)\n    case \"FormData\":\n      return send(request.body.formData)\n    case \"Stream\":\n      return Effect.flatMap(Stream.toReadableStreamEffect(request.body.stream), send)\n  }\n  return send(undefined)\n})\n\n/** @internal */\nexport const layer = client.layerMergedContext(Effect.succeed(fetch))\n"],"names":["Effect","FiberRef","Stream","Headers","Error","client","internalResponse","fetchTagKey","requestInitTagKey","fetch","make","request","url","signal","fiber","context","getFiberRef","currentContext","unsafeMap","get","globalThis","options","headers","merge","fromInput","send","body","map","tryPromise","try","method","duplex","_tag","undefined","catch","cause","RequestError","reason","response","fromWeb","formData","flatMap","toReadableStreamEffect","stream","layer","layerMergedContext","succeed"],"mappings":";;;;;AAAA,OAAO,KAAKA,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,OAAO,MAAM,eAAe;AAExC,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AAC9C,OAAO,KAAKC,MAAM,MAAM,iBAAiB;AACzC,OAAO,KAAKC,gBAAgB,MAAM,yBAAyB;;;;;;;;AAGpD,MAAMC,WAAW,GAAG,wCAAwC;AAE5D,MAAMC,iBAAiB,GAAG,+CAA+C;AAEhF,MAAMC,KAAK,GAAA,WAAA,sLAAsBJ,MAAM,CAACK,CAAAA,AAAI,EAAC,CAACC,OAAO,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,KAAI;IAC3E,MAAMC,OAAO,GAAGD,KAAK,CAACE,WAAW,qJAACf,QAAQ,CAACgB,QAAc,CAAC;IAC1D,MAAMR,KAAK,GAA4BM,OAAO,CAACG,SAAS,CAACC,GAAG,CAACZ,WAAW,CAAC,IAAIa,UAAU,CAACX,KAAK;IAC7F,MAAMY,OAAO,GAAgBN,OAAO,CAACG,SAAS,CAACC,GAAG,CAACX,iBAAiB,CAAC,IAAI,CAAA,CAAE;IAC3E,MAAMc,OAAO,GAAGD,OAAO,CAACC,OAAO,wKAAGnB,OAAO,CAACoB,AAAK,GAACpB,OAAO,CAACqB,wKAAAA,AAAS,EAACH,OAAO,CAACC,OAAO,CAAC,EAAEX,OAAO,CAACW,OAAO,CAAC,GAAGX,OAAO,CAACW,OAAO;IACtH,MAAMG,IAAI,IAAIC,IAA0B,yJACtC1B,MAAM,AAAC2B,AAAG,CAAHA,EACL3B,MAAM,CAAC4B,2JAAAA,AAAU,EAAC;YAChBC,GAAG,EAAEA,CAAA,GACHpB,KAAK,CAACG,GAAG,EAAE;oBACT,GAAGS,OAAO;oBACVS,MAAM,EAAEnB,OAAO,CAACmB,MAAM;oBACtBR,OAAO;oBACPI,IAAI;oBACJK,MAAM,EAAEpB,OAAO,CAACe,IAAI,CAACM,IAAI,KAAK,QAAQ,GAAG,MAAM,GAAGC,SAAS;oBAC3DpB;iBACM,CAAC;YACXqB,KAAK,GAAGC,KAAK,GACX,6KAAI/B,KAAK,CAACgC,SAAY,CAAC;oBACrBzB,OAAO;oBACP0B,MAAM,EAAE,WAAW;oBACnBF;iBACD;SACJ,CAAC,GACDG,QAAQ,+LAAKhC,UAAiBiC,AAAO,EAAC5B,IAAT,CAAC4B,EAAe,EAAED,QAAQ,CAAC,CAC1D;IACH,OAAQ3B,OAAO,CAACe,IAAI,CAACM,IAAI;QACvB,KAAK,KAAK;QACV,KAAK,YAAY;YACf,OAAOP,IAAI,CAACd,OAAO,CAACe,IAAI,CAACA,IAAW,CAAC;QACvC,KAAK,UAAU;YACb,OAAOD,IAAI,CAACd,OAAO,CAACe,IAAI,CAACc,QAAQ,CAAC;QACpC,KAAK,QAAQ;YACX,OAAOxC,MAAM,CAACyC,yJAAAA,AAAO,wJAACvC,MAAM,CAACwC,kBAAAA,AAAsB,EAAC/B,OAAO,CAACe,IAAI,CAACiB,MAAM,CAAC,EAAElB,IAAI,CAAC;IACnF;IACA,OAAOA,IAAI,CAACQ,SAAS,CAAC;AACxB,CAAC,CAAC;AAGK,MAAMW,KAAK,GAAA,WAAA,uLAAGvC,MAAM,CAACwC,cAAAA,AAAkB,EAAA,WAAA,yJAAC7C,MAAM,CAAC8C,GAAAA,AAAO,EAACrC,KAAK,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6146, "column": 0}, "map": {"version":3,"file":"FetchHttpClient.js","sources":["file:///Users/nathan/Desktop/next/showStack/node_modules/%40effect/platform/src/FetchHttpClient.ts"],"sourcesContent":["/**\n * @since 1.0.0\n */\nimport * as Context from \"effect/Context\"\nimport type * as Layer from \"effect/Layer\"\nimport type { HttpClient } from \"./HttpClient.js\"\nimport * as internal from \"./internal/fetchHttpClient.js\"\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport class Fetch extends Context.Tag(internal.fetchTagKey)<Fetch, typeof globalThis.fetch>() {}\n\n/**\n * @since 1.0.0\n * @category tags\n */\nexport class RequestInit extends Context.Tag(internal.requestInitTagKey)<RequestInit, globalThis.RequestInit>() {}\n\n/**\n * @since 1.0.0\n * @category layers\n */\nexport const layer: Layer.Layer<HttpClient> = internal.layer\n"],"names":["Context","internal","Fetch","Tag","fetchTagKey","RequestInit","requestInitTagKey","layer"],"mappings":"AAAA;;;;;;;AAGA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AAGzC,OAAO,KAAKC,QAAQ,MAAM,+BAA+B;;;AAMnD,MAAOC,KAAM,SAAA,WAAA,0JAAQF,MAAQG,AAAG,CAAJ,CAACA,qLAAIF,QAAQ,CAACG,KAAW,CAAC,EAAkC;AAAA;AAMxF,MAAOC,WAAY,SAAA,WAAA,0JAAQL,MAAQG,AAAG,CAAJ,CAACA,qLAAIF,QAAQ,CAACK,WAAiB,CAAC,EAAuC;AAAA;AAMxG,MAAMC,KAAK,wLAA4BN,QAAQ,AAAM,CAALM","ignoreList":[0],"debugId":null}}]
}